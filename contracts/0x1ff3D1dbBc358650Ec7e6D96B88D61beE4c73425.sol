contract main {




// =====================  Runtime code  =====================


#
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - initialize()
#
const decimals = 18


uint8 paused;
mapping of uint256 balanceOf;
mapping of uint256 allowance;
uint256 totalSupply;
array of struct stor104;
array of struct stor105;
address owner;
address liquidityPoolManagerImplementationAddress;
address walletObserverImplementationAddress;
address sub_ddd14d5aAddress;
uint256 sub_817ca11a;
uint256 sub_fa130fdf;
uint256 sub_6a9c5462;
uint256 sub_2115ec8e;
uint256 sub_eaf447d4;
uint256 sub_775c5aa7;
uint256 sub_a731333a;
mapping of uint256 sub_34c43a09;
mapping of uint8 stor411;
uint256 sub_5ae60c12;
mapping of uint256 sub_5134563f;
mapping of uint8 stor414;
array of uint256 sub_f52bfb76;
array of uint256 sub_81170b98;

function totalSupply() payable {
    return totalSupply
}

function sub_2115ec8e(?) payable {
    return sub_2115ec8e
}

function sub_34c43a09(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_34c43a09[arg1]
}

function sub_41d6e7da(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor411[arg1])
}

function sub_5134563f(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_5134563f[arg1]
}

function sub_5ae60c12(?) payable {
    return sub_5ae60c12
}

function paused() payable {
    return bool(paused)
}

function sub_6a9c5462(?) payable {
    return sub_6a9c5462
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function sub_775c5aa7(?) payable {
    return sub_775c5aa7
}

function sub_81170b98(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_81170b98.length
    return sub_81170b98[arg1]
}

function sub_817ca11a(?) payable {
    return sub_817ca11a
}

function sub_84b59fb5(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor414[arg1])
}

function owner() payable {
    return owner
}

function sub_a731333a(?) payable {
    return sub_a731333a
}

function getWalletObserverImplementation() payable {
    return walletObserverImplementationAddress
}

function getLiquidityPoolManagerImplementation() payable {
    return liquidityPoolManagerImplementationAddress
}

function allowance(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return allowance[address(arg1)][address(arg2)]
}

function sub_ddd14d5a(?) payable {
    return sub_ddd14d5aAddress
}

function sub_eaf447d4(?) payable {
    return sub_eaf447d4
}

function sub_f52bfb76(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < sub_f52bfb76.length
    return sub_f52bfb76[arg1]
}

function sub_fa130fdf(?) payable {
    return sub_fa130fdf
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_d52ed397(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_5ae60c12 = arg1
}

function recoverLostAVAX() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_fa9c4be3(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'block count to monitor should be greater than 0'
    sub_a731333a = arg1
}

function sub_d9b3e558(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'fee for troop owners shoud not be greater than 100'
    sub_775c5aa7 = arg1
}

function sub_b98da7ad(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == bool(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0, 'null address can not be a bot'
    stor414[address(arg1)] = uint8(bool(arg2))
    sub_5134563f[address(arg1)] = 0
}

function sub_c35fae98(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Implementations: TroopsManager is not set'
    sub_ddd14d5aAddress = address(arg1)
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function recoverLostTokens(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.0xa9059cbb with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function changeWalletObserverImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'WalletObserver: You can only set 0x0 or a contract address as a new implementation'
    walletObserverImplementationAddress = arg1
    emit UpdateWalletObserver(walletObserverImplementationAddress, arg1);
}

function changeLiquidityPoolManagerImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'LiquidityPoolManagerUpgradeable: You can only set 0x0 or a contract address as a new implementation'
    liquidityPoolManagerImplementationAddress = arg1
    emit UpdateLiquidityPoolManager(liquidityPoolManagerImplementationAddress, arg1);
}

function increaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] > !arg2:
        revert with 0, 17
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] + arg2
    emit Approval((allowance[msg.sender][address(arg1)] + arg2), msg.sender, arg1);
    return 1
}

function decreaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[msg.sender][address(arg1)] < arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: decreased allowance below zero'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
    allowance[address(msg.sender)][address(arg1)] = allowance[msg.sender][address(arg1)] - arg2
    emit Approval((allowance[msg.sender][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function sub_d3f9384c(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if sub_817ca11a > !arg2:
        revert with 0, 17
    sub_817ca11a += arg2
    if liquidityPoolManagerImplementationAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'raw transfer not by liquidity manager'
    if address(arg1):
        if address(arg1):
            if balanceOf[address(arg1)] < arg2:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ARMY: burn amount exceeds balance'
            balanceOf[address(arg1)] -= arg2
            if totalSupply < arg2:
                revert with 0, 17
            totalSupply -= arg2
            emit 0xfeddf252: arg2, address(arg1), 0
}

function sub_a665e96d(?) payable {
    require calldata.size - 4 >= 128
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 >= 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'fee for troop owners shoud be less than 100'
    if arg2 >= 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'fee for non-troop owners shoud be less than 100'
    if arg3 >= 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'fee for troop owners shoud be less than 100'
    if arg4 >= 100:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'fee for non-troop owners shoud be less than 100'
    sub_fa130fdf = arg1
    sub_6a9c5462 = arg2
    sub_2115ec8e = arg3
    sub_eaf447d4 = arg4
}

function sub_2f5a7512(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size > cd[4] + 35
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    s = 128
    idx = cd[4] + 36
    while idx < cd[4] + (32 * ('cd', 4).length) + 36:
        mem[s] = cd[idx]
        s = s + 32
        idx = idx + 32
        continue 
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 4).length) + 97] = ('cd', 4).length
    if ('cd', 4).length:
        mem[ceil32(32 * ('cd', 4).length) + 129 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    sub_81170b98.length = ('cd', 4).length
    if not ('cd', 4).length:
        idx = 0
        while sub_81170b98.length > idx:
            sub_81170b98[idx] = 0
            idx = idx + 1
            continue 
    else:
        s = 0
        idx = ceil32(32 * ('cd', 4).length) + 129
        while ceil32(32 * ('cd', 4).length) + (32 * ('cd', 4).length) + 129 > idx:
            sub_81170b98[s] = mem[idx]
            s = s + 1
            idx = idx + 32
            continue 
        idx = Mask(251, 0, (32 * ('cd', 4).length) + 31) >> 5
        while sub_81170b98.length > idx:
            sub_81170b98[idx] = 0
            idx = idx + 1
            continue 
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        if idx >= sub_81170b98.length:
            revert with 0, 50
        mem[0] = 416
        sub_81170b98[idx] = mem[(32 * idx) + 128]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_60bf2d0e(?) payable {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require calldata.size > cd[4] + 35
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if ceil32(32 * ('cd', 4).length) + 97 < 96 or ceil32(32 * ('cd', 4).length) + 97 > test266151307():
        revert with 0, 65
    mem[96] = ('cd', 4).length
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    s = 128
    idx = cd[4] + 36
    while idx < cd[4] + (32 * ('cd', 4).length) + 36:
        mem[s] = cd[idx]
        s = s + 32
        idx = idx + 32
        continue 
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    mem[ceil32(32 * ('cd', 4).length) + 97] = ('cd', 4).length
    if ('cd', 4).length:
        mem[ceil32(32 * ('cd', 4).length) + 129 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    sub_f52bfb76.length = ('cd', 4).length
    if not ('cd', 4).length:
        idx = 0
        while sub_f52bfb76.length > idx:
            sub_f52bfb76[idx] = 0
            idx = idx + 1
            continue 
    else:
        s = 0
        idx = ceil32(32 * ('cd', 4).length) + 129
        while ceil32(32 * ('cd', 4).length) + (32 * ('cd', 4).length) + 129 > idx:
            sub_f52bfb76[s] = mem[idx]
            s = s + 1
            idx = idx + 32
            continue 
        idx = Mask(251, 0, (32 * ('cd', 4).length) + 31) >> 5
        while sub_f52bfb76.length > idx:
            sub_f52bfb76[idx] = 0
            idx = idx + 1
            continue 
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        if idx >= sub_f52bfb76.length:
            revert with 0, 50
        mem[0] = 415
        sub_f52bfb76[idx] = mem[(32 * idx) + 128]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function sub_983785c7(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    staticcall sub_ddd14d5aAddress.0x70a08231 with:
            gas gas_remaining wei
           args address(arg1)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        if sub_f52bfb76.length:
            if sub_f52bfb76.length != sub_81170b98.length:
                revert with 0, 'deduct information invalid'
            idx = sub_f52bfb76.length
            while idx:
                if idx < 1:
                    revert with 0, 17
                if idx - 1 >= sub_f52bfb76.length:
                    revert with 0, 50
                mem[0] = 415
                if balanceOf[address(arg1)] < sub_f52bfb76[idx]:
                    if not idx:
                        revert with 0, 17
                    idx = idx - 1
                    continue 
                if idx - 1 >= sub_81170b98.length:
                    revert with 0, 50
                if sub_fa130fdf < sub_81170b98[idx]:
                    return 0
                return (sub_fa130fdf - sub_81170b98[idx])
            if sub_fa130fdf < 0:
                return 0
        return sub_fa130fdf
    if sub_f52bfb76.length:
        if sub_f52bfb76.length != sub_81170b98.length:
            revert with 0, 'deduct information invalid'
        idx = sub_f52bfb76.length
        while idx:
            if idx < 1:
                revert with 0, 17
            if idx - 1 >= sub_f52bfb76.length:
                revert with 0, 50
            mem[0] = 415
            if balanceOf[address(arg1)] < sub_f52bfb76[idx]:
                if not idx:
                    revert with 0, 17
                idx = idx - 1
                continue 
            if idx - 1 >= sub_81170b98.length:
                revert with 0, 50
            if sub_6a9c5462 < sub_81170b98[idx]:
                return 0
            return (sub_6a9c5462 - sub_81170b98[idx])
        if sub_6a9c5462 < 0:
            return 0
    return sub_6a9c5462
}

function sub_4064b5f8(?) payable {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if liquidityPoolManagerImplementationAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'raw transfer not by liquidity manager'
    if not address(arg1):
        if address(arg2):
            if totalSupply > !arg3:
                revert with 0, 17
            totalSupply += arg3
            if balanceOf[address(arg2)] > !arg3:
                revert with 0, 17
            balanceOf[address(arg2)] += arg3
            emit 0xfeddf252: arg3, 0, address(arg2)
    else:
        if not address(arg2):
            if not address(arg1):
                if address(arg2):
                    if totalSupply > !arg3:
                        revert with 0, 17
                    totalSupply += arg3
                    if balanceOf[address(arg2)] > !arg3:
                        revert with 0, 17
                    balanceOf[address(arg2)] += arg3
                    emit 0xfeddf252: arg3, 0, address(arg2)
            else:
                if not address(arg2):
                    if balanceOf[address(arg1)] < arg3:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ARMY: burn amount exceeds balance'
                    balanceOf[address(arg1)] -= arg3
                    if totalSupply < arg3:
                        revert with 0, 17
                    totalSupply -= arg3
                    emit 0xfeddf252: arg3, address(arg1), 0
                else:
                    if not address(arg1):
                        if address(arg2):
                            if totalSupply > !arg3:
                                revert with 0, 17
                            totalSupply += arg3
                            if balanceOf[address(arg2)] > !arg3:
                                revert with 0, 17
                            balanceOf[address(arg2)] += arg3
                            emit 0xfeddf252: arg3, 0, address(arg2)
        else:
            if balanceOf[address(arg1)] < arg3:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ARMY: transfer amount exceeds balance'
            balanceOf[address(arg1)] -= arg3
            if balanceOf[address(arg2)] > !arg3:
                revert with 0, 17
            balanceOf[address(arg2)] += arg3
            emit 0xfeddf252: arg3, address(arg1), address(arg2)
            if walletObserverImplementationAddress:
                if liquidityPoolManagerImplementationAddress == address(arg2):
                    staticcall liquidityPoolManagerImplementationAddress.getRouter() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    staticcall liquidityPoolManagerImplementationAddress.getPair() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                    call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
                         gas gas_remaining wei
                        args address(ext_call.return_data[0]), address(arg1), address(ext_call.return_data[0]), arg3
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function name() payable {
    if bool(stor104.length):
        if bool(stor104.length) == uint255(stor104.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor104.length):
            if bool(stor104.length) == uint255(stor104.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor104.length):
                if 31 < uint255(stor104.length) * 0.5:
                    mem[128] = uint256(stor104.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor104.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor104[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor104.length), data=mem[128 len ceil32(uint255(stor104.length) * 0.5)])
                mem[128] = 256 * stor104.length.field_8
        else:
            if bool(stor104.length) == stor104.length.field_1 < 32:
                revert with 0, 34
            if stor104.length.field_1:
                if 31 < stor104.length.field_1:
                    mem[128] = uint256(stor104.field_0)
                    idx = 128
                    s = 0
                    while stor104.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor104[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor104.length), data=mem[128 len ceil32(uint255(stor104.length) * 0.5)])
                mem[128] = 256 * stor104.length.field_8
        mem[ceil32(uint255(stor104.length) * 0.5) + 192 len ceil32(uint255(stor104.length) * 0.5)] = mem[128 len ceil32(uint255(stor104.length) * 0.5)]
        if ceil32(uint255(stor104.length) * 0.5) > uint255(stor104.length) * 0.5:
            mem[ceil32(uint255(stor104.length) * 0.5) + (uint255(stor104.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor104.length), data=mem[128 len ceil32(uint255(stor104.length) * 0.5)], mem[(2 * ceil32(uint255(stor104.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor104.length) * 0.5)]), 
    if bool(stor104.length) == stor104.length.field_1 < 32:
        revert with 0, 34
    if bool(stor104.length):
        if bool(stor104.length) == uint255(stor104.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor104.length):
            if 31 < uint255(stor104.length) * 0.5:
                mem[128] = uint256(stor104.field_0)
                idx = 128
                s = 0
                while (uint255(stor104.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor104[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor104.length % 128, data=mem[128 len ceil32(stor104.length.field_1)])
            mem[128] = 256 * stor104.length.field_8
    else:
        if bool(stor104.length) == stor104.length.field_1 < 32:
            revert with 0, 34
        if stor104.length.field_1:
            if 31 < stor104.length.field_1:
                mem[128] = uint256(stor104.field_0)
                idx = 128
                s = 0
                while stor104.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor104[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor104.length % 128, data=mem[128 len ceil32(stor104.length.field_1)])
            mem[128] = 256 * stor104.length.field_8
    mem[ceil32(stor104.length.field_1) + 192 len ceil32(stor104.length.field_1)] = mem[128 len ceil32(stor104.length.field_1)]
    if ceil32(stor104.length.field_1) > stor104.length.field_1:
        mem[ceil32(stor104.length.field_1) + stor104.length.field_1 + 192] = 0
    return Array(len=stor104.length % 128, data=mem[128 len ceil32(stor104.length.field_1)], mem[(2 * ceil32(stor104.length.field_1)) + 192 len 2 * ceil32(stor104.length.field_1)]), 
}

function symbol() payable {
    if bool(stor105.length):
        if bool(stor105.length) == uint255(stor105.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor105.length):
            if bool(stor105.length) == uint255(stor105.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor105.length):
                if 31 < uint255(stor105.length) * 0.5:
                    mem[128] = uint256(stor105.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor105.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor105[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor105.length), data=mem[128 len ceil32(uint255(stor105.length) * 0.5)])
                mem[128] = 256 * stor105.length.field_8
        else:
            if bool(stor105.length) == stor105.length.field_1 < 32:
                revert with 0, 34
            if stor105.length.field_1:
                if 31 < stor105.length.field_1:
                    mem[128] = uint256(stor105.field_0)
                    idx = 128
                    s = 0
                    while stor105.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor105[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor105.length), data=mem[128 len ceil32(uint255(stor105.length) * 0.5)])
                mem[128] = 256 * stor105.length.field_8
        mem[ceil32(uint255(stor105.length) * 0.5) + 192 len ceil32(uint255(stor105.length) * 0.5)] = mem[128 len ceil32(uint255(stor105.length) * 0.5)]
        if ceil32(uint255(stor105.length) * 0.5) > uint255(stor105.length) * 0.5:
            mem[ceil32(uint255(stor105.length) * 0.5) + (uint255(stor105.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor105.length), data=mem[128 len ceil32(uint255(stor105.length) * 0.5)], mem[(2 * ceil32(uint255(stor105.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor105.length) * 0.5)]), 
    if bool(stor105.length) == stor105.length.field_1 < 32:
        revert with 0, 34
    if bool(stor105.length):
        if bool(stor105.length) == uint255(stor105.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor105.length):
            if 31 < uint255(stor105.length) * 0.5:
                mem[128] = uint256(stor105.field_0)
                idx = 128
                s = 0
                while (uint255(stor105.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor105[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor105.length % 128, data=mem[128 len ceil32(stor105.length.field_1)])
            mem[128] = 256 * stor105.length.field_8
    else:
        if bool(stor105.length) == stor105.length.field_1 < 32:
            revert with 0, 34
        if stor105.length.field_1:
            if 31 < stor105.length.field_1:
                mem[128] = uint256(stor105.field_0)
                idx = 128
                s = 0
                while stor105.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor105[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor105.length % 128, data=mem[128 len ceil32(stor105.length.field_1)])
            mem[128] = 256 * stor105.length.field_8
    mem[ceil32(stor105.length.field_1) + 192 len ceil32(stor105.length.field_1)] = mem[128 len ceil32(stor105.length.field_1)]
    if ceil32(stor105.length.field_1) > stor105.length.field_1:
        mem[ceil32(stor105.length.field_1) + stor105.length.field_1 + 192] = 0
    return Array(len=stor105.length % 128, data=mem[128 len ceil32(stor105.length.field_1)], mem[(2 * ceil32(stor105.length.field_1)) + 192 len 2 * ceil32(stor105.length.field_1)]), 
}

function accountReward(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if sub_ddd14d5aAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Implementations: Not TroopsManager'
    if liquidityPoolManagerImplementationAddress == arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Army: Use liquidityReward to reward liquidity'
    if not arg1:
        revert with 0, 'ERC20: mint to the zero address'
    if walletObserverImplementationAddress:
        call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), 0, address(arg1), arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if totalSupply > !arg2:
        revert with 0, 17
    totalSupply += arg2
    if balanceOf[address(arg1)] > !arg2:
        revert with 0, 17
    balanceOf[address(arg1)] += arg2
    emit 0xfeddf252: arg2, 0, arg1
    if not walletObserverImplementationAddress:
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if liquidityPoolManagerImplementationAddress == arg1:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if not liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                gas gas_remaining wei
               args 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if ext_call.return_data[0]:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == arg1:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if not liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function liquidityReward(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if sub_ddd14d5aAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Implementations: Not TroopsManager'
    if not liquidityPoolManagerImplementationAddress:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Army: LiquidityPoolManagerUpgradeable is not set'
    if walletObserverImplementationAddress:
        call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), 0, liquidityPoolManagerImplementationAddress, arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if totalSupply > !arg1:
        revert with 0, 17
    totalSupply += arg1
    if balanceOf[stor301] > !arg1:
        revert with 0, 17
    balanceOf[stor301] += arg1
    emit 0xfeddf252: arg1, 0, liquidityPoolManagerImplementationAddress
    if not walletObserverImplementationAddress:
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if liquidityPoolManagerImplementationAddress == liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if not liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                gas gas_remaining wei
               args 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if ext_call.return_data[0]:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if not liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function burn(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if not walletObserverImplementationAddress:
        if balanceOf[address(msg.sender)] < arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn amount exceeds balance'
    else:
        call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), msg.sender, 0, arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if balanceOf[address(msg.sender)] < arg1:
            revert with 0, 'ERC20: burn amount exceeds balance'
    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, 'msg.sender'), ('name', 'balanceOf', 101))), ('param', 'arg1'))
    balanceOf[address(msg.sender)] -= arg1
    if totalSupply < arg1:
        revert with 0, 17
    totalSupply -= arg1
    emit 0xfeddf252: arg1, msg.sender, 0
    if not walletObserverImplementationAddress:
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if not liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == msg.sender:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                gas gas_remaining wei
               args msg.sender
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if ext_call.return_data[0]:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if not liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == msg.sender:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function accountBurn(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if sub_ddd14d5aAddress != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Implementations: Not TroopsManager'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if not walletObserverImplementationAddress:
        if balanceOf[address(arg1)] < arg2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn amount exceeds balance'
    else:
        call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), address(arg1), 0, arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if balanceOf[address(arg1)] < arg2:
            revert with 0, 'ERC20: burn amount exceeds balance'
    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'balanceOf', 101))), ('param', 'arg2'))
    balanceOf[address(arg1)] -= arg2
    if totalSupply < arg2:
        revert with 0, 17
    totalSupply -= arg2
    emit 0xfeddf252: arg2, arg1, 0
    if not walletObserverImplementationAddress:
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if not liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == arg1:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if ext_call.return_data[0]:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if not liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == arg1:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function burnFrom(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if allowance[address(arg1)][address(msg.sender)] != -1:
        if allowance[address(arg1)][address(msg.sender)] < arg2:
            revert with 0, 'ERC20: insufficient allowance'
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve from the zero address'
        if not msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: approve to the zero address'
        allowance[address(arg1)][address(msg.sender)] -= arg2
        emit Approval((allowance[address(arg1)][address(msg.sender)] - arg2), arg1, msg.sender);
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn from the zero address'
    if not walletObserverImplementationAddress:
        if balanceOf[address(arg1)] < arg2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: burn amount exceeds balance'
    else:
        call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), address(arg1), 0, arg2
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if balanceOf[address(arg1)] < arg2:
            revert with 0, 'ERC20: burn amount exceeds balance'
    ('ge', ('stor', ('map', ('mask_shl', 160, 0, 0, ('param', 'arg1')), ('name', 'balanceOf', 101))), ('param', 'arg2'))
    balanceOf[address(arg1)] -= arg2
    if totalSupply < arg2:
        revert with 0, 17
    totalSupply -= arg2
    emit 0xfeddf252: arg2, arg1, 0
    if not walletObserverImplementationAddress:
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if not liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == arg1:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if not sub_ddd14d5aAddress:
            if liquidityPoolManagerImplementationAddress:
                if liquidityPoolManagerImplementationAddress != msg.sender:
                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                         gas gas_remaining wei
                        args msg.sender
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            if ext_call.return_data[0]:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if not liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == arg1:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function transfer(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer from the zero address'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer to the zero address'
    if not walletObserverImplementationAddress:
        if balanceOf[address(msg.sender)] < arg2:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC20: transfer amount exceeds balance'
        balanceOf[address(msg.sender)] -= arg2
        if balanceOf[arg1] > !arg2:
            revert with 0, 17
        balanceOf[arg1] += arg2
        emit 0xfeddf252: arg2, msg.sender, arg1
        if not walletObserverImplementationAddress:
            if not sub_ddd14d5aAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == arg1:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == msg.sender:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if not arg1:
                                if liquidityPoolManagerImplementationAddress:
                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                             gas gas_remaining wei
                                            args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                if not msg.sender:
                                    if liquidityPoolManagerImplementationAddress:
                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                 gas gas_remaining wei
                                                args msg.sender
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[100] = msg.sender
                                    staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    mem[96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[ceil32(return_data.size) + 100] = msg.sender
                                    staticcall liquidityPoolManagerImplementationAddress.isRouter(address arg1) with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0] > 0:
                                        if not ext_call.return_data[0]:
                                            if arg2 and sub_2115ec8e > -1 / arg2:
                                                revert with 0, 17
                                            if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                revert with 0, 17
                                            sub_817ca11a += arg2 * sub_2115ec8e / 100
                                            if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                revert with 0, 17
                                            balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                            if totalSupply < arg2 * sub_2115ec8e / 100:
                                                revert with 0, 17
                                            totalSupply -= arg2 * sub_2115ec8e / 100
                                            emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                            if liquidityPoolManagerImplementationAddress:
                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                         gas gas_remaining wei
                                                        args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[(2 * ceil32(return_data.size)) + 100] = arg1
                                            staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_2115ec8e > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_2115ec8e / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                                if totalSupply < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_2115ec8e / 100
                                                emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(4 * ceil32(return_data.size)) + 100] = msg.sender
                                                staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args msg.sender
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (6 * ceil32(return_data.size)) + 96
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > 0:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_fa130fdf > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_fa130fdf / 100:
                                                            if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                            if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_fa130fdf / 100
                                                            emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                            mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (7 * ceil32(return_data.size)) + 292
                                                            t = (6 * ceil32(return_data.size)) + 128
                                                            while idx < 2:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (8 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16093 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                            require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                            _16189 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                            mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            require _16093 + (32 * _16189) + 32 <= return_data.size
                                                            mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _16189)] = mem[(7 * ceil32(return_data.size)) + _16093 + 224 len ceil32(32 * _16189)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30816 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30816] == bool(mem[_30816])
                                                            else:
                                                                if 1 >= _16189:
                                                                    revert with 0, 50
                                                                if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31346 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31346] == bool(mem[_31346])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_fa130fdf < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (7 * ceil32(return_data.size)) + 292
                                                                    t = (6 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29411 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29667 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29411 + (32 * _29667) + 32 <= return_data.size
                                                                    s = (8 * ceil32(return_data.size)) + 224
                                                                    idx = (7 * ceil32(return_data.size)) + _29411 + 224
                                                                    while idx < (7 * ceil32(return_data.size)) + _29411 + (32 * _29667) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38493 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38493] == bool(mem[_38493])
                                                                    else:
                                                                        if 1 >= _29667:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39026 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39026] == bool(mem[_39026])
                                                            else:
                                                                if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (7 * ceil32(return_data.size)) + 292
                                                                    u = (6 * ceil32(return_data.size)) + 128
                                                                    while s < 2:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29412 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29668 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29412 + (32 * _29668) + 32 <= return_data.size
                                                                    t = (8 * ceil32(return_data.size)) + 224
                                                                    s = (7 * ceil32(return_data.size)) + _29412 + 224
                                                                    while s < (7 * ceil32(return_data.size)) + _29412 + (32 * _29668) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38494 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38494] == bool(mem[_38494])
                                                                    else:
                                                                        if 1 >= _29668:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39030 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39030] == bool(mem[_39030])
                                                            return 1
                                                        if sub_fa130fdf < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29409 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29665 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29409 + (32 * _29665) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29665)] = mem[(7 * ceil32(return_data.size)) + _29409 + 224 len ceil32(32 * _29665)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38491 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38491] == bool(mem[_38491])
                                                                else:
                                                                    if 1 >= _29665:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39018 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39018] == bool(mem[_39018])
                                                        else:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29410 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _29666 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _29410 + (32 * _29666) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29666)] = mem[(7 * ceil32(return_data.size)) + _29410 + 224 len ceil32(32 * _29666)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38492 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38492] == bool(mem[_38492])
                                                                else:
                                                                    if 1 >= _29666:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39022 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39022] == bool(mem[_39022])
                                                else:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_6a9c5462 > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                            if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                            if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_6a9c5462 / 100
                                                            emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                            mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (7 * ceil32(return_data.size)) + 292
                                                            t = (6 * ceil32(return_data.size)) + 128
                                                            while idx < 2:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (8 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16095 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                            require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                            _16191 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                            mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            require _16095 + (32 * _16191) + 32 <= return_data.size
                                                            mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _16191)] = mem[(7 * ceil32(return_data.size)) + _16095 + 224 len ceil32(32 * _16191)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30821 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30821] == bool(mem[_30821])
                                                            else:
                                                                if 1 >= _16191:
                                                                    revert with 0, 50
                                                                if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31354 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31354] == bool(mem[_31354])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_6a9c5462 < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (7 * ceil32(return_data.size)) + 292
                                                                    t = (6 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29416 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29672 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29416 + (32 * _29672) + 32 <= return_data.size
                                                                    s = (8 * ceil32(return_data.size)) + 224
                                                                    idx = (7 * ceil32(return_data.size)) + _29416 + 224
                                                                    while idx < (7 * ceil32(return_data.size)) + _29416 + (32 * _29672) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38497 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38497] == bool(mem[_38497])
                                                                    else:
                                                                        if 1 >= _29672:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39042 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39042] == bool(mem[_39042])
                                                            else:
                                                                if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (7 * ceil32(return_data.size)) + 292
                                                                    u = (6 * ceil32(return_data.size)) + 128
                                                                    while s < 2:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29417 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29673 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29417 + (32 * _29673) + 32 <= return_data.size
                                                                    t = (8 * ceil32(return_data.size)) + 224
                                                                    s = (7 * ceil32(return_data.size)) + _29417 + 224
                                                                    while s < (7 * ceil32(return_data.size)) + _29417 + (32 * _29673) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38498 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38498] == bool(mem[_38498])
                                                                    else:
                                                                        if 1 >= _29673:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39046 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39046] == bool(mem[_39046])
                                                            return 1
                                                        if sub_6a9c5462 < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29414 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29670 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29414 + (32 * _29670) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29670)] = mem[(7 * ceil32(return_data.size)) + _29414 + 224 len ceil32(32 * _29670)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38495 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38495] == bool(mem[_38495])
                                                                else:
                                                                    if 1 >= _29670:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39034 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39034] == bool(mem[_39034])
                                                        else:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29415 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _29671 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _29415 + (32 * _29671) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29671)] = mem[(7 * ceil32(return_data.size)) + _29415 + 224 len ceil32(32 * _29671)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38496 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38496] == bool(mem[_38496])
                                                                else:
                                                                    if 1 >= _29671:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39038 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39038] == bool(mem[_39038])
                                    else:
                                        if not ext_call.return_data[0]:
                                            if arg2 and sub_eaf447d4 > -1 / arg2:
                                                revert with 0, 17
                                            if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                revert with 0, 17
                                            sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                            if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                revert with 0, 17
                                            balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                            if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                revert with 0, 17
                                            totalSupply -= arg2 * sub_eaf447d4 / 100
                                            emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                            if liquidityPoolManagerImplementationAddress:
                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                         gas gas_remaining wei
                                                        args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[(2 * ceil32(return_data.size)) + 100] = arg1
                                            staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_eaf447d4 > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                                if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_eaf447d4 / 100
                                                emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(4 * ceil32(return_data.size)) + 100] = msg.sender
                                                staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args msg.sender
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (6 * ceil32(return_data.size)) + 96
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > 0:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_fa130fdf > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_fa130fdf / 100:
                                                            if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                            if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_fa130fdf / 100
                                                            emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                            mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (7 * ceil32(return_data.size)) + 292
                                                            t = (6 * ceil32(return_data.size)) + 128
                                                            while idx < 2:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (8 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16105 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                            require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                            _16201 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                            mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            require _16105 + (32 * _16201) + 32 <= return_data.size
                                                            mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _16201)] = mem[(7 * ceil32(return_data.size)) + _16105 + 224 len ceil32(32 * _16201)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30840 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30840] == bool(mem[_30840])
                                                            else:
                                                                if 1 >= _16201:
                                                                    revert with 0, 50
                                                                if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31394 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31394] == bool(mem[_31394])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_fa130fdf < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (7 * ceil32(return_data.size)) + 292
                                                                    t = (6 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29435 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29691 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29435 + (32 * _29691) + 32 <= return_data.size
                                                                    s = (8 * ceil32(return_data.size)) + 224
                                                                    idx = (7 * ceil32(return_data.size)) + _29435 + 224
                                                                    while idx < (7 * ceil32(return_data.size)) + _29435 + (32 * _29691) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38509 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38509] == bool(mem[_38509])
                                                                    else:
                                                                        if 1 >= _29691:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39090 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39090] == bool(mem[_39090])
                                                            else:
                                                                if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (7 * ceil32(return_data.size)) + 292
                                                                    u = (6 * ceil32(return_data.size)) + 128
                                                                    while s < 2:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29436 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29692 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29436 + (32 * _29692) + 32 <= return_data.size
                                                                    t = (8 * ceil32(return_data.size)) + 224
                                                                    s = (7 * ceil32(return_data.size)) + _29436 + 224
                                                                    while s < (7 * ceil32(return_data.size)) + _29436 + (32 * _29692) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38510 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38510] == bool(mem[_38510])
                                                                    else:
                                                                        if 1 >= _29692:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39094 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39094] == bool(mem[_39094])
                                                            return 1
                                                        if sub_fa130fdf < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29433 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29689 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29433 + (32 * _29689) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29689)] = mem[(7 * ceil32(return_data.size)) + _29433 + 224 len ceil32(32 * _29689)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38507 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38507] == bool(mem[_38507])
                                                                else:
                                                                    if 1 >= _29689:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39082 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39082] == bool(mem[_39082])
                                                        else:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29434 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _29690 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _29434 + (32 * _29690) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29690)] = mem[(7 * ceil32(return_data.size)) + _29434 + 224 len ceil32(32 * _29690)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38508 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38508] == bool(mem[_38508])
                                                                else:
                                                                    if 1 >= _29690:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39086 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39086] == bool(mem[_39086])
                                                else:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_6a9c5462 > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                            if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                            if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_6a9c5462 / 100
                                                            emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                            mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (7 * ceil32(return_data.size)) + 292
                                                            t = (6 * ceil32(return_data.size)) + 128
                                                            while idx < 2:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (8 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16107 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                            require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                            require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                            _16203 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                            mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            require _16107 + (32 * _16203) + 32 <= return_data.size
                                                            mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _16203)] = mem[(7 * ceil32(return_data.size)) + _16107 + 224 len ceil32(32 * _16203)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30845 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30845] == bool(mem[_30845])
                                                            else:
                                                                if 1 >= _16203:
                                                                    revert with 0, 50
                                                                if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31402 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31402] == bool(mem[_31402])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_6a9c5462 < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (7 * ceil32(return_data.size)) + 292
                                                                    t = (6 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29440 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29696 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29440 + (32 * _29696) + 32 <= return_data.size
                                                                    s = (8 * ceil32(return_data.size)) + 224
                                                                    idx = (7 * ceil32(return_data.size)) + _29440 + 224
                                                                    while idx < (7 * ceil32(return_data.size)) + _29440 + (32 * _29696) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38513 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38513] == bool(mem[_38513])
                                                                    else:
                                                                        if 1 >= _29696:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39106 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39106] == bool(mem[_39106])
                                                            else:
                                                                if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(7 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (7 * ceil32(return_data.size)) + 292
                                                                    u = (6 * ceil32(return_data.size)) + 128
                                                                    while s < 2:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29441 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29697 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29441 + (32 * _29697) + 32 <= return_data.size
                                                                    t = (8 * ceil32(return_data.size)) + 224
                                                                    s = (7 * ceil32(return_data.size)) + _29441 + 224
                                                                    while s < (7 * ceil32(return_data.size)) + _29441 + (32 * _29697) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38514 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38514] == bool(mem[_38514])
                                                                    else:
                                                                        if 1 >= _29697:
                                                                            revert with 0, 50
                                                                        if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39110 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39110] == bool(mem[_39110])
                                                            return 1
                                                        if sub_6a9c5462 < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29438 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29694 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29438 + (32 * _29694) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29694)] = mem[(7 * ceil32(return_data.size)) + _29438 + 224 len ceil32(32 * _29694)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38511 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38511] == bool(mem[_38511])
                                                                else:
                                                                    if 1 >= _29694:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39098 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39098] == bool(mem[_39098])
                                                        else:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(6 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(6 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(6 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(6 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(7 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(7 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(7 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(7 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (7 * ceil32(return_data.size)) + 292
                                                                t = (6 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(7 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(7 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (8 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29439 = mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (7 * ceil32(return_data.size)) + return_data.size + 192 > (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _29695 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(8 * ceil32(return_data.size)) + 192] = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _29439 + (32 * _29695) + 32 <= return_data.size
                                                                mem[(8 * ceil32(return_data.size)) + 224 len ceil32(32 * _29695)] = mem[(7 * ceil32(return_data.size)) + _29439 + 224 len ceil32(32 * _29695)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38512 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38512] == bool(mem[_38512])
                                                                else:
                                                                    if 1 >= _29695:
                                                                        revert with 0, 50
                                                                    if mem[(8 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39102 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39102] == bool(mem[_39102])
        else:
            mem[100] = msg.sender
            staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if not sub_ddd14d5aAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if ext_call.return_data[0]:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == arg1:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress == msg.sender:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        else:
                            if liquidityPoolManagerImplementationAddress:
                                if not arg1:
                                    if liquidityPoolManagerImplementationAddress:
                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                 gas gas_remaining wei
                                                args msg.sender
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    if not msg.sender:
                                        if liquidityPoolManagerImplementationAddress:
                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                     gas gas_remaining wei
                                                    args msg.sender
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[ceil32(return_data.size) + 100] = msg.sender
                                        staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[(2 * ceil32(return_data.size)) + 100] = msg.sender
                                        staticcall liquidityPoolManagerImplementationAddress.isRouter(address arg1) with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0] > 0:
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_2115ec8e > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_2115ec8e / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                                if totalSupply < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_2115ec8e / 100
                                                emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(4 * ceil32(return_data.size)) + 100] = arg1
                                                staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                        gas gas_remaining wei
                                                       args arg1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if not ext_call.return_data[0]:
                                                    if arg2 and sub_2115ec8e > -1 / arg2:
                                                        revert with 0, 17
                                                    if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                        revert with 0, 17
                                                    sub_817ca11a += arg2 * sub_2115ec8e / 100
                                                    if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                                    if totalSupply < arg2 * sub_2115ec8e / 100:
                                                        revert with 0, 17
                                                    totalSupply -= arg2 * sub_2115ec8e / 100
                                                    emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                                    if liquidityPoolManagerImplementationAddress:
                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                 gas gas_remaining wei
                                                                args msg.sender
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 100] = msg.sender
                                                    staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args msg.sender
                                                    mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 96
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > 0:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16117 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _16213 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _16117 + (32 * _16213) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16213)] = mem[(8 * ceil32(return_data.size)) + _16117 + 224 len ceil32(32 * _16213)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30864 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30864] == bool(mem[_30864])
                                                                else:
                                                                    if 1 >= _16213:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31442 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31442] == bool(mem[_31442])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_fa130fdf < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (8 * ceil32(return_data.size)) + 292
                                                                        t = (7 * ceil32(return_data.size)) + 128
                                                                        while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29459 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29715 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29459 + (32 * _29715) + 32 <= return_data.size
                                                                        s = (10 * ceil32(return_data.size)) + 224
                                                                        idx = (8 * ceil32(return_data.size)) + _29459 + 224
                                                                        while idx < (8 * ceil32(return_data.size)) + _29459 + (32 * _29715) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38525 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38525] == bool(mem[_38525])
                                                                        else:
                                                                            if 1 >= _29715:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39154 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39154] == bool(mem[_39154])
                                                                else:
                                                                    if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (8 * ceil32(return_data.size)) + 292
                                                                        u = (7 * ceil32(return_data.size)) + 128
                                                                        while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29460 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29716 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29460 + (32 * _29716) + 32 <= return_data.size
                                                                        t = (10 * ceil32(return_data.size)) + 224
                                                                        s = (8 * ceil32(return_data.size)) + _29460 + 224
                                                                        while s < (8 * ceil32(return_data.size)) + _29460 + (32 * _29716) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38526 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38526] == bool(mem[_38526])
                                                                        else:
                                                                            if 1 >= _29716:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39158 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39158] == bool(mem[_39158])
                                                                return 1
                                                            if sub_fa130fdf < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29457 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29713 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29457 + (32 * _29713) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29713)] = mem[(8 * ceil32(return_data.size)) + _29457 + 224 len ceil32(32 * _29713)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38523 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38523] == bool(mem[_38523])
                                                                    else:
                                                                        if 1 >= _29713:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39146 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39146] == bool(mem[_39146])
                                                            else:
                                                                if arg2 and sub_fa130fdf > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29458 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                    _29714 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    require _29458 + (32 * _29714) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29714)] = mem[(8 * ceil32(return_data.size)) + _29458 + 224 len ceil32(32 * _29714)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38524 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38524] == bool(mem[_38524])
                                                                    else:
                                                                        if 1 >= _29714:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39150 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39150] == bool(mem[_39150])
                                                    else:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16119 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _16215 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _16119 + (32 * _16215) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16215)] = mem[(8 * ceil32(return_data.size)) + _16119 + 224 len ceil32(32 * _16215)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30869 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30869] == bool(mem[_30869])
                                                                else:
                                                                    if 1 >= _16215:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31450 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31450] == bool(mem[_31450])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_6a9c5462 < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (8 * ceil32(return_data.size)) + 292
                                                                        t = (7 * ceil32(return_data.size)) + 128
                                                                        while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29464 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29720 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29464 + (32 * _29720) + 32 <= return_data.size
                                                                        s = (10 * ceil32(return_data.size)) + 224
                                                                        idx = (8 * ceil32(return_data.size)) + _29464 + 224
                                                                        while idx < (8 * ceil32(return_data.size)) + _29464 + (32 * _29720) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38529 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38529] == bool(mem[_38529])
                                                                        else:
                                                                            if 1 >= _29720:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39170 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39170] == bool(mem[_39170])
                                                                else:
                                                                    if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (8 * ceil32(return_data.size)) + 292
                                                                        u = (7 * ceil32(return_data.size)) + 128
                                                                        while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29465 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29721 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29465 + (32 * _29721) + 32 <= return_data.size
                                                                        t = (10 * ceil32(return_data.size)) + 224
                                                                        s = (8 * ceil32(return_data.size)) + _29465 + 224
                                                                        while s < (8 * ceil32(return_data.size)) + _29465 + (32 * _29721) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38530 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38530] == bool(mem[_38530])
                                                                        else:
                                                                            if 1 >= _29721:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39174 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39174] == bool(mem[_39174])
                                                                return 1
                                                            if sub_6a9c5462 < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29462 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29718 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29462 + (32 * _29718) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29718)] = mem[(8 * ceil32(return_data.size)) + _29462 + 224 len ceil32(32 * _29718)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38527 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38527] == bool(mem[_38527])
                                                                    else:
                                                                        if 1 >= _29718:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39162 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39162] == bool(mem[_39162])
                                                            else:
                                                                if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29463 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                    _29719 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    require _29463 + (32 * _29719) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29719)] = mem[(8 * ceil32(return_data.size)) + _29463 + 224 len ceil32(32 * _29719)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38528 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38528] == bool(mem[_38528])
                                                                    else:
                                                                        if 1 >= _29719:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39166 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39166] == bool(mem[_39166])
                                        else:
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_eaf447d4 > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                                if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_eaf447d4 / 100
                                                emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(4 * ceil32(return_data.size)) + 100] = arg1
                                                staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                        gas gas_remaining wei
                                                       args arg1
                                                mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if not ext_call.return_data[0]:
                                                    if arg2 and sub_eaf447d4 > -1 / arg2:
                                                        revert with 0, 17
                                                    if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                        revert with 0, 17
                                                    sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                                    if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                                    if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                        revert with 0, 17
                                                    totalSupply -= arg2 * sub_eaf447d4 / 100
                                                    emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                                    if liquidityPoolManagerImplementationAddress:
                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                 gas gas_remaining wei
                                                                args msg.sender
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[(6 * ceil32(return_data.size)) + 100] = msg.sender
                                                    staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args msg.sender
                                                    mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (7 * ceil32(return_data.size)) + 96
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > 0:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16129 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _16225 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _16129 + (32 * _16225) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16225)] = mem[(8 * ceil32(return_data.size)) + _16129 + 224 len ceil32(32 * _16225)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30888 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30888] == bool(mem[_30888])
                                                                else:
                                                                    if 1 >= _16225:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31490 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31490] == bool(mem[_31490])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_fa130fdf < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (8 * ceil32(return_data.size)) + 292
                                                                        t = (7 * ceil32(return_data.size)) + 128
                                                                        while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29483 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29739 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29483 + (32 * _29739) + 32 <= return_data.size
                                                                        s = (10 * ceil32(return_data.size)) + 224
                                                                        idx = (8 * ceil32(return_data.size)) + _29483 + 224
                                                                        while idx < (8 * ceil32(return_data.size)) + _29483 + (32 * _29739) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38541 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38541] == bool(mem[_38541])
                                                                        else:
                                                                            if 1 >= _29739:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39218 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39218] == bool(mem[_39218])
                                                                else:
                                                                    if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (8 * ceil32(return_data.size)) + 292
                                                                        u = (7 * ceil32(return_data.size)) + 128
                                                                        while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29484 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29740 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29484 + (32 * _29740) + 32 <= return_data.size
                                                                        t = (10 * ceil32(return_data.size)) + 224
                                                                        s = (8 * ceil32(return_data.size)) + _29484 + 224
                                                                        while s < (8 * ceil32(return_data.size)) + _29484 + (32 * _29740) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38542 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38542] == bool(mem[_38542])
                                                                        else:
                                                                            if 1 >= _29740:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39222 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39222] == bool(mem[_39222])
                                                                return 1
                                                            if sub_fa130fdf < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29481 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29737 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29481 + (32 * _29737) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29737)] = mem[(8 * ceil32(return_data.size)) + _29481 + 224 len ceil32(32 * _29737)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38539 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38539] == bool(mem[_38539])
                                                                    else:
                                                                        if 1 >= _29737:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39210 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39210] == bool(mem[_39210])
                                                            else:
                                                                if arg2 and sub_fa130fdf > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29482 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                    _29738 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    require _29482 + (32 * _29738) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29738)] = mem[(8 * ceil32(return_data.size)) + _29482 + 224 len ceil32(32 * _29738)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38540 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38540] == bool(mem[_38540])
                                                                    else:
                                                                        if 1 >= _29738:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39214 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39214] == bool(mem[_39214])
                                                    else:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16131 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _16227 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _16131 + (32 * _16227) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16227)] = mem[(8 * ceil32(return_data.size)) + _16131 + 224 len ceil32(32 * _16227)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30893 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30893] == bool(mem[_30893])
                                                                else:
                                                                    if 1 >= _16227:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31498 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31498] == bool(mem[_31498])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_6a9c5462 < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (8 * ceil32(return_data.size)) + 292
                                                                        t = (7 * ceil32(return_data.size)) + 128
                                                                        while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29488 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29744 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29488 + (32 * _29744) + 32 <= return_data.size
                                                                        s = (10 * ceil32(return_data.size)) + 224
                                                                        idx = (8 * ceil32(return_data.size)) + _29488 + 224
                                                                        while idx < (8 * ceil32(return_data.size)) + _29488 + (32 * _29744) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38545 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38545] == bool(mem[_38545])
                                                                        else:
                                                                            if 1 >= _29744:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39234 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39234] == bool(mem[_39234])
                                                                else:
                                                                    if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (8 * ceil32(return_data.size)) + 292
                                                                        u = (7 * ceil32(return_data.size)) + 128
                                                                        while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29489 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29745 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29489 + (32 * _29745) + 32 <= return_data.size
                                                                        t = (10 * ceil32(return_data.size)) + 224
                                                                        s = (8 * ceil32(return_data.size)) + _29489 + 224
                                                                        while s < (8 * ceil32(return_data.size)) + _29489 + (32 * _29745) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38546 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38546] == bool(mem[_38546])
                                                                        else:
                                                                            if 1 >= _29745:
                                                                                revert with 0, 50
                                                                            if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39238 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39238] == bool(mem[_39238])
                                                                return 1
                                                            if sub_6a9c5462 < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29486 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29742 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29486 + (32 * _29742) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29742)] = mem[(8 * ceil32(return_data.size)) + _29486 + 224 len ceil32(32 * _29742)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38543 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38543] == bool(mem[_38543])
                                                                    else:
                                                                        if 1 >= _29742:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39226 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39226] == bool(mem[_39226])
                                                            else:
                                                                if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29487 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                    _29743 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    require _29487 + (32 * _29743) + 32 <= return_data.size
                                                                    mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29743)] = mem[(8 * ceil32(return_data.size)) + _29487 + 224 len ceil32(32 * _29743)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38544 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38544] == bool(mem[_38544])
                                                                    else:
                                                                        if 1 >= _29743:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39230 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39230] == bool(mem[_39230])
    else:
        mem[100] = msg.sender
        mem[132] = msg.sender
        mem[164] = arg1
        mem[196] = arg2
        call walletObserverImplementationAddress.beforeTokenTransfer(address arg1, address arg2, address arg3, uint256 arg4) with:
             gas gas_remaining wei
            args 0, uint32(msg.sender), msg.sender, address(arg1), arg2
        mem[96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        if balanceOf[address(msg.sender)] < arg2:
            revert with 0, 'ERC20: transfer amount exceeds balance'
        balanceOf[address(msg.sender)] -= arg2
        if balanceOf[arg1] > !arg2:
            revert with 0, 17
        balanceOf[arg1] += arg2
        emit 0xfeddf252: arg2, msg.sender, arg1
        if not walletObserverImplementationAddress:
            if not sub_ddd14d5aAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if liquidityPoolManagerImplementationAddress == arg1:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == msg.sender:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress:
                            if not arg1:
                                if liquidityPoolManagerImplementationAddress:
                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                             gas gas_remaining wei
                                            args msg.sender
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            else:
                                if not msg.sender:
                                    if liquidityPoolManagerImplementationAddress:
                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                 gas gas_remaining wei
                                                args msg.sender
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    mem[ceil32(return_data.size) + 100] = msg.sender
                                    staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[(2 * ceil32(return_data.size)) + 100] = msg.sender
                                    staticcall liquidityPoolManagerImplementationAddress.isRouter(address arg1) with:
                                            gas gas_remaining wei
                                           args msg.sender
                                    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0] > 0:
                                        if not ext_call.return_data[0]:
                                            if arg2 and sub_2115ec8e > -1 / arg2:
                                                revert with 0, 17
                                            if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                revert with 0, 17
                                            sub_817ca11a += arg2 * sub_2115ec8e / 100
                                            if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                revert with 0, 17
                                            balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                            if totalSupply < arg2 * sub_2115ec8e / 100:
                                                revert with 0, 17
                                            totalSupply -= arg2 * sub_2115ec8e / 100
                                            emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                            if liquidityPoolManagerImplementationAddress:
                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                         gas gas_remaining wei
                                                        args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[(4 * ceil32(return_data.size)) + 100] = arg1
                                            staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_2115ec8e > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_2115ec8e / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                                if totalSupply < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_2115ec8e / 100
                                                emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(6 * ceil32(return_data.size)) + 100] = msg.sender
                                                staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args msg.sender
                                                mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 96
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > 0:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_fa130fdf > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_fa130fdf / 100:
                                                            if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                            if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_fa130fdf / 100
                                                            emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                            mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (8 * ceil32(return_data.size)) + 292
                                                            t = (7 * ceil32(return_data.size)) + 128
                                                            while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (10 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16141 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                            require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                            require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                            _16237 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                            mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            require _16141 + (32 * _16237) + 32 <= return_data.size
                                                            mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16237)] = mem[(8 * ceil32(return_data.size)) + _16141 + 224 len ceil32(32 * _16237)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30912 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30912] == bool(mem[_30912])
                                                            else:
                                                                if 1 >= _16237:
                                                                    revert with 0, 50
                                                                if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31538 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31538] == bool(mem[_31538])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_fa130fdf < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29507 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29763 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29507 + (32 * _29763) + 32 <= return_data.size
                                                                    s = (10 * ceil32(return_data.size)) + 224
                                                                    idx = (8 * ceil32(return_data.size)) + _29507 + 224
                                                                    while idx < (8 * ceil32(return_data.size)) + _29507 + (32 * _29763) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38557 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38557] == bool(mem[_38557])
                                                                    else:
                                                                        if 1 >= _29763:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39282 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39282] == bool(mem[_39282])
                                                            else:
                                                                if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (8 * ceil32(return_data.size)) + 292
                                                                    u = (7 * ceil32(return_data.size)) + 128
                                                                    while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29508 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29764 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29508 + (32 * _29764) + 32 <= return_data.size
                                                                    t = (10 * ceil32(return_data.size)) + 224
                                                                    s = (8 * ceil32(return_data.size)) + _29508 + 224
                                                                    while s < (8 * ceil32(return_data.size)) + _29508 + (32 * _29764) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38558 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38558] == bool(mem[_38558])
                                                                    else:
                                                                        if 1 >= _29764:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39286 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39286] == bool(mem[_39286])
                                                            return 1
                                                        if sub_fa130fdf < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29505 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29761 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29505 + (32 * _29761) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29761)] = mem[(8 * ceil32(return_data.size)) + _29505 + 224 len ceil32(32 * _29761)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38555 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38555] == bool(mem[_38555])
                                                                else:
                                                                    if 1 >= _29761:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39274 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39274] == bool(mem[_39274])
                                                        else:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29506 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _29762 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _29506 + (32 * _29762) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29762)] = mem[(8 * ceil32(return_data.size)) + _29506 + 224 len ceil32(32 * _29762)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38556 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38556] == bool(mem[_38556])
                                                                else:
                                                                    if 1 >= _29762:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39278 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39278] == bool(mem[_39278])
                                                else:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_6a9c5462 > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                            if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                            if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_6a9c5462 / 100
                                                            emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                            mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (8 * ceil32(return_data.size)) + 292
                                                            t = (7 * ceil32(return_data.size)) + 128
                                                            while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (10 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16143 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                            require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                            require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                            _16239 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                            mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            require _16143 + (32 * _16239) + 32 <= return_data.size
                                                            mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16239)] = mem[(8 * ceil32(return_data.size)) + _16143 + 224 len ceil32(32 * _16239)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30917 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30917] == bool(mem[_30917])
                                                            else:
                                                                if 1 >= _16239:
                                                                    revert with 0, 50
                                                                if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31546 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31546] == bool(mem[_31546])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_6a9c5462 < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29512 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29768 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29512 + (32 * _29768) + 32 <= return_data.size
                                                                    s = (10 * ceil32(return_data.size)) + 224
                                                                    idx = (8 * ceil32(return_data.size)) + _29512 + 224
                                                                    while idx < (8 * ceil32(return_data.size)) + _29512 + (32 * _29768) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38561 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38561] == bool(mem[_38561])
                                                                    else:
                                                                        if 1 >= _29768:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39298 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39298] == bool(mem[_39298])
                                                            else:
                                                                if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (8 * ceil32(return_data.size)) + 292
                                                                    u = (7 * ceil32(return_data.size)) + 128
                                                                    while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29513 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29769 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29513 + (32 * _29769) + 32 <= return_data.size
                                                                    t = (10 * ceil32(return_data.size)) + 224
                                                                    s = (8 * ceil32(return_data.size)) + _29513 + 224
                                                                    while s < (8 * ceil32(return_data.size)) + _29513 + (32 * _29769) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38562 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38562] == bool(mem[_38562])
                                                                    else:
                                                                        if 1 >= _29769:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39302 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39302] == bool(mem[_39302])
                                                            return 1
                                                        if sub_6a9c5462 < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29510 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29766 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29510 + (32 * _29766) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29766)] = mem[(8 * ceil32(return_data.size)) + _29510 + 224 len ceil32(32 * _29766)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38559 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38559] == bool(mem[_38559])
                                                                else:
                                                                    if 1 >= _29766:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39290 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39290] == bool(mem[_39290])
                                                        else:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29511 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _29767 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _29511 + (32 * _29767) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29767)] = mem[(8 * ceil32(return_data.size)) + _29511 + 224 len ceil32(32 * _29767)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38560 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38560] == bool(mem[_38560])
                                                                else:
                                                                    if 1 >= _29767:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39294 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39294] == bool(mem[_39294])
                                    else:
                                        if not ext_call.return_data[0]:
                                            if arg2 and sub_eaf447d4 > -1 / arg2:
                                                revert with 0, 17
                                            if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                revert with 0, 17
                                            sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                            if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                revert with 0, 17
                                            balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                            if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                revert with 0, 17
                                            totalSupply -= arg2 * sub_eaf447d4 / 100
                                            emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                            if liquidityPoolManagerImplementationAddress:
                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                         gas gas_remaining wei
                                                        args msg.sender
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        else:
                                            mem[(4 * ceil32(return_data.size)) + 100] = arg1
                                            staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                    gas gas_remaining wei
                                                   args arg1
                                            mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_eaf447d4 > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                                if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_eaf447d4 / 100
                                                emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(6 * ceil32(return_data.size)) + 100] = msg.sender
                                                staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args msg.sender
                                                mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                mem[64] = (7 * ceil32(return_data.size)) + 96
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > 0:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_fa130fdf > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_fa130fdf / 100:
                                                            if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                            if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_fa130fdf / 100
                                                            emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_fa130fdf / 100:
                                                                revert with 0, 17
                                                            mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                            mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (8 * ceil32(return_data.size)) + 292
                                                            t = (7 * ceil32(return_data.size)) + 128
                                                            while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (10 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16153 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                            require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                            require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                            _16249 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                            mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                            require _16153 + (32 * _16249) + 32 <= return_data.size
                                                            mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16249)] = mem[(8 * ceil32(return_data.size)) + _16153 + 224 len ceil32(32 * _16249)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30936 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30936] == bool(mem[_30936])
                                                            else:
                                                                if 1 >= _16249:
                                                                    revert with 0, 50
                                                                if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31586 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31586] == bool(mem[_31586])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_fa130fdf < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29531 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29787 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29531 + (32 * _29787) + 32 <= return_data.size
                                                                    s = (10 * ceil32(return_data.size)) + 224
                                                                    idx = (8 * ceil32(return_data.size)) + _29531 + 224
                                                                    while idx < (8 * ceil32(return_data.size)) + _29531 + (32 * _29787) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38573 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38573] == bool(mem[_38573])
                                                                    else:
                                                                        if 1 >= _29787:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39346 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39346] == bool(mem[_39346])
                                                            else:
                                                                if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (8 * ceil32(return_data.size)) + 292
                                                                    u = (7 * ceil32(return_data.size)) + 128
                                                                    while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29532 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29788 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29532 + (32 * _29788) + 32 <= return_data.size
                                                                    t = (10 * ceil32(return_data.size)) + 224
                                                                    s = (8 * ceil32(return_data.size)) + _29532 + 224
                                                                    while s < (8 * ceil32(return_data.size)) + _29532 + (32 * _29788) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38574 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38574] == bool(mem[_38574])
                                                                    else:
                                                                        if 1 >= _29788:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39350 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39350] == bool(mem[_39350])
                                                            return 1
                                                        if sub_fa130fdf < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29529 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29785 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29529 + (32 * _29785) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29785)] = mem[(8 * ceil32(return_data.size)) + _29529 + 224 len ceil32(32 * _29785)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38571 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38571] == bool(mem[_38571])
                                                                else:
                                                                    if 1 >= _29785:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39338 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39338] == bool(mem[_39338])
                                                        else:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29530 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _29786 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _29530 + (32 * _29786) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29786)] = mem[(8 * ceil32(return_data.size)) + _29530 + 224 len ceil32(32 * _29786)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38572 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38572] == bool(mem[_38572])
                                                                else:
                                                                    if 1 >= _29786:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39342 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39342] == bool(mem[_39342])
                                                else:
                                                    if not sub_f52bfb76.length:
                                                        if arg2 and sub_6a9c5462 > -1 / arg2:
                                                            revert with 0, 17
                                                        if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                            if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                revert with 0, 17
                                                            sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                            if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                            if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            totalSupply -= arg2 * sub_6a9c5462 / 100
                                                            emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                            if liquidityPoolManagerImplementationAddress:
                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        else:
                                                            mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                            mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                            staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                    gas gas_remaining wei
                                                            mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                            mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                            if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                revert with 0, 17
                                                            mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                            mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                            mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                            idx = 0
                                                            s = (8 * ceil32(return_data.size)) + 292
                                                            t = (7 * ceil32(return_data.size)) + 128
                                                            while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = (10 * ceil32(return_data.size)) + 192
                                                            require return_data.size >= 32
                                                            _16155 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                            require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                            require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                            _16251 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                revert with 0, 65
                                                            if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                revert with 0, 65
                                                            mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                            mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                            require _16155 + (32 * _16251) + 32 <= return_data.size
                                                            mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _16251)] = mem[(8 * ceil32(return_data.size)) + _16155 + 224 len ceil32(32 * _16251)]
                                                            if not sub_5ae60c12:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _30941 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_30941] == bool(mem[_30941])
                                                            else:
                                                                if 1 >= _16251:
                                                                    revert with 0, 50
                                                                if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                    revert with 0, 'USDC amount exceeds max USDC limit'
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                mem[32] = 101
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                mem[0] = arg1
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        mem[mem[64] + 4] = msg.sender
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        mem[mem[64]] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        _31594 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                                        require return_data.size >= 32
                                                                        require mem[_31594] == bool(mem[_31594])
                                                    else:
                                                        if sub_f52bfb76.length != sub_81170b98.length:
                                                            revert with 0, 'deduct information invalid'
                                                        mem[0] = msg.sender
                                                        mem[32] = 101
                                                        idx = sub_f52bfb76.length
                                                        while idx:
                                                            if idx < 1:
                                                                revert with 0, 17
                                                            if idx - 1 >= sub_f52bfb76.length:
                                                                revert with 0, 50
                                                            mem[0] = 415
                                                            if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                if not idx:
                                                                    revert with 0, 17
                                                                idx = idx - 1
                                                                continue 
                                                            if idx - 1 >= sub_81170b98.length:
                                                                revert with 0, 50
                                                            if sub_6a9c5462 < sub_81170b98[idx]:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (8 * ceil32(return_data.size)) + 292
                                                                    t = (7 * ceil32(return_data.size)) + 128
                                                                    while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29536 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29792 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29536 + (32 * _29792) + 32 <= return_data.size
                                                                    s = (10 * ceil32(return_data.size)) + 224
                                                                    idx = (8 * ceil32(return_data.size)) + _29536 + 224
                                                                    while idx < (8 * ceil32(return_data.size)) + _29536 + (32 * _29792) + 224:
                                                                        mem[s] = mem[idx]
                                                                        s = s + 32
                                                                        idx = idx + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38577 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38577] == bool(mem[_38577])
                                                                    else:
                                                                        if 1 >= _29792:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39362 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39362] == bool(mem[_39362])
                                                            else:
                                                                if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                    if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                    emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        revert with 0, 17
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(8 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                    mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                    s = 0
                                                                    t = (8 * ceil32(return_data.size)) + 292
                                                                    u = (7 * ceil32(return_data.size)) + 128
                                                                    while s < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                        mem[t] = mem[u + 12 len 20]
                                                                        s = s + 1
                                                                        t = t + 32
                                                                        u = u + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29537 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                    require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                    require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                    _29793 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                    require _29537 + (32 * _29793) + 32 <= return_data.size
                                                                    t = (10 * ceil32(return_data.size)) + 224
                                                                    s = (8 * ceil32(return_data.size)) + _29537 + 224
                                                                    while s < (8 * ceil32(return_data.size)) + _29537 + (32 * _29793) + 224:
                                                                        mem[t] = mem[s]
                                                                        t = t + 32
                                                                        s = s + 32
                                                                        continue 
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38578 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38578] == bool(mem[_38578])
                                                                    else:
                                                                        if 1 >= _29793:
                                                                            revert with 0, 50
                                                                        if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39366 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39366] == bool(mem[_39366])
                                                            return 1
                                                        if sub_6a9c5462 < 0:
                                                            if arg2 and 0 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= 0:
                                                                if sub_817ca11a > -1:
                                                                    revert with 0, 17
                                                                if balanceOf[address(arg1)] < 0:
                                                                    revert with 0, 17
                                                                if totalSupply < 0:
                                                                    revert with 0, 17
                                                                emit 0xfeddf252: 0, arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < 0:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2, 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29534 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                _29790 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                require _29534 + (32 * _29790) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29790)] = mem[(8 * ceil32(return_data.size)) + _29534 + 224 len ceil32(32 * _29790)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38575 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38575] == bool(mem[_38575])
                                                                else:
                                                                    if 1 >= _29790:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39354 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39354] == bool(mem[_39354])
                                                        else:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(7 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(7 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(7 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(7 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(8 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(8 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(8 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(8 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (8 * ceil32(return_data.size)) + 292
                                                                t = (7 * ceil32(return_data.size)) + 128
                                                                while idx < mem[(7 * ceil32(return_data.size)) + 96]:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), 64, mem[(8 * ceil32(return_data.size)) + 260 len (32 * mem[(7 * ceil32(return_data.size)) + 96]) + 32]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(8 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (10 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _29535 = mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (8 * ceil32(return_data.size)) + return_data.size + 192 > (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _29791 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(10 * ceil32(return_data.size)) + 192] = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _29535 + (32 * _29791) + 32 <= return_data.size
                                                                mem[(10 * ceil32(return_data.size)) + 224 len ceil32(32 * _29791)] = mem[(8 * ceil32(return_data.size)) + _29535 + 224 len ceil32(32 * _29791)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _38576 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_38576] == bool(mem[_38576])
                                                                else:
                                                                    if 1 >= _29791:
                                                                        revert with 0, 50
                                                                    if mem[(10 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _39358 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_39358] == bool(mem[_39358])
        else:
            mem[ceil32(return_data.size) + 100] = msg.sender
            staticcall walletObserverImplementationAddress.isExcludedFromObserver(address arg1) with:
                    gas gas_remaining wei
                   args msg.sender
            mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if not sub_ddd14d5aAddress:
                if liquidityPoolManagerImplementationAddress:
                    if liquidityPoolManagerImplementationAddress != msg.sender:
                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                             gas gas_remaining wei
                            args msg.sender
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if ext_call.return_data[0]:
                    if liquidityPoolManagerImplementationAddress:
                        if liquidityPoolManagerImplementationAddress != msg.sender:
                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                 gas gas_remaining wei
                                args msg.sender
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    if liquidityPoolManagerImplementationAddress == arg1:
                        if liquidityPoolManagerImplementationAddress:
                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                     gas gas_remaining wei
                                    args msg.sender
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        if liquidityPoolManagerImplementationAddress == msg.sender:
                            if liquidityPoolManagerImplementationAddress:
                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                         gas gas_remaining wei
                                        args msg.sender
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        else:
                            if liquidityPoolManagerImplementationAddress:
                                if not arg1:
                                    if liquidityPoolManagerImplementationAddress:
                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                 gas gas_remaining wei
                                                args msg.sender
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                else:
                                    if not msg.sender:
                                        if liquidityPoolManagerImplementationAddress:
                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                     gas gas_remaining wei
                                                    args msg.sender
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    else:
                                        mem[(2 * ceil32(return_data.size)) + 100] = msg.sender
                                        staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[(4 * ceil32(return_data.size)) + 100] = msg.sender
                                        staticcall liquidityPoolManagerImplementationAddress.isRouter(address arg1) with:
                                                gas gas_remaining wei
                                               args msg.sender
                                        mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0] > 0:
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_2115ec8e > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_2115ec8e / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                                if totalSupply < arg2 * sub_2115ec8e / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_2115ec8e / 100
                                                emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(6 * ceil32(return_data.size)) + 100] = arg1
                                                staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                        gas gas_remaining wei
                                                       args arg1
                                                mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if not ext_call.return_data[0]:
                                                    if arg2 and sub_2115ec8e > -1 / arg2:
                                                        revert with 0, 17
                                                    if sub_817ca11a > !(arg2 * sub_2115ec8e / 100):
                                                        revert with 0, 17
                                                    sub_817ca11a += arg2 * sub_2115ec8e / 100
                                                    if balanceOf[address(arg1)] < arg2 * sub_2115ec8e / 100:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)] -= arg2 * sub_2115ec8e / 100
                                                    if totalSupply < arg2 * sub_2115ec8e / 100:
                                                        revert with 0, 17
                                                    totalSupply -= arg2 * sub_2115ec8e / 100
                                                    emit 0xfeddf252: (arg2 * sub_2115ec8e / 100), arg1, 0
                                                    if liquidityPoolManagerImplementationAddress:
                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                 gas gas_remaining wei
                                                                args msg.sender
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[(7 * ceil32(return_data.size)) + 100] = msg.sender
                                                    staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args msg.sender
                                                    mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (8 * ceil32(return_data.size)) + 96
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > 0:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (10 * ceil32(return_data.size)) + 292
                                                                t = (8 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16165 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _16261 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _16165 + (32 * _16261) + 32 <= return_data.size
                                                                mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _16261)] = mem[(10 * ceil32(return_data.size)) + _16165 + 224 len ceil32(32 * _16261)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30960 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30960] == bool(mem[_30960])
                                                                else:
                                                                    if 1 >= _16261:
                                                                        revert with 0, 50
                                                                    if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31634 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31634] == bool(mem[_31634])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_fa130fdf < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (10 * ceil32(return_data.size)) + 292
                                                                        t = (8 * ceil32(return_data.size)) + 128
                                                                        while idx < 2:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29555 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29811 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29555 + (32 * _29811) + 32 <= return_data.size
                                                                        s = (11 * ceil32(return_data.size)) + 224
                                                                        idx = (10 * ceil32(return_data.size)) + _29555 + 224
                                                                        while idx < (10 * ceil32(return_data.size)) + _29555 + (32 * _29811) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38589 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38589] == bool(mem[_38589])
                                                                        else:
                                                                            if 1 >= _29811:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39410 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39410] == bool(mem[_39410])
                                                                else:
                                                                    if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (10 * ceil32(return_data.size)) + 292
                                                                        u = (8 * ceil32(return_data.size)) + 128
                                                                        while s < 2:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29556 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29812 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29556 + (32 * _29812) + 32 <= return_data.size
                                                                        t = (11 * ceil32(return_data.size)) + 224
                                                                        s = (10 * ceil32(return_data.size)) + _29556 + 224
                                                                        while s < (10 * ceil32(return_data.size)) + _29556 + (32 * _29812) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38590 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38590] == bool(mem[_38590])
                                                                        else:
                                                                            if 1 >= _29812:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39414 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39414] == bool(mem[_39414])
                                                                return 1
                                                            if sub_fa130fdf < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29553 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29809 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29553 + (32 * _29809) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29809)] = mem[(10 * ceil32(return_data.size)) + _29553 + 224 len ceil32(32 * _29809)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38587 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38587] == bool(mem[_38587])
                                                                    else:
                                                                        if 1 >= _29809:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39402 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39402] == bool(mem[_39402])
                                                            else:
                                                                if arg2 and sub_fa130fdf > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29554 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                    _29810 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    require _29554 + (32 * _29810) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29810)] = mem[(10 * ceil32(return_data.size)) + _29554 + 224 len ceil32(32 * _29810)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38588 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38588] == bool(mem[_38588])
                                                                    else:
                                                                        if 1 >= _29810:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39406 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39406] == bool(mem[_39406])
                                                    else:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (10 * ceil32(return_data.size)) + 292
                                                                t = (8 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16167 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _16263 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _16167 + (32 * _16263) + 32 <= return_data.size
                                                                mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _16263)] = mem[(10 * ceil32(return_data.size)) + _16167 + 224 len ceil32(32 * _16263)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30965 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30965] == bool(mem[_30965])
                                                                else:
                                                                    if 1 >= _16263:
                                                                        revert with 0, 50
                                                                    if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31642 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31642] == bool(mem[_31642])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_6a9c5462 < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (10 * ceil32(return_data.size)) + 292
                                                                        t = (8 * ceil32(return_data.size)) + 128
                                                                        while idx < 2:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29560 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29816 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29560 + (32 * _29816) + 32 <= return_data.size
                                                                        s = (11 * ceil32(return_data.size)) + 224
                                                                        idx = (10 * ceil32(return_data.size)) + _29560 + 224
                                                                        while idx < (10 * ceil32(return_data.size)) + _29560 + (32 * _29816) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38593 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38593] == bool(mem[_38593])
                                                                        else:
                                                                            if 1 >= _29816:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39426 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39426] == bool(mem[_39426])
                                                                else:
                                                                    if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (10 * ceil32(return_data.size)) + 292
                                                                        u = (8 * ceil32(return_data.size)) + 128
                                                                        while s < 2:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29561 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29817 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29561 + (32 * _29817) + 32 <= return_data.size
                                                                        t = (11 * ceil32(return_data.size)) + 224
                                                                        s = (10 * ceil32(return_data.size)) + _29561 + 224
                                                                        while s < (10 * ceil32(return_data.size)) + _29561 + (32 * _29817) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38594 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38594] == bool(mem[_38594])
                                                                        else:
                                                                            if 1 >= _29817:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39430 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39430] == bool(mem[_39430])
                                                                return 1
                                                            if sub_6a9c5462 < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29558 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29814 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29558 + (32 * _29814) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29814)] = mem[(10 * ceil32(return_data.size)) + _29558 + 224 len ceil32(32 * _29814)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38591 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38591] == bool(mem[_38591])
                                                                    else:
                                                                        if 1 >= _29814:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39418 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39418] == bool(mem[_39418])
                                                            else:
                                                                if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29559 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                    _29815 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    require _29559 + (32 * _29815) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29815)] = mem[(10 * ceil32(return_data.size)) + _29559 + 224 len ceil32(32 * _29815)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38592 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38592] == bool(mem[_38592])
                                                                    else:
                                                                        if 1 >= _29815:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39422 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39422] == bool(mem[_39422])
                                        else:
                                            if not ext_call.return_data[0]:
                                                if arg2 and sub_eaf447d4 > -1 / arg2:
                                                    revert with 0, 17
                                                if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                    revert with 0, 17
                                                sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                                if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                                if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                    revert with 0, 17
                                                totalSupply -= arg2 * sub_eaf447d4 / 100
                                                emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                                if liquidityPoolManagerImplementationAddress:
                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                             gas gas_remaining wei
                                                            args msg.sender
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            else:
                                                mem[(6 * ceil32(return_data.size)) + 100] = arg1
                                                staticcall liquidityPoolManagerImplementationAddress.isPair(address arg1) with:
                                                        gas gas_remaining wei
                                                       args arg1
                                                mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if not ext_call.return_data[0]:
                                                    if arg2 and sub_eaf447d4 > -1 / arg2:
                                                        revert with 0, 17
                                                    if sub_817ca11a > !(arg2 * sub_eaf447d4 / 100):
                                                        revert with 0, 17
                                                    sub_817ca11a += arg2 * sub_eaf447d4 / 100
                                                    if balanceOf[address(arg1)] < arg2 * sub_eaf447d4 / 100:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)] -= arg2 * sub_eaf447d4 / 100
                                                    if totalSupply < arg2 * sub_eaf447d4 / 100:
                                                        revert with 0, 17
                                                    totalSupply -= arg2 * sub_eaf447d4 / 100
                                                    emit 0xfeddf252: (arg2 * sub_eaf447d4 / 100), arg1, 0
                                                    if liquidityPoolManagerImplementationAddress:
                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                 gas gas_remaining wei
                                                                args msg.sender
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                else:
                                                    mem[(7 * ceil32(return_data.size)) + 100] = msg.sender
                                                    staticcall sub_ddd14d5aAddress.0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args msg.sender
                                                    mem[(7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    mem[64] = (8 * ceil32(return_data.size)) + 96
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[0] > 0:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_fa130fdf > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_fa130fdf / 100
                                                                emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_fa130fdf / 100:
                                                                    revert with 0, 17
                                                                mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (10 * ceil32(return_data.size)) + 292
                                                                t = (8 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16177 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                _16273 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                require _16177 + (32 * _16273) + 32 <= return_data.size
                                                                mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _16273)] = mem[(10 * ceil32(return_data.size)) + _16177 + 224 len ceil32(32 * _16273)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30984 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30984] == bool(mem[_30984])
                                                                else:
                                                                    if 1 >= _16273:
                                                                        revert with 0, 50
                                                                    if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31682 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31682] == bool(mem[_31682])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_fa130fdf < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (10 * ceil32(return_data.size)) + 292
                                                                        t = (8 * ceil32(return_data.size)) + 128
                                                                        while idx < 2:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29579 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29835 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29579 + (32 * _29835) + 32 <= return_data.size
                                                                        s = (11 * ceil32(return_data.size)) + 224
                                                                        idx = (10 * ceil32(return_data.size)) + _29579 + 224
                                                                        while idx < (10 * ceil32(return_data.size)) + _29579 + (32 * _29835) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38605 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38605] == bool(mem[_38605])
                                                                        else:
                                                                            if 1 >= _29835:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39474 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39474] == bool(mem[_39474])
                                                                else:
                                                                    if arg2 and sub_fa130fdf - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (10 * ceil32(return_data.size)) + 292
                                                                        u = (8 * ceil32(return_data.size)) + 128
                                                                        while s < 2:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29580 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29836 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29580 + (32 * _29836) + 32 <= return_data.size
                                                                        t = (11 * ceil32(return_data.size)) + 224
                                                                        s = (10 * ceil32(return_data.size)) + _29580 + 224
                                                                        while s < (10 * ceil32(return_data.size)) + _29580 + (32 * _29836) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38606 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38606] == bool(mem[_38606])
                                                                        else:
                                                                            if 1 >= _29836:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_fa130fdf * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39478 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39478] == bool(mem[_39478])
                                                                return 1
                                                            if sub_fa130fdf < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29577 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29833 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29577 + (32 * _29833) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29833)] = mem[(10 * ceil32(return_data.size)) + _29577 + 224 len ceil32(32 * _29833)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38603 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38603] == bool(mem[_38603])
                                                                    else:
                                                                        if 1 >= _29833:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39466 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39466] == bool(mem[_39466])
                                                            else:
                                                                if arg2 and sub_fa130fdf > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_fa130fdf / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                    if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_fa130fdf / 100
                                                                    emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_fa130fdf / 100:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_fa130fdf / 100)
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_fa130fdf / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29578 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 223
                                                                    _29834 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_fa130fdf / 100)) >> 32 + 192]
                                                                    require _29578 + (32 * _29834) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29834)] = mem[(10 * ceil32(return_data.size)) + _29578 + 224 len ceil32(32 * _29834)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38604 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38604] == bool(mem[_38604])
                                                                    else:
                                                                        if 1 >= _29834:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_fa130fdf / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_fa130fdf / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_fa130fdf / 100
                                                                        if totalSupply < arg2 * sub_fa130fdf / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_fa130fdf / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_fa130fdf / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39470 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39470] == bool(mem[_39470])
                                                    else:
                                                        if not sub_f52bfb76.length:
                                                            if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                revert with 0, 17
                                                            if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                    revert with 0, 17
                                                                sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                if liquidityPoolManagerImplementationAddress:
                                                                    if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                        call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            else:
                                                                mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                        gas gas_remaining wei
                                                                mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                    revert with 0, 17
                                                                mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                idx = 0
                                                                s = (10 * ceil32(return_data.size)) + 292
                                                                t = (8 * ceil32(return_data.size)) + 128
                                                                while idx < 2:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                require return_data.size >= 32
                                                                _16179 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                _16275 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                    revert with 0, 65
                                                                if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                    revert with 0, 65
                                                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                require _16179 + (32 * _16275) + 32 <= return_data.size
                                                                mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _16275)] = mem[(10 * ceil32(return_data.size)) + _16179 + 224 len ceil32(32 * _16275)]
                                                                if not sub_5ae60c12:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _30989 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_30989] == bool(mem[_30989])
                                                                else:
                                                                    if 1 >= _16275:
                                                                        revert with 0, 50
                                                                    if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                        revert with 0, 'USDC amount exceeds max USDC limit'
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    mem[32] = 101
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    mem[0] = arg1
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            mem[mem[64] + 4] = msg.sender
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            mem[mem[64]] = ext_call.return_data[0]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            _31690 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                                            require return_data.size >= 32
                                                                            require mem[_31690] == bool(mem[_31690])
                                                        else:
                                                            if sub_f52bfb76.length != sub_81170b98.length:
                                                                revert with 0, 'deduct information invalid'
                                                            mem[0] = msg.sender
                                                            mem[32] = 101
                                                            idx = sub_f52bfb76.length
                                                            while idx:
                                                                if idx < 1:
                                                                    revert with 0, 17
                                                                if idx - 1 >= sub_f52bfb76.length:
                                                                    revert with 0, 50
                                                                mem[0] = 415
                                                                if balanceOf[address(msg.sender)] < sub_f52bfb76[idx]:
                                                                    if not idx:
                                                                        revert with 0, 17
                                                                    idx = idx - 1
                                                                    continue 
                                                                if idx - 1 >= sub_81170b98.length:
                                                                    revert with 0, 50
                                                                if sub_6a9c5462 < sub_81170b98[idx]:
                                                                    if arg2 and 0 > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= 0:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < 0:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        idx = 0
                                                                        s = (10 * ceil32(return_data.size)) + 292
                                                                        t = (8 * ceil32(return_data.size)) + 128
                                                                        while idx < 2:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29584 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                        _29840 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                        require _29584 + (32 * _29840) + 32 <= return_data.size
                                                                        s = (11 * ceil32(return_data.size)) + 224
                                                                        idx = (10 * ceil32(return_data.size)) + _29584 + 224
                                                                        while idx < (10 * ceil32(return_data.size)) + _29584 + (32 * _29840) + 224:
                                                                            mem[s] = mem[idx]
                                                                            s = s + 32
                                                                            idx = idx + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38609 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38609] == bool(mem[_38609])
                                                                        else:
                                                                            if 1 >= _29840:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > -1:
                                                                                revert with 0, 17
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < 0:
                                                                                revert with 0, 17
                                                                            if totalSupply < 0:
                                                                                revert with 0, 17
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: 0, arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39490 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39490] == bool(mem[_39490])
                                                                else:
                                                                    if arg2 and sub_6a9c5462 - sub_81170b98[idx] > -1 / arg2:
                                                                        revert with 0, 17
                                                                    if arg2 <= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                        if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                        emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    else:
                                                                        mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                        mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                        staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                                gas gas_remaining wei
                                                                        mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                        mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                        if arg2 < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                            revert with 0, 17
                                                                        mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                        mem[(10 * ceil32(return_data.size)) + 196] = arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)
                                                                        mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                        mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                        s = 0
                                                                        t = (10 * ceil32(return_data.size)) + 292
                                                                        u = (8 * ceil32(return_data.size)) + 128
                                                                        while s < 2:
                                                                            mem[t] = mem[u + 12 len 20]
                                                                            s = s + 1
                                                                            t = t + 32
                                                                            u = u + 32
                                                                            continue 
                                                                        staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                                gas gas_remaining wei
                                                                               args arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                        require return_data.size >= 32
                                                                        _29585 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32
                                                                        require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 <= test266151307()
                                                                        require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 223
                                                                        _29841 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192] > test266151307():
                                                                            revert with 0, 65
                                                                        if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                            revert with 0, 65
                                                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]) + 193
                                                                        mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100)) >> 32 + 192]
                                                                        require _29585 + (32 * _29841) + 32 <= return_data.size
                                                                        t = (11 * ceil32(return_data.size)) + 224
                                                                        s = (10 * ceil32(return_data.size)) + _29585 + 224
                                                                        while s < (10 * ceil32(return_data.size)) + _29585 + (32 * _29841) + 224:
                                                                            mem[t] = mem[s]
                                                                            t = t + 32
                                                                            s = s + 32
                                                                            continue 
                                                                        if not sub_5ae60c12:
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _38610 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_38610] == bool(mem[_38610])
                                                                        else:
                                                                            if 1 >= _29841:
                                                                                revert with 0, 50
                                                                            if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                                revert with 0, 'USDC amount exceeds max USDC limit'
                                                                            if sub_817ca11a > !((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100):
                                                                                revert with 0, 17
                                                                            sub_817ca11a += (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[32] = 101
                                                                            if balanceOf[address(arg1)] < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            if totalSupply < (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100:
                                                                                revert with 0, 17
                                                                            totalSupply -= (sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100
                                                                            mem[0] = arg1
                                                                            emit 0xfeddf252: ((sub_6a9c5462 * arg2) - (sub_81170b98[idx] * arg2) / 100), arg1, 0
                                                                            if liquidityPoolManagerImplementationAddress:
                                                                                if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                    mem[mem[64] + 4] = msg.sender
                                                                                    call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender
                                                                                    mem[mem[64]] = ext_call.return_data[0]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    _39494 = mem[64]
                                                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                                                    require return_data.size >= 32
                                                                                    require mem[_39494] == bool(mem[_39494])
                                                                return 1
                                                            if sub_6a9c5462 < 0:
                                                                if arg2 and 0 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= 0:
                                                                    if sub_817ca11a > -1:
                                                                        revert with 0, 17
                                                                    if balanceOf[address(arg1)] < 0:
                                                                        revert with 0, 17
                                                                    if totalSupply < 0:
                                                                        revert with 0, 17
                                                                    emit 0xfeddf252: 0, arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < 0:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2, Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29582 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 223
                                                                    _29838 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2) >> 32 + 192]
                                                                    require _29582 + (32 * _29838) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29838)] = mem[(10 * ceil32(return_data.size)) + _29582 + 224 len ceil32(32 * _29838)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38607 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38607] == bool(mem[_38607])
                                                                    else:
                                                                        if 1 >= _29838:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > -1:
                                                                            revert with 0, 17
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < 0:
                                                                            revert with 0, 17
                                                                        if totalSupply < 0:
                                                                            revert with 0, 17
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: 0, arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39482 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39482] == bool(mem[_39482])
                                                            else:
                                                                if arg2 and sub_6a9c5462 > -1 / arg2:
                                                                    revert with 0, 17
                                                                if arg2 <= arg2 * sub_6a9c5462 / 100:
                                                                    if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                        revert with 0, 17
                                                                    sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                    if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                    if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                    emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                    if liquidityPoolManagerImplementationAddress:
                                                                        if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                            call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                else:
                                                                    mem[(8 * ceil32(return_data.size)) + 96] = 2
                                                                    mem[(8 * ceil32(return_data.size)) + 128] = this.address
                                                                    staticcall liquidityPoolManagerImplementationAddress.getRightSide() with:
                                                                            gas gas_remaining wei
                                                                    mem[(8 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                                                    mem[(8 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
                                                                    if arg2 < arg2 * sub_6a9c5462 / 100:
                                                                        revert with 0, 17
                                                                    mem[(10 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                    mem[(10 * ceil32(return_data.size)) + 196] = arg2 - (arg2 * sub_6a9c5462 / 100)
                                                                    mem[(10 * ceil32(return_data.size)) + 228] = 64
                                                                    mem[(10 * ceil32(return_data.size)) + 260] = 2
                                                                    idx = 0
                                                                    s = (10 * ceil32(return_data.size)) + 292
                                                                    t = (8 * ceil32(return_data.size)) + 128
                                                                    while idx < 2:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    staticcall msg.sender.getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                            gas gas_remaining wei
                                                                           args arg2 - (arg2 * sub_6a9c5462 / 100), Array(len=2, data=mem[(10 * ceil32(return_data.size)) + 292 len 64])
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    mem[(10 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    mem[64] = (11 * ceil32(return_data.size)) + 192
                                                                    require return_data.size >= 32
                                                                    _29583 = mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32
                                                                    require mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 <= test266151307()
                                                                    require (10 * ceil32(return_data.size)) + return_data.size + 192 > (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 223
                                                                    _29839 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192] > test266151307():
                                                                        revert with 0, 65
                                                                    if ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 1 < 0 or (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193 > test266151307():
                                                                        revert with 0, 65
                                                                    mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]) + 193
                                                                    mem[(11 * ceil32(return_data.size)) + 192] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, arg2 - (arg2 * sub_6a9c5462 / 100)) >> 32 + 192]
                                                                    require _29583 + (32 * _29839) + 32 <= return_data.size
                                                                    mem[(11 * ceil32(return_data.size)) + 224 len ceil32(32 * _29839)] = mem[(10 * ceil32(return_data.size)) + _29583 + 224 len ceil32(32 * _29839)]
                                                                    if not sub_5ae60c12:
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _38608 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_38608] == bool(mem[_38608])
                                                                    else:
                                                                        if 1 >= _29839:
                                                                            revert with 0, 50
                                                                        if mem[(11 * ceil32(return_data.size)) + 256] > sub_5ae60c12:
                                                                            revert with 0, 'USDC amount exceeds max USDC limit'
                                                                        if sub_817ca11a > !(arg2 * sub_6a9c5462 / 100):
                                                                            revert with 0, 17
                                                                        sub_817ca11a += arg2 * sub_6a9c5462 / 100
                                                                        mem[32] = 101
                                                                        if balanceOf[address(arg1)] < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] -= arg2 * sub_6a9c5462 / 100
                                                                        if totalSupply < arg2 * sub_6a9c5462 / 100:
                                                                            revert with 0, 17
                                                                        totalSupply -= arg2 * sub_6a9c5462 / 100
                                                                        mem[0] = arg1
                                                                        emit 0xfeddf252: (arg2 * sub_6a9c5462 / 100), arg1, 0
                                                                        if liquidityPoolManagerImplementationAddress:
                                                                            if liquidityPoolManagerImplementationAddress != msg.sender:
                                                                                mem[mem[64] + 4] = msg.sender
                                                                                call liquidityPoolManagerImplementationAddress.0xf3988ce with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender
                                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                _39486 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                                require return_data.size >= 32
                                                                                require mem[_39486] == bool(mem[_39486])
    return 1
}



}
