contract main {




// =====================  Runtime code  =====================


#
#  - sub_082bfd18(?)
#
address stor0;
address stor1;

function _fallback() payable {
    revert
}

function changeOwner(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if stor1 != msg.sender:
        revert with 0, 'Caller is not moderator'
    stor0 = arg1
    emit OwnerSet(stor0, arg1);
}

function getTokenBalance(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function withdraw(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if stor1 != msg.sender:
        revert with 0, 'Caller is not moderator'
    mem[100] = this.address
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg2 > ext_call.return_data[0]:
        revert with 0, 'Not enough balance'
    mem[ceil32(return_data.size) + 100] = this.address
    mem[ceil32(return_data.size) + 132] = arg2
    require ext_code.size(arg1)
    call arg1.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args this.address, arg2
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = this.address
    mem[(2 * ceil32(return_data.size)) + 164] = stor1
    mem[(2 * ceil32(return_data.size)) + 196] = arg2
    mem[(2 * ceil32(return_data.size)) + 96] = 100
    mem[(2 * ceil32(return_data.size)) + 132 len 28] = address(this.address) << 64
    mem[(2 * ceil32(return_data.size)) + 128 len 4] = unknown_0x23b872dd(?????)
    mem[(2 * ceil32(return_data.size)) + 228] = 32
    mem[(2 * ceil32(return_data.size)) + 260] = 'SafeERC20: low-level call failed'
    if not ext_code.size(arg1):
        revert with 0, 'Address: call to non-contract'
    mem[(2 * ceil32(return_data.size)) + 292 len 128] = unknown_0x23b872dd(?????), address(this.address) << 64, 0, stor1, arg2, 0
    mem[(2 * ceil32(return_data.size)) + 392] = 0
    call arg1 with:
       funct Mask(32, 224, unknown_0x23b872dd(?????), address(this.address) << 64, 0, stor1, arg2, 0) >> 224
         gas gas_remaining wei
        args (Mask(768, -544, unknown_0x23b872dd(?????), address(this.address) << 64, 0, stor1, arg2, 0) << 544)
    if not return_data.size:
        if not ext_call.success:
            if ext_call.return_data[0]:
                revert with memory
                  from 128
                   len ext_call.return_data[0]
            revert with 0, 'SafeERC20: low-level call failed'
        if ext_call.return_data[0]:
            require ext_call.return_data[0] >= 32
            require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
            if not uint32(this.address), mem[132 len 28]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
    else:
        mem[(2 * ceil32(return_data.size)) + 324 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            require mem[(2 * ceil32(return_data.size)) + 324] == bool(mem[(2 * ceil32(return_data.size)) + 324])
            if not mem[(2 * ceil32(return_data.size)) + 324]:
                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
    emit Withdraw(address(arg1), arg2);
}

function sub_0f32600d(?) payable {
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    if stor0 != msg.sender:
        revert with 0, 'Caller is not owner'
    mem[100] = this.address
    require ext_code.size(0x136acd46c134e8269052c62a67042d6bdedde3c9)
    staticcall 0x136acd46c134e8269052c62a67042d6bdedde3c9.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if arg2 > ext_call.return_data[0]:
        revert with 0, 'Not enough Memo balance'
    mem[ceil32(return_data.size) + 100] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
    mem[ceil32(return_data.size) + 132] = arg2
    require ext_code.size(0x136acd46c134e8269052c62a67042d6bdedde3c9)
    call 0x136acd46c134e8269052c62a67042d6bdedde3c9.approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, arg2
    mem[ceil32(return_data.size) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    mem[(2 * ceil32(return_data.size)) + 132] = 1
    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.unstake(uint256 arg1, bool arg2) with:
         gas gas_remaining wei
        args arg2, 1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[(2 * ceil32(return_data.size)) + 100] = this.address
    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[(2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == arg2
    mem[(4 * ceil32(return_data.size)) + 100] = this.address
    require ext_code.size(address(arg1))
    staticcall address(arg1).pendingPayoutFor(address arg1) with:
            gas gas_remaining wei
           args this.address
    mem[(4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if address(arg3) == address(arg4):
            require ext_code.size(address(arg4))
            call address(arg4).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(address(arg1))
            call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                 gas gas_remaining wei
                args arg2, arg5, this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
            staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] <= 0:
                revert with 0, 'Not enough Time balance'
            require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
            call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
            call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            mem[(6 * ceil32(return_data.size)) + 132] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
            mem[(6 * ceil32(return_data.size)) + 164] = 0
            mem[(6 * ceil32(return_data.size)) + 96] = 68
            mem[(6 * ceil32(return_data.size)) + 132 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
            mem[(6 * ceil32(return_data.size)) + 128 len 4] = approve(address arg1, uint256 arg2)
            mem[(6 * ceil32(return_data.size)) + 196] = 32
            mem[(6 * ceil32(return_data.size)) + 228] = 'SafeERC20: low-level call failed'
            if not ext_code.size(address(arg3)):
                revert with 0, 'Address: call to non-contract'
            mem[(6 * ceil32(return_data.size)) + 260 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, 0, 0
            mem[(6 * ceil32(return_data.size)) + 328] = 0
            call address(arg3) with:
               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, 0, 0) >> 224
                 gas gas_remaining wei
                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, 0, 0) << 288)
            if not return_data.size:
                if not ext_call.success:
                    if ext_call.return_data[0]:
                        revert with memory
                          from 128
                           len ext_call.return_data[0]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not ext_call.return_data[0]:
                    if not arg2:
                        mem[(6 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + 328] = arg2
                        mem[(6 * ceil32(return_data.size)) + 260] = 68
                        mem[(6 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                        mem[(6 * ceil32(return_data.size)) + 360] = 32
                        mem[(6 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(6 * ceil32(return_data.size)) + 424 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(6 * ceil32(return_data.size)) + 492] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(6 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + 424] = 2
                                mem[(7 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + 524] = arg2
                                mem[(7 * ceil32(return_data.size)) + 556] = 1
                                mem[(7 * ceil32(return_data.size)) + 588] = 160
                                mem[(7 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + 716
                                t = (7 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + 620] = this.address
                                mem[(7 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41895 = mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (7 * ceil32(return_data.size)) + return_data.size + 520
                                _42151 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(8 * ceil32(return_data.size)) + 520] = _42151
                                require return_data.size >= _41895 + (32 * _42151) + 32
                                mem[(8 * ceil32(return_data.size)) + 552 len 32 * _42151] = mem[(7 * ceil32(return_data.size)) + _41895 + 552 len 32 * _42151]
                                if 1 >= _42151:
                                    revert with 0, 50
                                _50599 = mem[(8 * ceil32(return_data.size)) + 584]
                                if mem[(8 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50599
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50599
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51879 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51879] == bool(mem[_51879])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50599, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53927 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54183 = mem[_53927]
                                if mem[_53927] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54183
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54183
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55463] == bool(mem[_55463])
                                mem[mem[64] + 4] = _54183
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54183, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56487] == bool(mem[_56487])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(6 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + 424] = 2
                                mem[(7 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + 524] = arg2
                                mem[(7 * ceil32(return_data.size)) + 556] = 1
                                mem[(7 * ceil32(return_data.size)) + 588] = 160
                                mem[(7 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + 716
                                t = (7 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + 620] = this.address
                                mem[(7 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41896 = mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (7 * ceil32(return_data.size)) + return_data.size + 520
                                _42152 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(8 * ceil32(return_data.size)) + 520] = _42152
                                require return_data.size >= _41896 + (32 * _42152) + 32
                                mem[(8 * ceil32(return_data.size)) + 552 len 32 * _42152] = mem[(7 * ceil32(return_data.size)) + _41896 + 552 len 32 * _42152]
                                if 1 >= _42152:
                                    revert with 0, 50
                                _50600 = mem[(8 * ceil32(return_data.size)) + 584]
                                if mem[(8 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50600
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50600
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51880 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51880] == bool(mem[_51880])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50600, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53928 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54184 = mem[_53928]
                                if mem[_53928] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54184
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54184
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55464 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55464] == bool(mem[_55464])
                                mem[mem[64] + 4] = _54184
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54184, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56488 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56488] == bool(mem[_56488])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 424] = return_data.size
                            mem[(6 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not return_data.size:
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41897 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42153 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42153
                                require return_data.size >= _41897 + (32 * _42153) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42153] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41897 + 553 len 32 * _42153]
                                if 1 >= _42153:
                                    revert with 0, 50
                                _50601 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50601
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50601
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51881 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51881] == bool(mem[_51881])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50601, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53929 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54185 = mem[_53929]
                                if mem[_53929] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54185
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54185
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55465 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55465] == bool(mem[_55465])
                                mem[mem[64] + 4] = _54185
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54185, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56489 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56489] == bool(mem[_56489])
                            else:
                                require return_data.size >= 32
                                require mem[(6 * ceil32(return_data.size)) + 456] == bool(mem[(6 * ceil32(return_data.size)) + 456])
                                if not mem[(6 * ceil32(return_data.size)) + 456]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41898 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42154 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42154
                                require return_data.size >= _41898 + (32 * _42154) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42154] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41898 + 553 len 32 * _42154]
                                if 1 >= _42154:
                                    revert with 0, 50
                                _50602 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50602
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50602
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51882 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51882] == bool(mem[_51882])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50602, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53930 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54186 = mem[_53930]
                                if mem[_53930] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54186
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54186
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55466 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55466] == bool(mem[_55466])
                                mem[mem[64] + 4] = _54186
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54186, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56490 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56490] == bool(mem[_56490])
                    else:
                        mem[(6 * ceil32(return_data.size)) + 264] = this.address
                        mem[(6 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        require ext_code.size(address(arg3))
                        staticcall address(arg3).0xdd62ed3e with:
                                gas gas_remaining wei
                               args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(7 * ceil32(return_data.size)) + 328] = arg2
                        mem[(7 * ceil32(return_data.size)) + 260] = 68
                        mem[(7 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                        mem[(7 * ceil32(return_data.size)) + 360] = 32
                        mem[(7 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(7 * ceil32(return_data.size)) + 424 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(7 * ceil32(return_data.size)) + 492] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + 424] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 428] = 32
                                    mem[(8 * ceil32(return_data.size)) + 460] = 17
                                    mem[(8 * ceil32(return_data.size)) + 492] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 424
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + 424] = 2
                                mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                mem[(8 * ceil32(return_data.size)) + 556] = 1
                                mem[(8 * ceil32(return_data.size)) + 588] = 160
                                mem[(8 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 716
                                t = (8 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41903 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                _42159 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(10 * ceil32(return_data.size)) + 520] = _42159
                                require return_data.size >= _41903 + (32 * _42159) + 32
                                mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42159] = mem[(8 * ceil32(return_data.size)) + _41903 + 552 len 32 * _42159]
                                if 1 >= _42159:
                                    revert with 0, 50
                                _50607 = mem[(10 * ceil32(return_data.size)) + 584]
                                if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50607
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50607
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51887 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51887] == bool(mem[_51887])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50607, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53935 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54191 = mem[_53935]
                                if mem[_53935] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54191
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54191
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55471 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55471] == bool(mem[_55471])
                                mem[mem[64] + 4] = _54191
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54191, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56495 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56495] == bool(mem[_56495])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + 424] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 428] = 32
                                    mem[(8 * ceil32(return_data.size)) + 460] = 17
                                    mem[(8 * ceil32(return_data.size)) + 492] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 424
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + 424] = 2
                                mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                mem[(8 * ceil32(return_data.size)) + 556] = 1
                                mem[(8 * ceil32(return_data.size)) + 588] = 160
                                mem[(8 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 716
                                t = (8 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41904 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                _42160 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(10 * ceil32(return_data.size)) + 520] = _42160
                                require return_data.size >= _41904 + (32 * _42160) + 32
                                mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42160] = mem[(8 * ceil32(return_data.size)) + _41904 + 552 len 32 * _42160]
                                if 1 >= _42160:
                                    revert with 0, 50
                                _50608 = mem[(10 * ceil32(return_data.size)) + 584]
                                if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50608
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50608
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51888 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51888] == bool(mem[_51888])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50608, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53936 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54192 = mem[_53936]
                                if mem[_53936] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54192
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54192
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55472 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55472] == bool(mem[_55472])
                                mem[mem[64] + 4] = _54192
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54192, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56496 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56496] == bool(mem[_56496])
                        else:
                            mem[(7 * ceil32(return_data.size)) + 424] = return_data.size
                            mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not return_data.size:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41905 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42161 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42161
                                require return_data.size >= _41905 + (32 * _42161) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42161] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41905 + 553 len 32 * _42161]
                                if 1 >= _42161:
                                    revert with 0, 50
                                _50609 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50609
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50609
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51889 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51889] == bool(mem[_51889])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50609, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53937 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54193 = mem[_53937]
                                if mem[_53937] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54193
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54193
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55473 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55473] == bool(mem[_55473])
                                mem[mem[64] + 4] = _54193
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54193, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56497] == bool(mem[_56497])
                            else:
                                require return_data.size >= 32
                                require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                                if not mem[(7 * ceil32(return_data.size)) + 456]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41906 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42162 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42162
                                require return_data.size >= _41906 + (32 * _42162) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42162] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41906 + 553 len 32 * _42162]
                                if 1 >= _42162:
                                    revert with 0, 50
                                _50610 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50610
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50610
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51890 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51890] == bool(mem[_51890])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50610, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53938 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54194 = mem[_53938]
                                if mem[_53938] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54194
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54194
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55474 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55474] == bool(mem[_55474])
                                mem[mem[64] + 4] = _54194
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54194, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56498 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56498] == bool(mem[_56498])
                else:
                    require ext_call.return_data[0] >= 32
                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                    if not uint32(this.address), mem[132 len 28]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    if not arg2:
                        mem[(6 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + 328] = arg2
                        mem[(6 * ceil32(return_data.size)) + 260] = 68
                        mem[(6 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                        mem[(6 * ceil32(return_data.size)) + 360] = 32
                        mem[(6 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(6 * ceil32(return_data.size)) + 424 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(6 * ceil32(return_data.size)) + 492] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(6 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + 424] = 2
                                mem[(7 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + 524] = arg2
                                mem[(7 * ceil32(return_data.size)) + 556] = 1
                                mem[(7 * ceil32(return_data.size)) + 588] = 160
                                mem[(7 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + 716
                                t = (7 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + 620] = this.address
                                mem[(7 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41911 = mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (7 * ceil32(return_data.size)) + return_data.size + 520
                                _42167 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(8 * ceil32(return_data.size)) + 520] = _42167
                                require return_data.size >= _41911 + (32 * _42167) + 32
                                mem[(8 * ceil32(return_data.size)) + 552 len 32 * _42167] = mem[(7 * ceil32(return_data.size)) + _41911 + 552 len 32 * _42167]
                                if 1 >= _42167:
                                    revert with 0, 50
                                _50615 = mem[(8 * ceil32(return_data.size)) + 584]
                                if mem[(8 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50615
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50615
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51895 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51895] == bool(mem[_51895])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50615, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53943 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54199 = mem[_53943]
                                if mem[_53943] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54199
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54199
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55479 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55479] == bool(mem[_55479])
                                mem[mem[64] + 4] = _54199
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54199, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56503 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56503] == bool(mem[_56503])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(6 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + 424] = 2
                                mem[(7 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + 524] = arg2
                                mem[(7 * ceil32(return_data.size)) + 556] = 1
                                mem[(7 * ceil32(return_data.size)) + 588] = 160
                                mem[(7 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + 716
                                t = (7 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + 620] = this.address
                                mem[(7 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41912 = mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (7 * ceil32(return_data.size)) + return_data.size + 520
                                _42168 = mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + mem[(7 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(8 * ceil32(return_data.size)) + 520] = _42168
                                require return_data.size >= _41912 + (32 * _42168) + 32
                                mem[(8 * ceil32(return_data.size)) + 552 len 32 * _42168] = mem[(7 * ceil32(return_data.size)) + _41912 + 552 len 32 * _42168]
                                if 1 >= _42168:
                                    revert with 0, 50
                                _50616 = mem[(8 * ceil32(return_data.size)) + 584]
                                if mem[(8 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50616
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50616
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51896 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51896] == bool(mem[_51896])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50616, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53944 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54200 = mem[_53944]
                                if mem[_53944] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54200
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54200
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55480 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55480] == bool(mem[_55480])
                                mem[mem[64] + 4] = _54200
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54200, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56504 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56504] == bool(mem[_56504])
                        else:
                            mem[(6 * ceil32(return_data.size)) + 424] = return_data.size
                            mem[(6 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not return_data.size:
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41913 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42169 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42169
                                require return_data.size >= _41913 + (32 * _42169) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42169] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41913 + 553 len 32 * _42169]
                                if 1 >= _42169:
                                    revert with 0, 50
                                _50617 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50617
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50617
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51897 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51897] == bool(mem[_51897])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50617, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53945 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54201 = mem[_53945]
                                if mem[_53945] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54201
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54201
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55481] == bool(mem[_55481])
                                mem[mem[64] + 4] = _54201
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54201, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56505 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56505] == bool(mem[_56505])
                            else:
                                require return_data.size >= 32
                                require mem[(6 * ceil32(return_data.size)) + 456] == bool(mem[(6 * ceil32(return_data.size)) + 456])
                                if not mem[(6 * ceil32(return_data.size)) + 456]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41914 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42170 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42170
                                require return_data.size >= _41914 + (32 * _42170) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42170] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41914 + 553 len 32 * _42170]
                                if 1 >= _42170:
                                    revert with 0, 50
                                _50618 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50618
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50618
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51898 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51898] == bool(mem[_51898])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50618, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53946 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54202 = mem[_53946]
                                if mem[_53946] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54202
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54202
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55482 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55482] == bool(mem[_55482])
                                mem[mem[64] + 4] = _54202
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54202, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56506 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56506] == bool(mem[_56506])
                    else:
                        mem[(6 * ceil32(return_data.size)) + 264] = this.address
                        mem[(6 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        require ext_code.size(address(arg3))
                        staticcall address(arg3).0xdd62ed3e with:
                                gas gas_remaining wei
                               args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(7 * ceil32(return_data.size)) + 328] = arg2
                        mem[(7 * ceil32(return_data.size)) + 260] = 68
                        mem[(7 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                        mem[(7 * ceil32(return_data.size)) + 360] = 32
                        mem[(7 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(7 * ceil32(return_data.size)) + 424 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(7 * ceil32(return_data.size)) + 492] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + 424] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 428] = 32
                                    mem[(8 * ceil32(return_data.size)) + 460] = 17
                                    mem[(8 * ceil32(return_data.size)) + 492] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 424
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + 424] = 2
                                mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                mem[(8 * ceil32(return_data.size)) + 556] = 1
                                mem[(8 * ceil32(return_data.size)) + 588] = 160
                                mem[(8 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 716
                                t = (8 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41919 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                _42175 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(10 * ceil32(return_data.size)) + 520] = _42175
                                require return_data.size >= _41919 + (32 * _42175) + 32
                                mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42175] = mem[(8 * ceil32(return_data.size)) + _41919 + 552 len 32 * _42175]
                                if 1 >= _42175:
                                    revert with 0, 50
                                _50623 = mem[(10 * ceil32(return_data.size)) + 584]
                                if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50623
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50623
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51903 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51903] == bool(mem[_51903])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50623, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53951 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54207 = mem[_53951]
                                if mem[_53951] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54207
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54207
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55487] == bool(mem[_55487])
                                mem[mem[64] + 4] = _54207
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54207, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56511 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56511] == bool(mem[_56511])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + 424] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 428] = 32
                                    mem[(8 * ceil32(return_data.size)) + 460] = 17
                                    mem[(8 * ceil32(return_data.size)) + 492] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + 424
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + 424] = 2
                                mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                mem[(8 * ceil32(return_data.size)) + 556] = 1
                                mem[(8 * ceil32(return_data.size)) + 588] = 160
                                mem[(8 * ceil32(return_data.size)) + 684] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + 716
                                t = (8 * ceil32(return_data.size)) + 456
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + 520
                                require return_data.size >= 32
                                _41920 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                _42176 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                mem[(10 * ceil32(return_data.size)) + 520] = _42176
                                require return_data.size >= _41920 + (32 * _42176) + 32
                                mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42176] = mem[(8 * ceil32(return_data.size)) + _41920 + 552 len 32 * _42176]
                                if 1 >= _42176:
                                    revert with 0, 50
                                _50624 = mem[(10 * ceil32(return_data.size)) + 584]
                                if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50624
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50624
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51904 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51904] == bool(mem[_51904])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50624, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53952 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54208 = mem[_53952]
                                if mem[_53952] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54208
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54208
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55488 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55488] == bool(mem[_55488])
                                mem[mem[64] + 4] = _54208
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54208, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56512 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56512] == bool(mem[_56512])
                        else:
                            mem[(7 * ceil32(return_data.size)) + 424] = return_data.size
                            mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not return_data.size:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41921 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42177 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42177
                                require return_data.size >= _41921 + (32 * _42177) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42177] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41921 + 553 len 32 * _42177]
                                if 1 >= _42177:
                                    revert with 0, 50
                                _50625 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50625
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50625
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51905 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51905] == bool(mem[_51905])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50625, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53953 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54209 = mem[_53953]
                                if mem[_53953] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54209
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54209
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55489 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55489] == bool(mem[_55489])
                                mem[mem[64] + 4] = _54209
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54209, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56513 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56513] == bool(mem[_56513])
                            else:
                                require return_data.size >= 32
                                require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                                if not mem[(7 * ceil32(return_data.size)) + 456]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41922 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42178 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42178
                                require return_data.size >= _41922 + (32 * _42178) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42178] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41922 + 553 len 32 * _42178]
                                if 1 >= _42178:
                                    revert with 0, 50
                                _50626 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50626
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50626
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51906 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51906] == bool(mem[_51906])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50626, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53954 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54210 = mem[_53954]
                                if mem[_53954] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54210
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54210
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55490 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55490] == bool(mem[_55490])
                                mem[mem[64] + 4] = _54210
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54210, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56514 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56514] == bool(mem[_56514])
            else:
                mem[(6 * ceil32(return_data.size)) + 260] = return_data.size
                mem[(6 * ceil32(return_data.size)) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    if return_data.size:
                        revert with ext_call.return_data[0 len return_data.size]
                    revert with 0, 'SafeERC20: low-level call failed'
                if not return_data.size:
                    if not arg2:
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41927 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42183 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42183
                                require return_data.size >= _41927 + (32 * _42183) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42183] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41927 + 553 len 32 * _42183]
                                if 1 >= _42183:
                                    revert with 0, 50
                                _50631 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50631
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50631
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51911 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51911] == bool(mem[_51911])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50631, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53959 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54215 = mem[_53959]
                                if mem[_53959] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54215
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54215
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55495 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55495] == bool(mem[_55495])
                                mem[mem[64] + 4] = _54215
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54215, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56519 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56519] == bool(mem[_56519])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41928 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42184 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42184
                                require return_data.size >= _41928 + (32 * _42184) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42184] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41928 + 553 len 32 * _42184]
                                if 1 >= _42184:
                                    revert with 0, 50
                                _50632 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50632
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50632
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51912 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51912] == bool(mem[_51912])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50632, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53960 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54216 = mem[_53960]
                                if mem[_53960] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54216
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54216
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55496 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55496] == bool(mem[_55496])
                                mem[mem[64] + 4] = _54216
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54216, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56520 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56520] == bool(mem[_56520])
                        else:
                            mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                            mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(9 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if not return_data.size:
                                mem[(9 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(9 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(9 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(9 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = 2
                                mem[(10 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(10 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 526] = arg2
                                mem[(10 * ceil32(return_data.size)) + 558] = 1
                                mem[(10 * ceil32(return_data.size)) + 590] = 160
                                mem[(10 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 718
                                t = (10 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 622] = this.address
                                mem[(10 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41929 = mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (10 * ceil32(return_data.size)) + return_data.size + 522
                                _42185 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(11 * ceil32(return_data.size)) + 522] = _42185
                                require return_data.size >= _41929 + (32 * _42185) + 32
                                mem[(11 * ceil32(return_data.size)) + 554 len 32 * _42185] = mem[(10 * ceil32(return_data.size)) + _41929 + 554 len 32 * _42185]
                                if 1 >= _42185:
                                    revert with 0, 50
                                _50633 = mem[(11 * ceil32(return_data.size)) + 586]
                                if mem[(11 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50633
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50633
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51913 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51913] == bool(mem[_51913])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50633, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53961 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54217 = mem[_53961]
                                if mem[_53961] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54217
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54217
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55497] == bool(mem[_55497])
                                mem[mem[64] + 4] = _54217
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54217, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56521 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56521] == bool(mem[_56521])
                            else:
                                require return_data.size >= 32
                                require mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                if not mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                'SafeERC20: ERC20 operation did not succeed',
                                                mem[(9 * ceil32(return_data.size)) + 558 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(9 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(9 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(9 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(9 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = 2
                                mem[(10 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(10 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 526] = arg2
                                mem[(10 * ceil32(return_data.size)) + 558] = 1
                                mem[(10 * ceil32(return_data.size)) + 590] = 160
                                mem[(10 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 718
                                t = (10 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 622] = this.address
                                mem[(10 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41930 = mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (10 * ceil32(return_data.size)) + return_data.size + 522
                                _42186 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(11 * ceil32(return_data.size)) + 522] = _42186
                                require return_data.size >= _41930 + (32 * _42186) + 32
                                mem[(11 * ceil32(return_data.size)) + 554 len 32 * _42186] = mem[(10 * ceil32(return_data.size)) + _41930 + 554 len 32 * _42186]
                                if 1 >= _42186:
                                    revert with 0, 50
                                _50634 = mem[(11 * ceil32(return_data.size)) + 586]
                                if mem[(11 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50634
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50634
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51914 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51914] == bool(mem[_51914])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50634, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53962 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54218 = mem[_53962]
                                if mem[_53962] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54218
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54218
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55498 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55498] == bool(mem[_55498])
                                mem[mem[64] + 4] = _54218
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54218, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56522 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56522] == bool(mem[_56522])
                    else:
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        require ext_code.size(address(arg3))
                        staticcall address(arg3).0xdd62ed3e with:
                                gas gas_remaining wei
                               args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41935 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42191 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42191
                                require return_data.size >= _41935 + (32 * _42191) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42191] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41935 + 553 len 32 * _42191]
                                if 1 >= _42191:
                                    revert with 0, 50
                                _50639 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50639
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50639
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51919 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51919] == bool(mem[_51919])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50639, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53967 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54223 = mem[_53967]
                                if mem[_53967] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54223
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54223
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55503 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55503] == bool(mem[_55503])
                                mem[mem[64] + 4] = _54223
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54223, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56527 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56527] == bool(mem[_56527])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41936 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42192 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42192
                                require return_data.size >= _41936 + (32 * _42192) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42192] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41936 + 553 len 32 * _42192]
                                if 1 >= _42192:
                                    revert with 0, 50
                                _50640 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50640
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50640
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51920 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51920] == bool(mem[_51920])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50640, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53968 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54224 = mem[_53968]
                                if mem[_53968] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54224
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54224
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55504 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55504] == bool(mem[_55504])
                                mem[mem[64] + 4] = _54224
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54224, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56528 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56528] == bool(mem[_56528])
                        else:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if not return_data.size:
                                mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(10 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(12 * ceil32(return_data.size)) + 526 len (5 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(12 * ceil32(return_data.size)) + 426] = 2
                                mem[(12 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(12 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(12 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(12 * ceil32(return_data.size)) + 526] = arg2
                                mem[(12 * ceil32(return_data.size)) + 558] = 1
                                mem[(12 * ceil32(return_data.size)) + 590] = 160
                                mem[(12 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (12 * ceil32(return_data.size)) + 718
                                t = (12 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(12 * ceil32(return_data.size)) + 622] = this.address
                                mem[(12 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(12 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(12 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (13 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41937 = mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (12 * ceil32(return_data.size)) + return_data.size + 522
                                _42193 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(13 * ceil32(return_data.size)) + 522] = _42193
                                require return_data.size >= _41937 + (32 * _42193) + 32
                                mem[(13 * ceil32(return_data.size)) + 554 len 32 * _42193] = mem[(12 * ceil32(return_data.size)) + _41937 + 554 len 32 * _42193]
                                if 1 >= _42193:
                                    revert with 0, 50
                                _50641 = mem[(13 * ceil32(return_data.size)) + 586]
                                if mem[(13 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50641
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50641
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51921 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51921] == bool(mem[_51921])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50641, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53969 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54225 = mem[_53969]
                                if mem[_53969] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54225
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54225
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55505 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55505] == bool(mem[_55505])
                                mem[mem[64] + 4] = _54225
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54225, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56529 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56529] == bool(mem[_56529])
                            else:
                                require return_data.size >= 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                'SafeERC20: ERC20 operation did not succeed',
                                                mem[(10 * ceil32(return_data.size)) + 558 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(10 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(12 * ceil32(return_data.size)) + 526 len (5 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(12 * ceil32(return_data.size)) + 426] = 2
                                mem[(12 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(12 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(12 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(12 * ceil32(return_data.size)) + 526] = arg2
                                mem[(12 * ceil32(return_data.size)) + 558] = 1
                                mem[(12 * ceil32(return_data.size)) + 590] = 160
                                mem[(12 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (12 * ceil32(return_data.size)) + 718
                                t = (12 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(12 * ceil32(return_data.size)) + 622] = this.address
                                mem[(12 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(12 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(12 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (13 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41938 = mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (12 * ceil32(return_data.size)) + return_data.size + 522
                                _42194 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(13 * ceil32(return_data.size)) + 522] = _42194
                                require return_data.size >= _41938 + (32 * _42194) + 32
                                mem[(13 * ceil32(return_data.size)) + 554 len 32 * _42194] = mem[(12 * ceil32(return_data.size)) + _41938 + 554 len 32 * _42194]
                                if 1 >= _42194:
                                    revert with 0, 50
                                _50642 = mem[(13 * ceil32(return_data.size)) + 586]
                                if mem[(13 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50642
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50642
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51922 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51922] == bool(mem[_51922])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50642, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53970 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54226 = mem[_53970]
                                if mem[_53970] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54226
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54226
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55506 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55506] == bool(mem[_55506])
                                mem[mem[64] + 4] = _54226
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54226, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56530 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56530] == bool(mem[_56530])
                else:
                    require return_data.size >= 32
                    require mem[(6 * ceil32(return_data.size)) + 292] == bool(mem[(6 * ceil32(return_data.size)) + 292])
                    if not mem[(6 * ceil32(return_data.size)) + 292]:
                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                    if not arg2:
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41943 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42199 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42199
                                require return_data.size >= _41943 + (32 * _42199) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42199] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41943 + 553 len 32 * _42199]
                                if 1 >= _42199:
                                    revert with 0, 50
                                _50647 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50647
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50647
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51927 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51927] == bool(mem[_51927])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50647, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53975 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54231 = mem[_53975]
                                if mem[_53975] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54231
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54231
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55511 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55511] == bool(mem[_55511])
                                mem[mem[64] + 4] = _54231
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54231, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56535 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56535] == bool(mem[_56535])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 'No Swap Available'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41944 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (7 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42200 = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42200
                                require return_data.size >= _41944 + (32 * _42200) + 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42200] = mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + _41944 + 553 len 32 * _42200]
                                if 1 >= _42200:
                                    revert with 0, 50
                                _50648 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50648
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50648
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51928 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51928] == bool(mem[_51928])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50648, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53976 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54232 = mem[_53976]
                                if mem[_53976] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54232
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54232
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55512 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55512] == bool(mem[_55512])
                                mem[mem[64] + 4] = _54232
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54232, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56536 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56536] == bool(mem[_56536])
                        else:
                            mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                            mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(9 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if not return_data.size:
                                mem[(9 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(9 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(9 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(9 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = 2
                                mem[(10 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(10 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 526] = arg2
                                mem[(10 * ceil32(return_data.size)) + 558] = 1
                                mem[(10 * ceil32(return_data.size)) + 590] = 160
                                mem[(10 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 718
                                t = (10 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 622] = this.address
                                mem[(10 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41945 = mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (10 * ceil32(return_data.size)) + return_data.size + 522
                                _42201 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(11 * ceil32(return_data.size)) + 522] = _42201
                                require return_data.size >= _41945 + (32 * _42201) + 32
                                mem[(11 * ceil32(return_data.size)) + 554 len 32 * _42201] = mem[(10 * ceil32(return_data.size)) + _41945 + 554 len 32 * _42201]
                                if 1 >= _42201:
                                    revert with 0, 50
                                _50649 = mem[(11 * ceil32(return_data.size)) + 586]
                                if mem[(11 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50649
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50649
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51929 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51929] == bool(mem[_51929])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50649, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53977 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54233 = mem[_53977]
                                if mem[_53977] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54233
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54233
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55513 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55513] == bool(mem[_55513])
                                mem[mem[64] + 4] = _54233
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54233, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56537 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56537] == bool(mem[_56537])
                            else:
                                require return_data.size >= 32
                                require mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                if not mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                'SafeERC20: ERC20 operation did not succeed',
                                                mem[(9 * ceil32(return_data.size)) + 558 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(9 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(9 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(9 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(9 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = 2
                                mem[(10 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(10 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(10 * ceil32(return_data.size)) + 526] = arg2
                                mem[(10 * ceil32(return_data.size)) + 558] = 1
                                mem[(10 * ceil32(return_data.size)) + 590] = 160
                                mem[(10 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (10 * ceil32(return_data.size)) + 718
                                t = (10 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(10 * ceil32(return_data.size)) + 622] = this.address
                                mem[(10 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(10 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (11 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41946 = mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (10 * ceil32(return_data.size)) + return_data.size + 522
                                _42202 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(11 * ceil32(return_data.size)) + 522] = _42202
                                require return_data.size >= _41946 + (32 * _42202) + 32
                                mem[(11 * ceil32(return_data.size)) + 554 len 32 * _42202] = mem[(10 * ceil32(return_data.size)) + _41946 + 554 len 32 * _42202]
                                if 1 >= _42202:
                                    revert with 0, 50
                                _50650 = mem[(11 * ceil32(return_data.size)) + 586]
                                if mem[(11 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50650
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50650
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51930 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51930] == bool(mem[_51930])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50650, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53978 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54234 = mem[_53978]
                                if mem[_53978] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54234
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54234
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55514 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55514] == bool(mem[_55514])
                                mem[mem[64] + 4] = _54234
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54234, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56538 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56538] == bool(mem[_56538])
                    else:
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        require ext_code.size(address(arg3))
                        staticcall address(arg3).0xdd62ed3e with:
                                gas gas_remaining wei
                               args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            revert with 0, 'SafeERC20: approve from non-zero to non-zero allowance'
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                        if not ext_code.size(address(arg3)):
                            revert with 0, 'Address: call to non-contract'
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0
                        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                        call address(arg3) with:
                           funct Mask(32, 224, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) >> 224
                             gas gas_remaining wei
                            args (Mask(512, -288, 0, 0x60ae616a2155ee3d9a68541ba4544862310933d4, arg2, 0) << 288)
                        if not return_data.size:
                            if not ext_call.success:
                                if ext_call.return_data[0]:
                                    revert with memory
                                      from 128
                                       len ext_call.return_data[0]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if not ext_call.return_data[0]:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41951 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42207 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42207
                                require return_data.size >= _41951 + (32 * _42207) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42207] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41951 + 553 len 32 * _42207]
                                if 1 >= _42207:
                                    revert with 0, 50
                                _50655 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50655
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50655
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51935 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51935] == bool(mem[_51935])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50655, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53983 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54239 = mem[_53983]
                                if mem[_53983] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54239
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54239
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55519 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55519] == bool(mem[_55519])
                                mem[mem[64] + 4] = _54239
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54239, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56543 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56543] == bool(mem[_56543])
                            else:
                                require ext_call.return_data[0] >= 32
                                require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                if not uint32(this.address), mem[132 len 28]:
                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4)
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 32
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = 17
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 'No Swap Available' << 120
                                    revert with memory
                                      from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425
                                       len ceil32(return_data.size) + 100
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                idx = 0
                                s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                require return_data.size >= 32
                                _41952 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                _42208 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                    revert with 0, 65
                                if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42208
                                require return_data.size >= _41952 + (32 * _42208) + 32
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42208] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41952 + 553 len 32 * _42208]
                                if 1 >= _42208:
                                    revert with 0, 50
                                _50656 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50656
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50656
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51936 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51936] == bool(mem[_51936])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50656, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53984 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54240 = mem[_53984]
                                if mem[_53984] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54240
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54240
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55520 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55520] == bool(mem[_55520])
                                mem[mem[64] + 4] = _54240
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54240, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56544 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56544] == bool(mem[_56544])
                        else:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 
                                            'SafeERC20: low-level call failed',
                                            mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                            if not return_data.size:
                                mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(10 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(12 * ceil32(return_data.size)) + 526 len (5 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(12 * ceil32(return_data.size)) + 426] = 2
                                mem[(12 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(12 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(12 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(12 * ceil32(return_data.size)) + 526] = arg2
                                mem[(12 * ceil32(return_data.size)) + 558] = 1
                                mem[(12 * ceil32(return_data.size)) + 590] = 160
                                mem[(12 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (12 * ceil32(return_data.size)) + 718
                                t = (12 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(12 * ceil32(return_data.size)) + 622] = this.address
                                mem[(12 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(12 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(12 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (13 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41953 = mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (12 * ceil32(return_data.size)) + return_data.size + 522
                                _42209 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(13 * ceil32(return_data.size)) + 522] = _42209
                                require return_data.size >= _41953 + (32 * _42209) + 32
                                mem[(13 * ceil32(return_data.size)) + 554 len 32 * _42209] = mem[(12 * ceil32(return_data.size)) + _41953 + 554 len 32 * _42209]
                                if 1 >= _42209:
                                    revert with 0, 50
                                _50657 = mem[(13 * ceil32(return_data.size)) + 586]
                                if mem[(13 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50657
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50657
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51937 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51937] == bool(mem[_51937])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50657, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53985 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54241 = mem[_53985]
                                if mem[_53985] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54241
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54241
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55521 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55521] == bool(mem[_55521])
                                mem[mem[64] + 4] = _54241
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54241, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56545 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56545] == bool(mem[_56545])
                            else:
                                require return_data.size >= 32
                                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                    revert with 0, 
                                                'SafeERC20: ERC20 operation did not succeed',
                                                mem[(10 * ceil32(return_data.size)) + 558 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                        gas gas_remaining wei
                                       args address(arg3), address(arg4), mem[(10 * ceil32(return_data.size)) + 494 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if not ext_call.return_data[12 len 20]:
                                    revert with 0, 
                                                'No Swap Available',
                                                mem[(12 * ceil32(return_data.size)) + 526 len (5 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                mem[(12 * ceil32(return_data.size)) + 426] = 2
                                mem[(12 * ceil32(return_data.size)) + 458] = address(arg3)
                                mem[(12 * ceil32(return_data.size)) + 490] = address(arg4)
                                mem[(12 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[(12 * ceil32(return_data.size)) + 526] = arg2
                                mem[(12 * ceil32(return_data.size)) + 558] = 1
                                mem[(12 * ceil32(return_data.size)) + 590] = 160
                                mem[(12 * ceil32(return_data.size)) + 686] = 2
                                idx = 0
                                s = (12 * ceil32(return_data.size)) + 718
                                t = (12 * ceil32(return_data.size)) + 458
                                while idx < 2:
                                    mem[s] = mem[t + 12 len 20]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                mem[(12 * ceil32(return_data.size)) + 622] = this.address
                                mem[(12 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(12 * ceil32(return_data.size)) + 718 len 64]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[(12 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = (13 * ceil32(return_data.size)) + 522
                                require return_data.size >= 32
                                _41954 = mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                require mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                require (12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (12 * ceil32(return_data.size)) + return_data.size + 522
                                _42210 = mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                if mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                    revert with 0, 65
                                if (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                    revert with 0, 65
                                mem[64] = (13 * ceil32(return_data.size)) + ceil32(32 * mem[(12 * ceil32(return_data.size)) + mem[(12 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                mem[(13 * ceil32(return_data.size)) + 522] = _42210
                                require return_data.size >= _41954 + (32 * _42210) + 32
                                mem[(13 * ceil32(return_data.size)) + 554 len 32 * _42210] = mem[(12 * ceil32(return_data.size)) + _41954 + 554 len 32 * _42210]
                                if 1 >= _42210:
                                    revert with 0, 50
                                _50658 = mem[(13 * ceil32(return_data.size)) + 586]
                                if mem[(13 * ceil32(return_data.size)) + 586] <= 0:
                                    revert with 0, 'Error Swapping Tokens 2'
                                mem[mem[64] + 4] = address(arg1)
                                mem[mem[64] + 36] = _50658
                                require ext_code.size(address(arg4))
                                call address(arg4).approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), _50658
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _51938 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_51938] == bool(mem[_51938])
                                mem[mem[64] + 36] = arg5
                                mem[mem[64] + 68] = this.address
                                require ext_code.size(address(arg1))
                                call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                     gas gas_remaining wei
                                    args _50658, arg5, this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _53986 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _54242 = mem[_53986]
                                if mem[_53986] <= 0:
                                    revert with 0, 'Not enough Time balance'
                                mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                mem[mem[64] + 36] = _54242
                                require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54242
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _55522 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_55522] == bool(mem[_55522])
                                mem[mem[64] + 4] = _54242
                                mem[mem[64] + 36] = this.address
                                require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                     gas gas_remaining wei
                                    args _54242, this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _56546 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_56546] == bool(mem[_56546])
    else:
        mem[(6 * ceil32(return_data.size)) + 100] = this.address
        mem[(6 * ceil32(return_data.size)) + 132] = 1
        require ext_code.size(address(arg1))
        call address(arg1).redeem(address arg1, bool arg2) with:
             gas gas_remaining wei
            args this.address, 1
        mem[(6 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if address(arg3) == address(arg4):
            require ext_code.size(address(arg4))
            call address(arg4).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(address(arg1))
            call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                 gas gas_remaining wei
                args arg2, arg5, this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
            staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] <= 0:
                revert with 0, 'Not enough Time balance'
            require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
            call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
            call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            mem[(7 * ceil32(return_data.size)) + 132] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
            mem[(7 * ceil32(return_data.size)) + 164] = 0
            mem[(7 * ceil32(return_data.size)) + 96] = 68
            mem[(7 * ceil32(return_data.size)) + 132 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
            mem[(7 * ceil32(return_data.size)) + 128 len 4] = approve(address arg1, uint256 arg2)
            mem[64] = (7 * ceil32(return_data.size)) + 260
            mem[(7 * ceil32(return_data.size)) + 196] = 32
            mem[(7 * ceil32(return_data.size)) + 228] = 'SafeERC20: low-level call failed'
            if not ext_code.size(address(arg3)):
                revert with 0, 'Address: call to non-contract'
            if var65001 < 68:
                mem[var65001 + (7 * ceil32(return_data.size)) + 260] = mem[var65001 + (7 * ceil32(return_data.size)) + 128]
                var65001 = var65001 + 32
                continue 
            if var65001 <= 68:
                call address(arg3).mem[(7 * ceil32(return_data.size)) + 260 len 4] with:
                     gas gas_remaining wei
                    args mem[(7 * ceil32(return_data.size)) + 264 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        if ext_call.return_data[0]:
                            revert with memory
                              from 128
                               len ext_call.return_data[0]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if not ext_call.return_data[0]:
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 328] = arg2
                            mem[(7 * ceil32(return_data.size)) + 260] = 68
                            mem[(7 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + 360] = 32
                            mem[(7 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + 424 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + 492] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _41959 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42215 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42215
                                    require return_data.size >= _41959 + (32 * _42215) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42215] = mem[(8 * ceil32(return_data.size)) + _41959 + 552 len 32 * _42215]
                                    if 1 >= _42215:
                                        revert with 0, 50
                                    _50663 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50663
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50663
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51943 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51943] == bool(mem[_51943])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50663, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _53991 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54247 = mem[_53991]
                                    if mem[_53991] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54247
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54247
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55527 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55527] == bool(mem[_55527])
                                    mem[mem[64] + 4] = _54247
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54247, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56551 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56551] == bool(mem[_56551])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _41960 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42216 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42216
                                    require return_data.size >= _41960 + (32 * _42216) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42216] = mem[(8 * ceil32(return_data.size)) + _41960 + 552 len 32 * _42216]
                                    if 1 >= _42216:
                                        revert with 0, 50
                                    _50664 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50664
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50664
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51944 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51944] == bool(mem[_51944])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50664, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _53992 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54248 = mem[_53992]
                                    if mem[_53992] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54248
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54248
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55528 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55528] == bool(mem[_55528])
                                    mem[mem[64] + 4] = _54248
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54248, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56552 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56552] == bool(mem[_56552])
                            else:
                                mem[(7 * ceil32(return_data.size)) + 424] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _41961 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42217 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42217
                                    require return_data.size >= _41961 + (32 * _42217) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42217] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41961 + 553 len 32 * _42217]
                                    if 1 >= _42217:
                                        revert with 0, 50
                                    _50665 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50665
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50665
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51945 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51945] == bool(mem[_51945])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50665, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _53993 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54249 = mem[_53993]
                                    if mem[_53993] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54249
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54249
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55529 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55529] == bool(mem[_55529])
                                    mem[mem[64] + 4] = _54249
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54249, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56553 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56553] == bool(mem[_56553])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                                    if not mem[(7 * ceil32(return_data.size)) + 456]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _41962 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42218 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42218
                                    require return_data.size >= _41962 + (32 * _42218) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42218] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41962 + 553 len 32 * _42218]
                                    if 1 >= _42218:
                                        revert with 0, 50
                                    _50666 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50666
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50666
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51946 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51946] == bool(mem[_51946])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50666, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _53994 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54250 = mem[_53994]
                                    if mem[_53994] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54250
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54250
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55530 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55530] == bool(mem[_55530])
                                    mem[mem[64] + 4] = _54250
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54250, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56554 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56554] == bool(mem[_56554])
                        else:
                            mem[(7 * ceil32(return_data.size)) + 264] = this.address
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + 260] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 264] = 32
                                mem[(8 * ceil32(return_data.size)) + 296] = 54
                                mem[(8 * ceil32(return_data.size)) + 328] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + 360] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 260
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + 328] = arg2
                            mem[(8 * ceil32(return_data.size)) + 260] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + 360] = 32
                            mem[(8 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + 424 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + 360 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41963 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42219 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41963 + (32 * _42219) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42219] = mem[(10 * ceil32(return_data.size)) + _41963 + 552 len 32 * _42219]
                                        if 1 >= _42219:
                                            revert with 0, 50
                                        _50667 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50667
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50667
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51947 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51947] == bool(mem[_51947])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50667, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _53995 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54251 = mem[_53995]
                                        if mem[_53995] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54251
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54251
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55531 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55531] == bool(mem[_55531])
                                        mem[mem[64] + 4] = _54251
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54251, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56555 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56555] == bool(mem[_56555])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41964 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42220 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41964 + (32 * _42220) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42220] = mem[(10 * ceil32(return_data.size)) + _41964 + 552 len 32 * _42220]
                                        if 1 >= _42220:
                                            revert with 0, 50
                                        _50668 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50668
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50668
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51948 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51948] == bool(mem[_51948])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50668, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _53996 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54252 = mem[_53996]
                                        if mem[_53996] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54252
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54252
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55532 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55532] == bool(mem[_55532])
                                        mem[mem[64] + 4] = _54252
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54252, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56556 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56556] == bool(mem[_56556])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41965 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42221 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42221
                                        require return_data.size >= _41965 + (32 * _42221) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42221] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41965 + 553 len 32 * _42221]
                                        if 1 >= _42221:
                                            revert with 0, 50
                                        _50669 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50669
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50669
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51949 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51949] == bool(mem[_51949])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50669, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _53997 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54253 = mem[_53997]
                                        if mem[_53997] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54253
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54253
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55533 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55533] == bool(mem[_55533])
                                        mem[mem[64] + 4] = _54253
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54253, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56557 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56557] == bool(mem[_56557])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41966 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42222 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42222
                                        require return_data.size >= _41966 + (32 * _42222) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42222] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41966 + 553 len 32 * _42222]
                                        if 1 >= _42222:
                                            revert with 0, 50
                                        _50670 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50670
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50670
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51950 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51950] == bool(mem[_51950])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50670, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _53998 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54254 = mem[_53998]
                                        if mem[_53998] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54254
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54254
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55534 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55534] == bool(mem[_55534])
                                        mem[mem[64] + 4] = _54254
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54254, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56558 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56558] == bool(mem[_56558])
                            else:
                                mem[(10 * ceil32(return_data.size)) + 492] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41967 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42223 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41967 + (32 * _42223) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42223] = mem[(10 * ceil32(return_data.size)) + _41967 + 552 len 32 * _42223]
                                        if 1 >= _42223:
                                            revert with 0, 50
                                        _50671 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50671
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50671
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51951 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51951] == bool(mem[_51951])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50671, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _53999 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54255 = mem[_53999]
                                        if mem[_53999] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54255
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54255
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55535 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55535] == bool(mem[_55535])
                                        mem[mem[64] + 4] = _54255
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54255, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56559 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56559] == bool(mem[_56559])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41968 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42224 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41968 + (32 * _42224) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42224] = mem[(10 * ceil32(return_data.size)) + _41968 + 552 len 32 * _42224]
                                        if 1 >= _42224:
                                            revert with 0, 50
                                        _50672 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50672
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50672
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51952 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51952] == bool(mem[_51952])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50672, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54000 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54256 = mem[_54000]
                                        if mem[_54000] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54256
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54256
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55536 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55536] == bool(mem[_55536])
                                        mem[mem[64] + 4] = _54256
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54256, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56560 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56560] == bool(mem[_56560])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41969 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42225 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42225
                                        require return_data.size >= _41969 + (32 * _42225) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42225] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41969 + 553 len 32 * _42225]
                                        if 1 >= _42225:
                                            revert with 0, 50
                                        _50673 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50673
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50673
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51953 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51953] == bool(mem[_51953])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50673, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54001 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54257 = mem[_54001]
                                        if mem[_54001] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54257
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54257
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55537 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55537] == bool(mem[_55537])
                                        mem[mem[64] + 4] = _54257
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54257, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56561 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56561] == bool(mem[_56561])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41970 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42226 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42226
                                        require return_data.size >= _41970 + (32 * _42226) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42226] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41970 + 553 len 32 * _42226]
                                        if 1 >= _42226:
                                            revert with 0, 50
                                        _50674 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50674
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50674
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51954 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51954] == bool(mem[_51954])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50674, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54002 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54258 = mem[_54002]
                                        if mem[_54002] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54258
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54258
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55538 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55538] == bool(mem[_55538])
                                        mem[mem[64] + 4] = _54258
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54258, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56562 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56562] == bool(mem[_56562])
                    else:
                        require ext_call.return_data[0] >= 32
                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                        if not uint32(this.address), mem[132 len 28]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 328] = arg2
                            mem[(7 * ceil32(return_data.size)) + 260] = 68
                            mem[(7 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + 360] = 32
                            mem[(7 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + 424 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + 492] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _41975 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42231 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42231
                                    require return_data.size >= _41975 + (32 * _42231) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42231] = mem[(8 * ceil32(return_data.size)) + _41975 + 552 len 32 * _42231]
                                    if 1 >= _42231:
                                        revert with 0, 50
                                    _50679 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50679
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50679
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51959 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51959] == bool(mem[_51959])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50679, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54007 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54263 = mem[_54007]
                                    if mem[_54007] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54263
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54263
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55543 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55543] == bool(mem[_55543])
                                    mem[mem[64] + 4] = _54263
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54263, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56567 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56567] == bool(mem[_56567])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _41976 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42232 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42232
                                    require return_data.size >= _41976 + (32 * _42232) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42232] = mem[(8 * ceil32(return_data.size)) + _41976 + 552 len 32 * _42232]
                                    if 1 >= _42232:
                                        revert with 0, 50
                                    _50680 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50680
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50680
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51960 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51960] == bool(mem[_51960])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50680, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54008 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54264 = mem[_54008]
                                    if mem[_54008] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54264
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54264
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55544 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55544] == bool(mem[_55544])
                                    mem[mem[64] + 4] = _54264
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54264, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56568 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56568] == bool(mem[_56568])
                            else:
                                mem[(7 * ceil32(return_data.size)) + 424] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _41977 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42233 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42233
                                    require return_data.size >= _41977 + (32 * _42233) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42233] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41977 + 553 len 32 * _42233]
                                    if 1 >= _42233:
                                        revert with 0, 50
                                    _50681 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50681
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50681
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51961 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51961] == bool(mem[_51961])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50681, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54009 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54265 = mem[_54009]
                                    if mem[_54009] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54265
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54265
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55545 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55545] == bool(mem[_55545])
                                    mem[mem[64] + 4] = _54265
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54265, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56569 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56569] == bool(mem[_56569])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                                    if not mem[(7 * ceil32(return_data.size)) + 456]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _41978 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42234 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42234
                                    require return_data.size >= _41978 + (32 * _42234) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42234] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41978 + 553 len 32 * _42234]
                                    if 1 >= _42234:
                                        revert with 0, 50
                                    _50682 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50682
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50682
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51962 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51962] == bool(mem[_51962])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50682, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54010 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54266 = mem[_54010]
                                    if mem[_54010] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54266
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54266
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55546 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55546] == bool(mem[_55546])
                                    mem[mem[64] + 4] = _54266
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54266, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56570 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56570] == bool(mem[_56570])
                        else:
                            mem[(7 * ceil32(return_data.size)) + 264] = this.address
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + 260] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 264] = 32
                                mem[(8 * ceil32(return_data.size)) + 296] = 54
                                mem[(8 * ceil32(return_data.size)) + 328] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + 360] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 260
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + 328] = arg2
                            mem[(8 * ceil32(return_data.size)) + 260] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + 360] = 32
                            mem[(8 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + 424 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + 360 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41979 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42235 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41979 + (32 * _42235) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42235] = mem[(10 * ceil32(return_data.size)) + _41979 + 552 len 32 * _42235]
                                        if 1 >= _42235:
                                            revert with 0, 50
                                        _50683 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50683
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50683
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51963 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51963] == bool(mem[_51963])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50683, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54011 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54267 = mem[_54011]
                                        if mem[_54011] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54267
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54267
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55547 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55547] == bool(mem[_55547])
                                        mem[mem[64] + 4] = _54267
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54267, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56571 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56571] == bool(mem[_56571])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41980 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42236 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41980 + (32 * _42236) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42236] = mem[(10 * ceil32(return_data.size)) + _41980 + 552 len 32 * _42236]
                                        if 1 >= _42236:
                                            revert with 0, 50
                                        _50684 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50684
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50684
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51964 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51964] == bool(mem[_51964])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50684, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54012 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54268 = mem[_54012]
                                        if mem[_54012] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54268
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54268
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55548 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55548] == bool(mem[_55548])
                                        mem[mem[64] + 4] = _54268
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54268, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56572 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56572] == bool(mem[_56572])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41981 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42237 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42237
                                        require return_data.size >= _41981 + (32 * _42237) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42237] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41981 + 553 len 32 * _42237]
                                        if 1 >= _42237:
                                            revert with 0, 50
                                        _50685 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50685
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50685
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51965 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51965] == bool(mem[_51965])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50685, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54013 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54269 = mem[_54013]
                                        if mem[_54013] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54269
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54269
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55549 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55549] == bool(mem[_55549])
                                        mem[mem[64] + 4] = _54269
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54269, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56573 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56573] == bool(mem[_56573])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41982 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42238 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42238
                                        require return_data.size >= _41982 + (32 * _42238) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42238] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41982 + 553 len 32 * _42238]
                                        if 1 >= _42238:
                                            revert with 0, 50
                                        _50686 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50686
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50686
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51966 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51966] == bool(mem[_51966])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50686, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54014 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54270 = mem[_54014]
                                        if mem[_54014] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54270
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54270
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55550 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55550] == bool(mem[_55550])
                                        mem[mem[64] + 4] = _54270
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54270, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56574 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56574] == bool(mem[_56574])
                            else:
                                mem[(10 * ceil32(return_data.size)) + 492] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41983 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42239 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41983 + (32 * _42239) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42239] = mem[(10 * ceil32(return_data.size)) + _41983 + 552 len 32 * _42239]
                                        if 1 >= _42239:
                                            revert with 0, 50
                                        _50687 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50687
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50687
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51967 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51967] == bool(mem[_51967])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50687, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54015 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54271 = mem[_54015]
                                        if mem[_54015] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54271
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54271
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55551 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55551] == bool(mem[_55551])
                                        mem[mem[64] + 4] = _54271
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54271, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56575 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56575] == bool(mem[_56575])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _41984 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42240 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _41984 + (32 * _42240) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42240] = mem[(10 * ceil32(return_data.size)) + _41984 + 552 len 32 * _42240]
                                        if 1 >= _42240:
                                            revert with 0, 50
                                        _50688 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50688
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50688
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51968 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51968] == bool(mem[_51968])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50688, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54016 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54272 = mem[_54016]
                                        if mem[_54016] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54272
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54272
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55552 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55552] == bool(mem[_55552])
                                        mem[mem[64] + 4] = _54272
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54272, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56576 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56576] == bool(mem[_56576])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41985 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42241 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42241
                                        require return_data.size >= _41985 + (32 * _42241) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42241] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41985 + 553 len 32 * _42241]
                                        if 1 >= _42241:
                                            revert with 0, 50
                                        _50689 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50689
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50689
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51969 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51969] == bool(mem[_51969])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50689, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54017 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54273 = mem[_54017]
                                        if mem[_54017] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54273
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54273
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55553 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55553] == bool(mem[_55553])
                                        mem[mem[64] + 4] = _54273
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54273, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56577 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56577] == bool(mem[_56577])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41986 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42242 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42242
                                        require return_data.size >= _41986 + (32 * _42242) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42242] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41986 + 553 len 32 * _42242]
                                        if 1 >= _42242:
                                            revert with 0, 50
                                        _50690 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50690
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50690
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51970 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51970] == bool(mem[_51970])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50690, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54018 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54274 = mem[_54018]
                                        if mem[_54018] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54274
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54274
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55554 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55554] == bool(mem[_55554])
                                        mem[mem[64] + 4] = _54274
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54274, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56578 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56578] == bool(mem[_56578])
                else:
                    mem[(7 * ceil32(return_data.size)) + 260] = return_data.size
                    mem[(7 * ceil32(return_data.size)) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if not return_data.size:
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _41991 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42247 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42247
                                    require return_data.size >= _41991 + (32 * _42247) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42247] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41991 + 553 len 32 * _42247]
                                    if 1 >= _42247:
                                        revert with 0, 50
                                    _50695 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50695
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50695
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51975 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51975] == bool(mem[_51975])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50695, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54023 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54279 = mem[_54023]
                                    if mem[_54023] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54279
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54279
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55559 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55559] == bool(mem[_55559])
                                    mem[mem[64] + 4] = _54279
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54279, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56583 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56583] == bool(mem[_56583])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _41992 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42248 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42248
                                    require return_data.size >= _41992 + (32 * _42248) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42248] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _41992 + 553 len 32 * _42248]
                                    if 1 >= _42248:
                                        revert with 0, 50
                                    _50696 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50696
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50696
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51976 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51976] == bool(mem[_51976])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50696, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54024 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54280 = mem[_54024]
                                    if mem[_54024] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54280
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54280
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55560 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55560] == bool(mem[_55560])
                                    mem[mem[64] + 4] = _54280
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54280, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56584 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56584] == bool(mem[_56584])
                            else:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _41993 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42249 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _41993 + (32 * _42249) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42249] = mem[(11 * ceil32(return_data.size)) + _41993 + 554 len 32 * _42249]
                                    if 1 >= _42249:
                                        revert with 0, 50
                                    _50697 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50697
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50697
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51977 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51977] == bool(mem[_51977])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50697, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54025 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54281 = mem[_54025]
                                    if mem[_54025] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54281
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54281
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55561 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55561] == bool(mem[_55561])
                                    mem[mem[64] + 4] = _54281
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54281, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56585 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56585] == bool(mem[_56585])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                    if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _41994 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42250 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _41994 + (32 * _42250) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42250] = mem[(11 * ceil32(return_data.size)) + _41994 + 554 len 32 * _42250]
                                    if 1 >= _42250:
                                        revert with 0, 50
                                    _50698 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50698
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50698
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51978 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51978] == bool(mem[_51978])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50698, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54026 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54282 = mem[_54026]
                                    if mem[_54026] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54282
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54282
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55562 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55562] == bool(mem[_55562])
                                    mem[mem[64] + 4] = _54282
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54282, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56586 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56586] == bool(mem[_56586])
                        else:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 54
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41995 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42251 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42251
                                        require return_data.size >= _41995 + (32 * _42251) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42251] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41995 + 553 len 32 * _42251]
                                        if 1 >= _42251:
                                            revert with 0, 50
                                        _50699 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50699
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50699
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51979 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51979] == bool(mem[_51979])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50699, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54027 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54283 = mem[_54027]
                                        if mem[_54027] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54283
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54283
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55563 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55563] == bool(mem[_55563])
                                        mem[mem[64] + 4] = _54283
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54283, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56587] == bool(mem[_56587])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41996 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42252 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42252
                                        require return_data.size >= _41996 + (32 * _42252) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42252] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41996 + 553 len 32 * _42252]
                                        if 1 >= _42252:
                                            revert with 0, 50
                                        _50700 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50700
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50700
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51980 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51980] == bool(mem[_51980])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50700, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54028 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54284 = mem[_54028]
                                        if mem[_54028] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54284
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54284
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55564 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55564] == bool(mem[_55564])
                                        mem[mem[64] + 4] = _54284
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54284, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56588 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56588] == bool(mem[_56588])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _41997 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42253 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42253
                                        require return_data.size >= _41997 + (32 * _42253) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42253] = mem[(13 * ceil32(return_data.size)) + _41997 + 554 len 32 * _42253]
                                        if 1 >= _42253:
                                            revert with 0, 50
                                        _50701 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50701
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50701
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51981 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51981] == bool(mem[_51981])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50701, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54029 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54285 = mem[_54029]
                                        if mem[_54029] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54285
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54285
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55565 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55565] == bool(mem[_55565])
                                        mem[mem[64] + 4] = _54285
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54285, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56589 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56589] == bool(mem[_56589])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _41998 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42254 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42254
                                        require return_data.size >= _41998 + (32 * _42254) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42254] = mem[(13 * ceil32(return_data.size)) + _41998 + 554 len 32 * _42254]
                                        if 1 >= _42254:
                                            revert with 0, 50
                                        _50702 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50702
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50702
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51982 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51982] == bool(mem[_51982])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50702, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54030 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54286 = mem[_54030]
                                        if mem[_54030] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54286
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54286
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55566 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55566] == bool(mem[_55566])
                                        mem[mem[64] + 4] = _54286
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54286, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56590 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56590] == bool(mem[_56590])
                            else:
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _41999 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42255 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42255
                                        require return_data.size >= _41999 + (32 * _42255) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42255] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _41999 + 553 len 32 * _42255]
                                        if 1 >= _42255:
                                            revert with 0, 50
                                        _50703 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50703
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50703
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51983 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51983] == bool(mem[_51983])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50703, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54031 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54287 = mem[_54031]
                                        if mem[_54031] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54287
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54287
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55567 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55567] == bool(mem[_55567])
                                        mem[mem[64] + 4] = _54287
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54287, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56591 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56591] == bool(mem[_56591])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42000 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42256 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42256
                                        require return_data.size >= _42000 + (32 * _42256) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42256] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42000 + 553 len 32 * _42256]
                                        if 1 >= _42256:
                                            revert with 0, 50
                                        _50704 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50704
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50704
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51984 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51984] == bool(mem[_51984])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50704, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54032 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54288 = mem[_54032]
                                        if mem[_54032] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54288
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54288
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55568 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55568] == bool(mem[_55568])
                                        mem[mem[64] + 4] = _54288
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54288, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56592 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56592] == bool(mem[_56592])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42001 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42257 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42257
                                        require return_data.size >= _42001 + (32 * _42257) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42257] = mem[(13 * ceil32(return_data.size)) + _42001 + 554 len 32 * _42257]
                                        if 1 >= _42257:
                                            revert with 0, 50
                                        _50705 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50705
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50705
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51985 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51985] == bool(mem[_51985])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50705, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54033 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54289 = mem[_54033]
                                        if mem[_54033] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54289
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54289
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55569 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55569] == bool(mem[_55569])
                                        mem[mem[64] + 4] = _54289
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54289, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56593 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56593] == bool(mem[_56593])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42002 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42258 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42258
                                        require return_data.size >= _42002 + (32 * _42258) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42258] = mem[(13 * ceil32(return_data.size)) + _42002 + 554 len 32 * _42258]
                                        if 1 >= _42258:
                                            revert with 0, 50
                                        _50706 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50706
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50706
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51986 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51986] == bool(mem[_51986])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50706, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54034 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54290 = mem[_54034]
                                        if mem[_54034] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54290
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54290
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55570 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55570] == bool(mem[_55570])
                                        mem[mem[64] + 4] = _54290
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54290, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56594 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56594] == bool(mem[_56594])
                    else:
                        require return_data.size >= 32
                        require mem[(7 * ceil32(return_data.size)) + 292] == bool(mem[(7 * ceil32(return_data.size)) + 292])
                        if not mem[(7 * ceil32(return_data.size)) + 292]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42007 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42263 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42263
                                    require return_data.size >= _42007 + (32 * _42263) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42263] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42007 + 553 len 32 * _42263]
                                    if 1 >= _42263:
                                        revert with 0, 50
                                    _50711 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50711
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50711
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51991 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51991] == bool(mem[_51991])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50711, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54039 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54295 = mem[_54039]
                                    if mem[_54039] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54295
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54295
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55575 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55575] == bool(mem[_55575])
                                    mem[mem[64] + 4] = _54295
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54295, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56599 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56599] == bool(mem[_56599])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42008 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42264 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42264
                                    require return_data.size >= _42008 + (32 * _42264) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42264] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42008 + 553 len 32 * _42264]
                                    if 1 >= _42264:
                                        revert with 0, 50
                                    _50712 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50712
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50712
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51992 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51992] == bool(mem[_51992])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50712, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54040 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54296 = mem[_54040]
                                    if mem[_54040] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54296
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54296
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55576 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55576] == bool(mem[_55576])
                                    mem[mem[64] + 4] = _54296
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54296, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56600 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56600] == bool(mem[_56600])
                            else:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _42009 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42265 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _42009 + (32 * _42265) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42265] = mem[(11 * ceil32(return_data.size)) + _42009 + 554 len 32 * _42265]
                                    if 1 >= _42265:
                                        revert with 0, 50
                                    _50713 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50713
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50713
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51993 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51993] == bool(mem[_51993])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50713, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54041 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54297 = mem[_54041]
                                    if mem[_54041] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54297
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54297
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55577 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55577] == bool(mem[_55577])
                                    mem[mem[64] + 4] = _54297
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54297, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56601 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56601] == bool(mem[_56601])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                    if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _42010 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42266 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _42010 + (32 * _42266) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42266] = mem[(11 * ceil32(return_data.size)) + _42010 + 554 len 32 * _42266]
                                    if 1 >= _42266:
                                        revert with 0, 50
                                    _50714 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50714
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50714
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _51994 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_51994] == bool(mem[_51994])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50714, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54042 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54298 = mem[_54042]
                                    if mem[_54042] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54298
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54298
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55578 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55578] == bool(mem[_55578])
                                    mem[mem[64] + 4] = _54298
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54298, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56602 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56602] == bool(mem[_56602])
                        else:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 54
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42011 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42267 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42267
                                        require return_data.size >= _42011 + (32 * _42267) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42267] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42011 + 553 len 32 * _42267]
                                        if 1 >= _42267:
                                            revert with 0, 50
                                        _50715 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50715
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50715
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51995 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51995] == bool(mem[_51995])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50715, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54043 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54299 = mem[_54043]
                                        if mem[_54043] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54299
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54299
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55579 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55579] == bool(mem[_55579])
                                        mem[mem[64] + 4] = _54299
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54299, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56603 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56603] == bool(mem[_56603])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42012 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42268 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42268
                                        require return_data.size >= _42012 + (32 * _42268) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42268] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42012 + 553 len 32 * _42268]
                                        if 1 >= _42268:
                                            revert with 0, 50
                                        _50716 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50716
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50716
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51996 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51996] == bool(mem[_51996])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50716, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54044 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54300 = mem[_54044]
                                        if mem[_54044] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54300
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54300
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55580 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55580] == bool(mem[_55580])
                                        mem[mem[64] + 4] = _54300
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54300, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56604 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56604] == bool(mem[_56604])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42013 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42269 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42269
                                        require return_data.size >= _42013 + (32 * _42269) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42269] = mem[(13 * ceil32(return_data.size)) + _42013 + 554 len 32 * _42269]
                                        if 1 >= _42269:
                                            revert with 0, 50
                                        _50717 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50717
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50717
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51997 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51997] == bool(mem[_51997])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50717, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54045 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54301 = mem[_54045]
                                        if mem[_54045] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54301
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54301
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55581 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55581] == bool(mem[_55581])
                                        mem[mem[64] + 4] = _54301
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54301, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56605 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56605] == bool(mem[_56605])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42014 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42270 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42270
                                        require return_data.size >= _42014 + (32 * _42270) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42270] = mem[(13 * ceil32(return_data.size)) + _42014 + 554 len 32 * _42270]
                                        if 1 >= _42270:
                                            revert with 0, 50
                                        _50718 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50718
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50718
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51998 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51998] == bool(mem[_51998])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50718, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54046 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54302 = mem[_54046]
                                        if mem[_54046] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54302
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54302
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55582 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55582] == bool(mem[_55582])
                                        mem[mem[64] + 4] = _54302
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54302, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56606 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56606] == bool(mem[_56606])
                            else:
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42015 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42271 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42271
                                        require return_data.size >= _42015 + (32 * _42271) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42271] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42015 + 553 len 32 * _42271]
                                        if 1 >= _42271:
                                            revert with 0, 50
                                        _50719 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50719
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50719
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _51999 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_51999] == bool(mem[_51999])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50719, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54047 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54303 = mem[_54047]
                                        if mem[_54047] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54303
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54303
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55583 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55583] == bool(mem[_55583])
                                        mem[mem[64] + 4] = _54303
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54303, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56607 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56607] == bool(mem[_56607])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42016 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42272 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42272
                                        require return_data.size >= _42016 + (32 * _42272) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42272] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42016 + 553 len 32 * _42272]
                                        if 1 >= _42272:
                                            revert with 0, 50
                                        _50720 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50720
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50720
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52000 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52000] == bool(mem[_52000])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50720, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54048 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54304 = mem[_54048]
                                        if mem[_54048] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54304
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54304
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55584 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55584] == bool(mem[_55584])
                                        mem[mem[64] + 4] = _54304
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54304, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56608 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56608] == bool(mem[_56608])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42017 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42273 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42273
                                        require return_data.size >= _42017 + (32 * _42273) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42273] = mem[(13 * ceil32(return_data.size)) + _42017 + 554 len 32 * _42273]
                                        if 1 >= _42273:
                                            revert with 0, 50
                                        _50721 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50721
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50721
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52001 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52001] == bool(mem[_52001])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50721, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54049 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54305 = mem[_54049]
                                        if mem[_54049] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54305
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54305
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55585 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55585] == bool(mem[_55585])
                                        mem[mem[64] + 4] = _54305
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54305, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56609 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56609] == bool(mem[_56609])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42018 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42274 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42274
                                        require return_data.size >= _42018 + (32 * _42274) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42274] = mem[(13 * ceil32(return_data.size)) + _42018 + 554 len 32 * _42274]
                                        if 1 >= _42274:
                                            revert with 0, 50
                                        _50722 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50722
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50722
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52002 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52002] == bool(mem[_52002])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50722, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54050 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54306 = mem[_54050]
                                        if mem[_54050] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54306
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54306
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55586 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55586] == bool(mem[_55586])
                                        mem[mem[64] + 4] = _54306
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54306, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56610 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56610] == bool(mem[_56610])
            else:
                mem[(7 * ceil32(return_data.size)) + 328] = 0
                call address(arg3).mem[(7 * ceil32(return_data.size)) + 260 len 4] with:
                     gas gas_remaining wei
                    args mem[(7 * ceil32(return_data.size)) + 264 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        if ext_call.return_data[0]:
                            revert with memory
                              from 128
                               len ext_call.return_data[0]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if not ext_call.return_data[0]:
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 328] = arg2
                            mem[(7 * ceil32(return_data.size)) + 260] = 68
                            mem[(7 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + 360] = 32
                            mem[(7 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + 424 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + 492] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _42023 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42279 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42279
                                    require return_data.size >= _42023 + (32 * _42279) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42279] = mem[(8 * ceil32(return_data.size)) + _42023 + 552 len 32 * _42279]
                                    if 1 >= _42279:
                                        revert with 0, 50
                                    _50727 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50727
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50727
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52007 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52007] == bool(mem[_52007])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50727, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54055 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54311 = mem[_54055]
                                    if mem[_54055] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54311
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54311
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55591 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55591] == bool(mem[_55591])
                                    mem[mem[64] + 4] = _54311
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54311, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56615 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56615] == bool(mem[_56615])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _42024 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42280 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42280
                                    require return_data.size >= _42024 + (32 * _42280) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42280] = mem[(8 * ceil32(return_data.size)) + _42024 + 552 len 32 * _42280]
                                    if 1 >= _42280:
                                        revert with 0, 50
                                    _50728 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50728
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50728
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52008 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52008] == bool(mem[_52008])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50728, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54056 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54312 = mem[_54056]
                                    if mem[_54056] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54312
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54312
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55592 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55592] == bool(mem[_55592])
                                    mem[mem[64] + 4] = _54312
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54312, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56616 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56616] == bool(mem[_56616])
                            else:
                                mem[(7 * ceil32(return_data.size)) + 424] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42025 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42281 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42281
                                    require return_data.size >= _42025 + (32 * _42281) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42281] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42025 + 553 len 32 * _42281]
                                    if 1 >= _42281:
                                        revert with 0, 50
                                    _50729 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50729
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50729
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52009 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52009] == bool(mem[_52009])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50729, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54057 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54313 = mem[_54057]
                                    if mem[_54057] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54313
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54313
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55593 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55593] == bool(mem[_55593])
                                    mem[mem[64] + 4] = _54313
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54313, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56617 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56617] == bool(mem[_56617])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                                    if not mem[(7 * ceil32(return_data.size)) + 456]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42026 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42282 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42282
                                    require return_data.size >= _42026 + (32 * _42282) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42282] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42026 + 553 len 32 * _42282]
                                    if 1 >= _42282:
                                        revert with 0, 50
                                    _50730 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50730
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50730
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52010 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52010] == bool(mem[_52010])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50730, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54058 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54314 = mem[_54058]
                                    if mem[_54058] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54314
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54314
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55594 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55594] == bool(mem[_55594])
                                    mem[mem[64] + 4] = _54314
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54314, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56618 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56618] == bool(mem[_56618])
                        else:
                            mem[(7 * ceil32(return_data.size)) + 264] = this.address
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + 260] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 264] = 32
                                mem[(8 * ceil32(return_data.size)) + 296] = 54
                                mem[(8 * ceil32(return_data.size)) + 328] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + 360] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 260
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + 328] = arg2
                            mem[(8 * ceil32(return_data.size)) + 260] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + 360] = 32
                            mem[(8 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + 424 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + 360 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42027 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42283 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42027 + (32 * _42283) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42283] = mem[(10 * ceil32(return_data.size)) + _42027 + 552 len 32 * _42283]
                                        if 1 >= _42283:
                                            revert with 0, 50
                                        _50731 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50731
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50731
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52011 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52011] == bool(mem[_52011])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50731, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54059 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54315 = mem[_54059]
                                        if mem[_54059] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54315
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54315
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55595 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55595] == bool(mem[_55595])
                                        mem[mem[64] + 4] = _54315
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54315, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56619 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56619] == bool(mem[_56619])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42028 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42284 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42028 + (32 * _42284) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42284] = mem[(10 * ceil32(return_data.size)) + _42028 + 552 len 32 * _42284]
                                        if 1 >= _42284:
                                            revert with 0, 50
                                        _50732 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50732
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50732
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52012 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52012] == bool(mem[_52012])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50732, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54060 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54316 = mem[_54060]
                                        if mem[_54060] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54316
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54316
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55596 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55596] == bool(mem[_55596])
                                        mem[mem[64] + 4] = _54316
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54316, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56620 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56620] == bool(mem[_56620])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42029 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42285 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42285
                                        require return_data.size >= _42029 + (32 * _42285) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42285] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42029 + 553 len 32 * _42285]
                                        if 1 >= _42285:
                                            revert with 0, 50
                                        _50733 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50733
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50733
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52013 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52013] == bool(mem[_52013])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50733, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54061 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54317 = mem[_54061]
                                        if mem[_54061] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54317
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54317
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55597 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55597] == bool(mem[_55597])
                                        mem[mem[64] + 4] = _54317
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54317, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56621 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56621] == bool(mem[_56621])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42030 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42286 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42286
                                        require return_data.size >= _42030 + (32 * _42286) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42286] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42030 + 553 len 32 * _42286]
                                        if 1 >= _42286:
                                            revert with 0, 50
                                        _50734 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50734
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50734
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52014 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52014] == bool(mem[_52014])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50734, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54062 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54318 = mem[_54062]
                                        if mem[_54062] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54318
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54318
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55598 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55598] == bool(mem[_55598])
                                        mem[mem[64] + 4] = _54318
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54318, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56622 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56622] == bool(mem[_56622])
                            else:
                                mem[(10 * ceil32(return_data.size)) + 492] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42031 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42287 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42031 + (32 * _42287) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42287] = mem[(10 * ceil32(return_data.size)) + _42031 + 552 len 32 * _42287]
                                        if 1 >= _42287:
                                            revert with 0, 50
                                        _50735 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50735
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50735
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52015 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52015] == bool(mem[_52015])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50735, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54063 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54319 = mem[_54063]
                                        if mem[_54063] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54319
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54319
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55599 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55599] == bool(mem[_55599])
                                        mem[mem[64] + 4] = _54319
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54319, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56623 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56623] == bool(mem[_56623])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42032 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42288 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42032 + (32 * _42288) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42288] = mem[(10 * ceil32(return_data.size)) + _42032 + 552 len 32 * _42288]
                                        if 1 >= _42288:
                                            revert with 0, 50
                                        _50736 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50736
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50736
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52016 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52016] == bool(mem[_52016])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50736, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54064 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54320 = mem[_54064]
                                        if mem[_54064] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54320
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54320
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55600 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55600] == bool(mem[_55600])
                                        mem[mem[64] + 4] = _54320
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54320, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56624 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56624] == bool(mem[_56624])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42033 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42289 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42289
                                        require return_data.size >= _42033 + (32 * _42289) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42289] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42033 + 553 len 32 * _42289]
                                        if 1 >= _42289:
                                            revert with 0, 50
                                        _50737 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50737
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50737
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52017 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52017] == bool(mem[_52017])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50737, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54065 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54321 = mem[_54065]
                                        if mem[_54065] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54321
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54321
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55601 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55601] == bool(mem[_55601])
                                        mem[mem[64] + 4] = _54321
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54321, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56625 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56625] == bool(mem[_56625])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42034 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42290 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42290
                                        require return_data.size >= _42034 + (32 * _42290) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42290] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42034 + 553 len 32 * _42290]
                                        if 1 >= _42290:
                                            revert with 0, 50
                                        _50738 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50738
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50738
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52018 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52018] == bool(mem[_52018])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50738, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54066 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54322 = mem[_54066]
                                        if mem[_54066] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54322
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54322
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55602 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55602] == bool(mem[_55602])
                                        mem[mem[64] + 4] = _54322
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54322, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56626 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56626] == bool(mem[_56626])
                    else:
                        require ext_call.return_data[0] >= 32
                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                        if not uint32(this.address), mem[132 len 28]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 328] = arg2
                            mem[(7 * ceil32(return_data.size)) + 260] = 68
                            mem[(7 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + 360] = 32
                            mem[(7 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + 424 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + 492] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _42039 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42295 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42295
                                    require return_data.size >= _42039 + (32 * _42295) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42295] = mem[(8 * ceil32(return_data.size)) + _42039 + 552 len 32 * _42295]
                                    if 1 >= _42295:
                                        revert with 0, 50
                                    _50743 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50743
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50743
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52023 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52023] == bool(mem[_52023])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50743, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54071 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54327 = mem[_54071]
                                    if mem[_54071] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54327
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54327
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55607 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55607] == bool(mem[_55607])
                                    mem[mem[64] + 4] = _54327
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54327, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56631 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56631] == bool(mem[_56631])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + 428] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + 460] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + 424] = 2
                                    mem[(8 * ceil32(return_data.size)) + 456] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + 488] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + 524] = arg2
                                    mem[(8 * ceil32(return_data.size)) + 556] = 1
                                    mem[(8 * ceil32(return_data.size)) + 588] = 160
                                    mem[(8 * ceil32(return_data.size)) + 684] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + 716
                                    t = (8 * ceil32(return_data.size)) + 456
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + 620] = this.address
                                    mem[(8 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + 716 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + 520
                                    require return_data.size >= 32
                                    _42040 = mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (8 * ceil32(return_data.size)) + return_data.size + 520
                                    _42296 = mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                    if mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + mem[(8 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                    mem[(10 * ceil32(return_data.size)) + 520] = _42296
                                    require return_data.size >= _42040 + (32 * _42296) + 32
                                    mem[(10 * ceil32(return_data.size)) + 552 len 32 * _42296] = mem[(8 * ceil32(return_data.size)) + _42040 + 552 len 32 * _42296]
                                    if 1 >= _42296:
                                        revert with 0, 50
                                    _50744 = mem[(10 * ceil32(return_data.size)) + 584]
                                    if mem[(10 * ceil32(return_data.size)) + 584] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50744
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50744
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52024 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52024] == bool(mem[_52024])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50744, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54072 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54328 = mem[_54072]
                                    if mem[_54072] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54328
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54328
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55608 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55608] == bool(mem[_55608])
                                    mem[mem[64] + 4] = _54328
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54328, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56632 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56632] == bool(mem[_56632])
                            else:
                                mem[(7 * ceil32(return_data.size)) + 424] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42041 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42297 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42297
                                    require return_data.size >= _42041 + (32 * _42297) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42297] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42041 + 553 len 32 * _42297]
                                    if 1 >= _42297:
                                        revert with 0, 50
                                    _50745 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50745
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50745
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52025 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52025] == bool(mem[_52025])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50745, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54073 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54329 = mem[_54073]
                                    if mem[_54073] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54329
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54329
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55609 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55609] == bool(mem[_55609])
                                    mem[mem[64] + 4] = _54329
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54329, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56633] == bool(mem[_56633])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                                    if not mem[(7 * ceil32(return_data.size)) + 456]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42042 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42298 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42298
                                    require return_data.size >= _42042 + (32 * _42298) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42298] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42042 + 553 len 32 * _42298]
                                    if 1 >= _42298:
                                        revert with 0, 50
                                    _50746 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50746
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50746
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52026 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52026] == bool(mem[_52026])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50746, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54074 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54330 = mem[_54074]
                                    if mem[_54074] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54330
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54330
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55610 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55610] == bool(mem[_55610])
                                    mem[mem[64] + 4] = _54330
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54330, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56634 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56634] == bool(mem[_56634])
                        else:
                            mem[(7 * ceil32(return_data.size)) + 264] = this.address
                            mem[(7 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + 260] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + 264] = 32
                                mem[(8 * ceil32(return_data.size)) + 296] = 54
                                mem[(8 * ceil32(return_data.size)) + 328] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + 360] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + 260
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + 296] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + 328] = arg2
                            mem[(8 * ceil32(return_data.size)) + 260] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + 296 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + 292 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + 360] = 32
                            mem[(8 * ceil32(return_data.size)) + 392] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + 424 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + 360 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42043 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42299 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42043 + (32 * _42299) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42299] = mem[(10 * ceil32(return_data.size)) + _42043 + 552 len 32 * _42299]
                                        if 1 >= _42299:
                                            revert with 0, 50
                                        _50747 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50747
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50747
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52027 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52027] == bool(mem[_52027])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50747, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54075 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54331 = mem[_54075]
                                        if mem[_54075] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54331
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54331
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55611 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55611] == bool(mem[_55611])
                                        mem[mem[64] + 4] = _54331
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54331, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56635 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56635] == bool(mem[_56635])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42044 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42300 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42044 + (32 * _42300) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42300] = mem[(10 * ceil32(return_data.size)) + _42044 + 552 len 32 * _42300]
                                        if 1 >= _42300:
                                            revert with 0, 50
                                        _50748 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50748
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50748
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52028 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52028] == bool(mem[_52028])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50748, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54076 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54332 = mem[_54076]
                                        if mem[_54076] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54332
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54332
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55612 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55612] == bool(mem[_55612])
                                        mem[mem[64] + 4] = _54332
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54332, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56636 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56636] == bool(mem[_56636])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42045 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42301 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42301
                                        require return_data.size >= _42045 + (32 * _42301) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42301] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42045 + 553 len 32 * _42301]
                                        if 1 >= _42301:
                                            revert with 0, 50
                                        _50749 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50749
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50749
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52029 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52029] == bool(mem[_52029])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50749, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54077 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54333 = mem[_54077]
                                        if mem[_54077] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54333
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54333
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55613 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55613] == bool(mem[_55613])
                                        mem[mem[64] + 4] = _54333
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54333, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56637 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56637] == bool(mem[_56637])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42046 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42302 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42302
                                        require return_data.size >= _42046 + (32 * _42302) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42302] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42046 + 553 len 32 * _42302]
                                        if 1 >= _42302:
                                            revert with 0, 50
                                        _50750 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50750
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50750
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52030 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52030] == bool(mem[_52030])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50750, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54078 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54334 = mem[_54078]
                                        if mem[_54078] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54334
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54334
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55614 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55614] == bool(mem[_55614])
                                        mem[mem[64] + 4] = _54334
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54334, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56638 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56638] == bool(mem[_56638])
                            else:
                                mem[(10 * ceil32(return_data.size)) + 492] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + 424 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + 428 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42047 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42303 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42047 + (32 * _42303) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42303] = mem[(10 * ceil32(return_data.size)) + _42047 + 552 len 32 * _42303]
                                        if 1 >= _42303:
                                            revert with 0, 50
                                        _50751 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50751
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50751
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52031 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52031] == bool(mem[_52031])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50751, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54079 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54335 = mem[_54079]
                                        if mem[_54079] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54335
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54335
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55615 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55615] == bool(mem[_55615])
                                        mem[mem[64] + 4] = _54335
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54335, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56639 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56639] == bool(mem[_56639])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + 428] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + 460] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + 424] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + 424] = 2
                                        mem[(10 * ceil32(return_data.size)) + 456] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + 488] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + 520] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + 524] = arg2
                                        mem[(10 * ceil32(return_data.size)) + 556] = 1
                                        mem[(10 * ceil32(return_data.size)) + 588] = 160
                                        mem[(10 * ceil32(return_data.size)) + 684] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + 716
                                        t = (10 * ceil32(return_data.size)) + 456
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + 620] = this.address
                                        mem[(10 * ceil32(return_data.size)) + 652] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + 716 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + 520 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + 520
                                        require return_data.size >= 32
                                        _42048 = mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 551 < (10 * ceil32(return_data.size)) + return_data.size + 520
                                        _42304 = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        if mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]) + 521
                                        mem[(11 * ceil32(return_data.size)) + 520] = mem[(10 * ceil32(return_data.size)) + mem[(10 * ceil32(return_data.size)) + 520 len 4], Mask(224, 32, arg2) >> 32 + 520]
                                        require return_data.size >= _42048 + (32 * _42304) + 32
                                        mem[(11 * ceil32(return_data.size)) + 552 len 32 * _42304] = mem[(10 * ceil32(return_data.size)) + _42048 + 552 len 32 * _42304]
                                        if 1 >= _42304:
                                            revert with 0, 50
                                        _50752 = mem[(11 * ceil32(return_data.size)) + 584]
                                        if mem[(11 * ceil32(return_data.size)) + 584] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50752
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50752
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52032 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52032] == bool(mem[_52032])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50752, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54080 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54336 = mem[_54080]
                                        if mem[_54080] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54336
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54336
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55616 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55616] == bool(mem[_55616])
                                        mem[mem[64] + 4] = _54336
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54336, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56640 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56640] == bool(mem[_56640])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + 424] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42049 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42305 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42305
                                        require return_data.size >= _42049 + (32 * _42305) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42305] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42049 + 553 len 32 * _42305]
                                        if 1 >= _42305:
                                            revert with 0, 50
                                        _50753 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50753
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50753
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52033 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52033] == bool(mem[_52033])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50753, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54081 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54337 = mem[_54081]
                                        if mem[_54081] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54337
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54337
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55617 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55617] == bool(mem[_55617])
                                        mem[mem[64] + 4] = _54337
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54337, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56641 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56641] == bool(mem[_56641])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + 456] == bool(mem[(8 * ceil32(return_data.size)) + 456])
                                        if not mem[(8 * ceil32(return_data.size)) + 456]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42050 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42306 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42306
                                        require return_data.size >= _42050 + (32 * _42306) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42306] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42050 + 553 len 32 * _42306]
                                        if 1 >= _42306:
                                            revert with 0, 50
                                        _50754 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50754
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50754
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52034 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52034] == bool(mem[_52034])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50754, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54082 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54338 = mem[_54082]
                                        if mem[_54082] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54338
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54338
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55618 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55618] == bool(mem[_55618])
                                        mem[mem[64] + 4] = _54338
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54338, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56642 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56642] == bool(mem[_56642])
                else:
                    mem[(7 * ceil32(return_data.size)) + 260] = return_data.size
                    mem[(7 * ceil32(return_data.size)) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if not return_data.size:
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42055 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42311 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42311
                                    require return_data.size >= _42055 + (32 * _42311) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42311] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42055 + 553 len 32 * _42311]
                                    if 1 >= _42311:
                                        revert with 0, 50
                                    _50759 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50759
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50759
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52039 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52039] == bool(mem[_52039])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50759, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54087 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54343 = mem[_54087]
                                    if mem[_54087] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54343
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54343
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55623 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55623] == bool(mem[_55623])
                                    mem[mem[64] + 4] = _54343
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54343, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56647 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56647] == bool(mem[_56647])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42056 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42312 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42312
                                    require return_data.size >= _42056 + (32 * _42312) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42312] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42056 + 553 len 32 * _42312]
                                    if 1 >= _42312:
                                        revert with 0, 50
                                    _50760 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50760
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50760
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52040 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52040] == bool(mem[_52040])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50760, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54088 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54344 = mem[_54088]
                                    if mem[_54088] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54344
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54344
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55624 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55624] == bool(mem[_55624])
                                    mem[mem[64] + 4] = _54344
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54344, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56648 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56648] == bool(mem[_56648])
                            else:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _42057 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42313 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _42057 + (32 * _42313) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42313] = mem[(11 * ceil32(return_data.size)) + _42057 + 554 len 32 * _42313]
                                    if 1 >= _42313:
                                        revert with 0, 50
                                    _50761 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50761
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50761
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52041 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52041] == bool(mem[_52041])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50761, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54089 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54345 = mem[_54089]
                                    if mem[_54089] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54345
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54345
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55625 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55625] == bool(mem[_55625])
                                    mem[mem[64] + 4] = _54345
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54345, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56649 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56649] == bool(mem[_56649])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                    if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _42058 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42314 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _42058 + (32 * _42314) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42314] = mem[(11 * ceil32(return_data.size)) + _42058 + 554 len 32 * _42314]
                                    if 1 >= _42314:
                                        revert with 0, 50
                                    _50762 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50762
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50762
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52042 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52042] == bool(mem[_52042])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50762, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54090 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54346 = mem[_54090]
                                    if mem[_54090] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54346
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54346
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55626 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55626] == bool(mem[_55626])
                                    mem[mem[64] + 4] = _54346
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54346, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56650 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56650] == bool(mem[_56650])
                        else:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 54
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42059 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42315 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42315
                                        require return_data.size >= _42059 + (32 * _42315) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42315] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42059 + 553 len 32 * _42315]
                                        if 1 >= _42315:
                                            revert with 0, 50
                                        _50763 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50763
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50763
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52043 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52043] == bool(mem[_52043])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50763, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54347 = mem[_54091]
                                        if mem[_54091] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54347
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54347
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55627 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55627] == bool(mem[_55627])
                                        mem[mem[64] + 4] = _54347
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54347, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56651 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56651] == bool(mem[_56651])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42060 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42316 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42316
                                        require return_data.size >= _42060 + (32 * _42316) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42316] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42060 + 553 len 32 * _42316]
                                        if 1 >= _42316:
                                            revert with 0, 50
                                        _50764 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50764
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50764
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52044 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52044] == bool(mem[_52044])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50764, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54348 = mem[_54092]
                                        if mem[_54092] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54348
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54348
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55628 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55628] == bool(mem[_55628])
                                        mem[mem[64] + 4] = _54348
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54348, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56652 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56652] == bool(mem[_56652])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42061 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42317 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42317
                                        require return_data.size >= _42061 + (32 * _42317) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42317] = mem[(13 * ceil32(return_data.size)) + _42061 + 554 len 32 * _42317]
                                        if 1 >= _42317:
                                            revert with 0, 50
                                        _50765 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50765
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50765
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52045 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52045] == bool(mem[_52045])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50765, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54349 = mem[_54093]
                                        if mem[_54093] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54349
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54349
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55629 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55629] == bool(mem[_55629])
                                        mem[mem[64] + 4] = _54349
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54349, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56653 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56653] == bool(mem[_56653])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42062 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42318 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42318
                                        require return_data.size >= _42062 + (32 * _42318) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42318] = mem[(13 * ceil32(return_data.size)) + _42062 + 554 len 32 * _42318]
                                        if 1 >= _42318:
                                            revert with 0, 50
                                        _50766 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50766
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50766
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52046 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52046] == bool(mem[_52046])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50766, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54094 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54350 = mem[_54094]
                                        if mem[_54094] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54350
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54350
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55630 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55630] == bool(mem[_55630])
                                        mem[mem[64] + 4] = _54350
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54350, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56654 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56654] == bool(mem[_56654])
                            else:
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42063 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42319 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42319
                                        require return_data.size >= _42063 + (32 * _42319) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42319] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42063 + 553 len 32 * _42319]
                                        if 1 >= _42319:
                                            revert with 0, 50
                                        _50767 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50767
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50767
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52047 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52047] == bool(mem[_52047])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50767, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54351 = mem[_54095]
                                        if mem[_54095] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54351
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54351
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55631 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55631] == bool(mem[_55631])
                                        mem[mem[64] + 4] = _54351
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54351, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56655 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56655] == bool(mem[_56655])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42064 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42320 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42320
                                        require return_data.size >= _42064 + (32 * _42320) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42320] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42064 + 553 len 32 * _42320]
                                        if 1 >= _42320:
                                            revert with 0, 50
                                        _50768 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50768
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50768
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52048 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52048] == bool(mem[_52048])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50768, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54096 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54352 = mem[_54096]
                                        if mem[_54096] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54352
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54352
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55632 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55632] == bool(mem[_55632])
                                        mem[mem[64] + 4] = _54352
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54352, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56656 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56656] == bool(mem[_56656])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42065 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42321 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42321
                                        require return_data.size >= _42065 + (32 * _42321) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42321] = mem[(13 * ceil32(return_data.size)) + _42065 + 554 len 32 * _42321]
                                        if 1 >= _42321:
                                            revert with 0, 50
                                        _50769 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50769
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50769
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52049 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52049] == bool(mem[_52049])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50769, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54097 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54353 = mem[_54097]
                                        if mem[_54097] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54353
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54353
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55633 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55633] == bool(mem[_55633])
                                        mem[mem[64] + 4] = _54353
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54353, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56657 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56657] == bool(mem[_56657])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42066 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42322 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42322
                                        require return_data.size >= _42066 + (32 * _42322) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42322] = mem[(13 * ceil32(return_data.size)) + _42066 + 554 len 32 * _42322]
                                        if 1 >= _42322:
                                            revert with 0, 50
                                        _50770 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50770
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50770
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52050 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52050] == bool(mem[_52050])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50770, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54098 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54354 = mem[_54098]
                                        if mem[_54098] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54354
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54354
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55634 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55634] == bool(mem[_55634])
                                        mem[mem[64] + 4] = _54354
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54354, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56658 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56658] == bool(mem[_56658])
                    else:
                        require return_data.size >= 32
                        require mem[(7 * ceil32(return_data.size)) + 292] == bool(mem[(7 * ceil32(return_data.size)) + 292])
                        if not mem[(7 * ceil32(return_data.size)) + 292]:
                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                        if not arg2:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 68
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                            call address(arg3) with:
                               funct Mask(32, 224, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) >> 224
                                 gas gas_remaining wei
                                args (Mask(512, -288, approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, 0) << 288)
                            if not return_data.size:
                                if not ext_call.success:
                                    if ext_call.return_data[0]:
                                        revert with memory
                                          from 128
                                           len ext_call.return_data[0]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not ext_call.return_data[0]:
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42071 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42327 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42327
                                    require return_data.size >= _42071 + (32 * _42327) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42327] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42071 + 553 len 32 * _42327]
                                    if 1 >= _42327:
                                        revert with 0, 50
                                    _50775 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50775
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50775
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52055 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52055] == bool(mem[_52055])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50775, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54103 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54359 = mem[_54103]
                                    if mem[_54103] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54359
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54359
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55639 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55639] == bool(mem[_55639])
                                    mem[mem[64] + 4] = _54359
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54359, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56663 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56663] == bool(mem[_56663])
                                else:
                                    require ext_call.return_data[0] >= 32
                                    require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                    if not uint32(this.address), mem[132 len 28]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                    idx = 0
                                    s = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                    t = (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                    require return_data.size >= 32
                                    _42072 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (8 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                    _42328 = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                    if mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                        revert with 0, 65
                                    if (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42328
                                    require return_data.size >= _42072 + (32 * _42328) + 32
                                    mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42328] = mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + _42072 + 553 len 32 * _42328]
                                    if 1 >= _42328:
                                        revert with 0, 50
                                    _50776 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                    if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50776
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50776
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52056 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52056] == bool(mem[_52056])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50776, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54104 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54360 = mem[_54104]
                                    if mem[_54104] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54360
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54360
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55640 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55640] == bool(mem[_55640])
                                    mem[mem[64] + 4] = _54360
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54360, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56664 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56664] == bool(mem[_56664])
                            else:
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _42073 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42329 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _42073 + (32 * _42329) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42329] = mem[(11 * ceil32(return_data.size)) + _42073 + 554 len 32 * _42329]
                                    if 1 >= _42329:
                                        revert with 0, 50
                                    _50777 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50777
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50777
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52057 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52057] == bool(mem[_52057])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50777, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54105 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54361 = mem[_54105]
                                    if mem[_54105] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54361
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54361
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55641 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55641] == bool(mem[_55641])
                                    mem[mem[64] + 4] = _54361
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54361, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56665 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56665] == bool(mem[_56665])
                                else:
                                    require return_data.size >= 32
                                    require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                    if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                    mem[(10 * ceil32(return_data.size)) + 430] = address(arg3)
                                    mem[(10 * ceil32(return_data.size)) + 462] = address(arg4)
                                    require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                    staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                            gas gas_remaining wei
                                           args address(arg3), address(arg4)
                                    mem[(10 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    if not ext_call.return_data[12 len 20]:
                                        revert with 0, 'No Swap Available'
                                    mem[(11 * ceil32(return_data.size)) + 426] = 2
                                    mem[(11 * ceil32(return_data.size)) + 458] = address(arg3)
                                    mem[(11 * ceil32(return_data.size)) + 490] = address(arg4)
                                    mem[(11 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                    mem[(11 * ceil32(return_data.size)) + 526] = arg2
                                    mem[(11 * ceil32(return_data.size)) + 558] = 1
                                    mem[(11 * ceil32(return_data.size)) + 590] = 160
                                    mem[(11 * ceil32(return_data.size)) + 686] = 2
                                    idx = 0
                                    s = (11 * ceil32(return_data.size)) + 718
                                    t = (11 * ceil32(return_data.size)) + 458
                                    while idx < 2:
                                        mem[s] = mem[t + 12 len 20]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    mem[(11 * ceil32(return_data.size)) + 622] = this.address
                                    mem[(11 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                    require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                    call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(11 * ceil32(return_data.size)) + 718 len 64]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[(11 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = (12 * ceil32(return_data.size)) + 522
                                    require return_data.size >= 32
                                    _42074 = mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                    require mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                    require (11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (11 * ceil32(return_data.size)) + return_data.size + 522
                                    _42330 = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    if mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                        revert with 0, 65
                                    if (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                        revert with 0, 65
                                    mem[64] = (12 * ceil32(return_data.size)) + ceil32(32 * mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                    mem[(12 * ceil32(return_data.size)) + 522] = mem[(11 * ceil32(return_data.size)) + mem[(11 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                    require return_data.size >= _42074 + (32 * _42330) + 32
                                    mem[(12 * ceil32(return_data.size)) + 554 len 32 * _42330] = mem[(11 * ceil32(return_data.size)) + _42074 + 554 len 32 * _42330]
                                    if 1 >= _42330:
                                        revert with 0, 50
                                    _50778 = mem[(12 * ceil32(return_data.size)) + 586]
                                    if mem[(12 * ceil32(return_data.size)) + 586] <= 0:
                                        revert with 0, 'Error Swapping Tokens 2'
                                    mem[mem[64] + 4] = address(arg1)
                                    mem[mem[64] + 36] = _50778
                                    require ext_code.size(address(arg4))
                                    call address(arg4).approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), _50778
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _52058 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_52058] == bool(mem[_52058])
                                    mem[mem[64] + 36] = arg5
                                    mem[mem[64] + 68] = this.address
                                    require ext_code.size(address(arg1))
                                    call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                         gas gas_remaining wei
                                        args _50778, arg5, this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _54106 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _54362 = mem[_54106]
                                    if mem[_54106] <= 0:
                                        revert with 0, 'Not enough Time balance'
                                    mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                    mem[mem[64] + 36] = _54362
                                    require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                    call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54362
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _55642 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_55642] == bool(mem[_55642])
                                    mem[mem[64] + 4] = _54362
                                    mem[mem[64] + 36] = this.address
                                    require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                    call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                         gas gas_remaining wei
                                        args _54362, this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _56666 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_56666] == bool(mem[_56666])
                        else:
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            require ext_code.size(address(arg3))
                            staticcall address(arg3).0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args this.address, 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = 32
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 54
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = 'SafeERC20: approve from non-zero'
                                mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ' to non-zero allowance' << 80
                                revert with memory
                                  from (8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261
                                   len ceil32(return_data.size) + 132
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = 0x60ae616a2155ee3d9a68541ba4544862310933d4
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = arg2
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ceil32(return_data.size) + 68
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 297 len 28] = 0x60ae616a2155ee3d9a68541ba4544862
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 293 len 4] = approve(address arg1, uint256 arg2)
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = 32
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = 'SafeERC20: low-level call failed'
                            if not ext_code.size(address(arg3)):
                                revert with 0, 'Address: call to non-contract'
                            mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len floor32(ceil32(return_data.size) + 99)] = approve(address arg1, uint256 arg2), 0x60ae616a2155ee3d9a68541b, 0, arg2, mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len floor32(ceil32(return_data.size) + 99) - 68]
                            if floor32(ceil32(return_data.size) + 99) <= ceil32(return_data.size) + 68:
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42075 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42331 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42331
                                        require return_data.size >= _42075 + (32 * _42331) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42331] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42075 + 553 len 32 * _42331]
                                        if 1 >= _42331:
                                            revert with 0, 50
                                        _50779 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50779
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50779
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52059 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52059] == bool(mem[_52059])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50779, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54363 = mem[_54107]
                                        if mem[_54107] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54363
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54363
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55643 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55643] == bool(mem[_55643])
                                        mem[mem[64] + 4] = _54363
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54363, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56667 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56667] == bool(mem[_56667])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42076 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42332 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42332
                                        require return_data.size >= _42076 + (32 * _42332) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42332] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42076 + 553 len 32 * _42332]
                                        if 1 >= _42332:
                                            revert with 0, 50
                                        _50780 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50780
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50780
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52060 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52060] == bool(mem[_52060])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50780, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54108 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54364 = mem[_54108]
                                        if mem[_54108] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54364
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54364
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55644 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55644] == bool(mem[_55644])
                                        mem[mem[64] + 4] = _54364
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54364, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56668] == bool(mem[_56668])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42077 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42333 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42333
                                        require return_data.size >= _42077 + (32 * _42333) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42333] = mem[(13 * ceil32(return_data.size)) + _42077 + 554 len 32 * _42333]
                                        if 1 >= _42333:
                                            revert with 0, 50
                                        _50781 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50781
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50781
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52061 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52061] == bool(mem[_52061])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50781, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54109 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54365 = mem[_54109]
                                        if mem[_54109] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54365
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54365
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55645 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55645] == bool(mem[_55645])
                                        mem[mem[64] + 4] = _54365
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54365, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56669 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56669] == bool(mem[_56669])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42078 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42334 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42334
                                        require return_data.size >= _42078 + (32 * _42334) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42334] = mem[(13 * ceil32(return_data.size)) + _42078 + 554 len 32 * _42334]
                                        if 1 >= _42334:
                                            revert with 0, 50
                                        _50782 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50782
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50782
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52062 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52062] == bool(mem[_52062])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50782, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54110 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54366 = mem[_54110]
                                        if mem[_54110] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54366
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54366
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55646 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55646] == bool(mem[_55646])
                                        mem[mem[64] + 4] = _54366
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54366, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56670] == bool(mem[_56670])
                            else:
                                mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
                                call address(arg3).mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
                                     gas gas_remaining wei
                                    args mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len (17 * ceil32(return_data.size)) + 64]
                                if not return_data.size:
                                    if not ext_call.success:
                                        if ext_call.return_data[0]:
                                            revert with memory
                                              from 128
                                               len ext_call.return_data[0]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not ext_call.return_data[0]:
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42079 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42335 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42335
                                        require return_data.size >= _42079 + (32 * _42335) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42335] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42079 + 553 len 32 * _42335]
                                        if 1 >= _42335:
                                            revert with 0, 50
                                        _50783 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50783
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50783
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52063 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52063] == bool(mem[_52063])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50783, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54111 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54367 = mem[_54111]
                                        if mem[_54111] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54367
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54367
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55647 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55647] == bool(mem[_55647])
                                        mem[mem[64] + 4] = _54367
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54367, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56671] == bool(mem[_56671])
                                    else:
                                        require ext_call.return_data[0] >= 32
                                        require uint32(this.address), mem[132 len 28] == bool(uint32(this.address), mem[132 len 28])
                                        if not uint32(this.address), mem[132 len 28]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = address(arg3)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = 2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] = address(arg3)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 489] = address(arg4)
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg2
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] = 1
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 589] = 160
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 685] = 2
                                        idx = 0
                                        s = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717
                                        t = (10 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 621] = this.address
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 653] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 717 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521
                                        require return_data.size >= 32
                                        _42080 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 552 < (10 * ceil32(return_data.size)) + ceil32(return_data.size) + return_data.size + 521
                                        _42336 = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]
                                        if mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521] > test266151307():
                                            revert with 0, 65
                                        if (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522 > test266151307() or ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (11 * ceil32(return_data.size)) + ceil32(return_data.size) + ceil32(32 * mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + 521 len 4], Mask(224, 32, arg2) >> 32 + 521]) + 522
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 521] = _42336
                                        require return_data.size >= _42080 + (32 * _42336) + 32
                                        mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 553 len 32 * _42336] = mem[(10 * ceil32(return_data.size)) + ceil32(return_data.size) + _42080 + 553 len 32 * _42336]
                                        if 1 >= _42336:
                                            revert with 0, 50
                                        _50784 = mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585]
                                        if mem[(11 * ceil32(return_data.size)) + ceil32(return_data.size) + 585] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50784
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50784
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52064 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52064] == bool(mem[_52064])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50784, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54112 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54368 = mem[_54112]
                                        if mem[_54112] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54368
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54368
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55648 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55648] == bool(mem[_55648])
                                        mem[mem[64] + 4] = _54368
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54368, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56672 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56672] == bool(mem[_56672])
                                else:
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = return_data.size
                                    mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42081 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42337 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42337
                                        require return_data.size >= _42081 + (32 * _42337) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42337] = mem[(13 * ceil32(return_data.size)) + _42081 + 554 len 32 * _42337]
                                        if 1 >= _42337:
                                            revert with 0, 50
                                        _50785 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50785
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50785
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52065 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52065] == bool(mem[_52065])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50785, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54113 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54369 = mem[_54113]
                                        if mem[_54113] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54369
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54369
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55649 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55649] == bool(mem[_55649])
                                        mem[mem[64] + 4] = _54369
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54369, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56673 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56673] == bool(mem[_56673])
                                    else:
                                        require return_data.size >= 32
                                        require mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                                        if not mem[(8 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                        mem[(12 * ceil32(return_data.size)) + 430] = address(arg3)
                                        mem[(12 * ceil32(return_data.size)) + 462] = address(arg4)
                                        require ext_code.size(0x9ad6c38be94206ca50bb0d90783181662f0cfa10)
                                        staticcall 0x9ad6c38be94206ca50bb0d90783181662f0cfa10.getPair(address arg1, address arg2) with:
                                                gas gas_remaining wei
                                               args address(arg3), address(arg4)
                                        mem[(12 * ceil32(return_data.size)) + 426] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                        if not ext_call.return_data[12 len 20]:
                                            revert with 0, 'No Swap Available'
                                        mem[(13 * ceil32(return_data.size)) + 426] = 2
                                        mem[(13 * ceil32(return_data.size)) + 458] = address(arg3)
                                        mem[(13 * ceil32(return_data.size)) + 490] = address(arg4)
                                        mem[(13 * ceil32(return_data.size)) + 522] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[(13 * ceil32(return_data.size)) + 526] = arg2
                                        mem[(13 * ceil32(return_data.size)) + 558] = 1
                                        mem[(13 * ceil32(return_data.size)) + 590] = 160
                                        mem[(13 * ceil32(return_data.size)) + 686] = 2
                                        idx = 0
                                        s = (13 * ceil32(return_data.size)) + 718
                                        t = (13 * ceil32(return_data.size)) + 458
                                        while idx < 2:
                                            mem[s] = mem[t + 12 len 20]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        mem[(13 * ceil32(return_data.size)) + 622] = this.address
                                        mem[(13 * ceil32(return_data.size)) + 654] = 0xf000000000000000000000000000000000000000000000000000000000000000
                                        require ext_code.size(0x60ae616a2155ee3d9a68541ba4544862310933d4)
                                        call 0x60ae616a2155ee3d9a68541ba4544862310933d4.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args arg2, 1, 160, address(this.address), 0xf000000000000000000000000000000000000000000000000000000000000000, 2, mem[(13 * ceil32(return_data.size)) + 718 len 64]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[(13 * ceil32(return_data.size)) + 522 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        mem[64] = (14 * ceil32(return_data.size)) + 522
                                        require return_data.size >= 32
                                        _42082 = mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32
                                        require mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 <= test266151307()
                                        require (13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 553 < (13 * ceil32(return_data.size)) + return_data.size + 522
                                        _42338 = mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]
                                        if mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522] > test266151307():
                                            revert with 0, 65
                                        if (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523 > test266151307() or ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 1 < 0:
                                            revert with 0, 65
                                        mem[64] = (14 * ceil32(return_data.size)) + ceil32(32 * mem[(13 * ceil32(return_data.size)) + mem[(13 * ceil32(return_data.size)) + 522 len 4], Mask(224, 32, arg2) >> 32 + 522]) + 523
                                        mem[(14 * ceil32(return_data.size)) + 522] = _42338
                                        require return_data.size >= _42082 + (32 * _42338) + 32
                                        mem[(14 * ceil32(return_data.size)) + 554 len 32 * _42338] = mem[(13 * ceil32(return_data.size)) + _42082 + 554 len 32 * _42338]
                                        if 1 >= _42338:
                                            revert with 0, 50
                                        _50786 = mem[(14 * ceil32(return_data.size)) + 586]
                                        if mem[(14 * ceil32(return_data.size)) + 586] <= 0:
                                            revert with 0, 'Error Swapping Tokens 2'
                                        mem[mem[64] + 4] = address(arg1)
                                        mem[mem[64] + 36] = _50786
                                        require ext_code.size(address(arg4))
                                        call address(arg4).approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), _50786
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _52066 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_52066] == bool(mem[_52066])
                                        mem[mem[64] + 36] = arg5
                                        mem[mem[64] + 68] = this.address
                                        require ext_code.size(address(arg1))
                                        call address(arg1).deposit(uint256 arg1, uint256 arg2, address arg3) with:
                                             gas gas_remaining wei
                                            args _50786, arg5, this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = this.address
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        staticcall 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _54114 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        _54370 = mem[_54114]
                                        if mem[_54114] <= 0:
                                            revert with 0, 'Not enough Time balance'
                                        mem[mem[64] + 4] = 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9
                                        mem[mem[64] + 36] = _54370
                                        require ext_code.size(0xb54f16fb19478766a268f172c9480f8da1a7c9c3)
                                        call 0xb54f16fb19478766a268f172c9480f8da1a7c9c3.approve(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9, _54370
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _55650 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_55650] == bool(mem[_55650])
                                        mem[mem[64] + 4] = _54370
                                        mem[mem[64] + 36] = this.address
                                        require ext_code.size(0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9)
                                        call 0x4456b87af11e87e329ab7d7c7a246ed1ac2168b9.stake(uint256 arg1, address arg2) with:
                                             gas gas_remaining wei
                                            args _54370, this.address
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _56674 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_56674] == bool(mem[_56674])
}



}
