contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1, uint256 arg2)
#
address owner;
uint256 stor1;
address sub_1d7ec258Address;
address sub_25087a55Address;
array of struct poolInfo;
mapping of struct userInfo;
uint256 totalAllocPoint;
mapping of uint8 stor7;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856476;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856477;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856478;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856479;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856480;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856481;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856482;
array of uint256 stor62514009886607029107290561805838585334079798074568712924583230797734656856483;

function poolLength() payable {
    return poolInfo.length
}

function poolInfo(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    return poolInfo[arg1].field_0, 
           poolInfo[arg1].field_256,
           poolInfo[arg1].field_512,
           poolInfo[arg1].field_768,
           poolInfo[arg1].field_1024,
           poolInfo[arg1].field_1280,
           poolInfo[arg1].field_1536,
           poolInfo[arg1].field_1792,
           poolInfo[arg1].field_2048
}

function totalAllocPoint() payable {
    return totalAllocPoint
}

function sub_1d7ec258(?) payable {
    return sub_1d7ec258Address
}

function sub_25087a55(?) payable {
    return sub_25087a55Address
}

function owner() payable {
    return owner
}

function userInfo(uint256 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    return userInfo[arg1][arg2].field_0, userInfo[arg1][arg2].field_256
}

function poolExistence(address arg1) payable {
    require calldata.size - 4 >= 32
    return bool(stor7[arg1])
}

function _fallback() payable {
    revert
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function getMultiplier(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg1 > arg2:
        revert with 0, 'SafeMath: subtraction overflow'
    return (arg2 - arg1)
}

function sub_1ac8ab68(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
        revert with 0, 'SafeMath: subtraction overflow'
    return (poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048)
}

function sub_4e12f939(?) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
        revert with 0, 'SafeMath: subtraction overflow'
    if poolInfo[arg1].field_1280 <= 0:
        revert with 0, 'SafeMath: division by zero'
    require poolInfo[arg1].field_1280
    return (poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048 / poolInfo[arg1].field_1280)
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x744f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_d419ea81(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    require arg1 < poolInfo.length
    if arg2 < poolInfo[arg1].field_2048:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    37,
                    0xfe696e76616c6964206465637265617365206f6620746f74616c526577617264416d6f756e,
                    mem[201 len 27]
    require arg1 < poolInfo.length
    poolInfo[arg1].field_1792 = arg2
}

function emergencyWithdraw(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    require arg1 < poolInfo.length
    userInfo[arg1][msg.sender].field_0 = 0
    userInfo[arg1][msg.sender].field_256 = 0
    require ext_code.size(sub_25087a55Address)
    call sub_25087a55Address.burn(address rg1, uint256 rg2) with:
         gas gas_remaining wei
        args msg.sender, userInfo[arg1][msg.sender].field_0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    if userInfo[arg1][msg.sender].field_0 > poolInfo[arg1].field_1536:
        revert with 0, 'SafeMath: subtraction overflow'
    poolInfo[arg1].field_1536 -= userInfo[arg1][msg.sender].field_0
    if eth.balance(this.address) < 0:
        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
    if not ext_code.size(sub_1d7ec258Address):
        revert with 0, 'Address: call to non-contract'
    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, userInfo[arg1][msg.sender].field_32
    call sub_1d7ec258Address with:
       funct uint32(msg.sender)
         gas gas_remaining wei
        args userInfo[arg1][msg.sender].field_0, mem[324 len 4]
    if not return_data.size:
        if not ext_call.success:
            revert with unknown_0xa9059cbb(?????), msg.sender, userInfo[arg1][msg.sender].field_0
        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
            revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
    else:
        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            if return_data.size:
                revert with ext_call.return_data[0 len return_data.size]
            revert with 0, 'SafeERC20: low-level call failed'
        if return_data.size:
            require return_data.size >= 32
            if not mem[292]:
                revert with 0, 
                            32,
                            42,
                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                            mem[ceil32(return_data.size) + 371 len 22]
    emit EmergencyWithdraw(userInfo[arg1][msg.sender].field_0, msg.sender, arg1);
    stor1 = 1
}

function updatePool(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 < poolInfo.length
    if block.timestamp > poolInfo[arg1].field_256:
        if poolInfo[arg1].field_1536:
            if poolInfo[arg1].field_1280:
                if poolInfo[arg1].field_2048 != poolInfo[arg1].field_1792:
                    if poolInfo[arg1].field_256 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - poolInfo[arg1].field_256:
                        require arg1 < poolInfo.length
                        if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if 0 <= poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                            if poolInfo[arg1].field_1536 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require poolInfo[arg1].field_1536
                            if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                        else:
                            if not poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                            else:
                                if (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048 != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536
                    else:
                        if (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / block.timestamp - poolInfo[arg1].field_256 != poolInfo[arg1].field_1280:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        require arg1 < poolInfo.length
                        if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) <= poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                            if not (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280):
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                            else:
                                if (10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if ((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += (10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536
                        else:
                            if not poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                            else:
                                if (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048 != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536
        poolInfo[arg1].field_256 = block.timestamp
}

function massUpdatePools() payable {
    idx = 0
    while idx < poolInfo.length:
        mem[0] = 4
        if block.timestamp > poolInfo[idx].field_256:
            if poolInfo[idx].field_1536:
                if poolInfo[idx].field_1280:
                    if poolInfo[idx].field_2048 != poolInfo[idx].field_1792:
                        if poolInfo[idx].field_256 > block.timestamp:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not block.timestamp - poolInfo[idx].field_256:
                            require idx < poolInfo.length
                            mem[0] = 4
                            if poolInfo[idx].field_2048 > poolInfo[idx].field_1792:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if 0 <= poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                if poolInfo[idx].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[idx].field_1536
                                if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                            else:
                                if not poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                else:
                                    if (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1792 - poolInfo[idx].field_2048 != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if ((10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536
                        else:
                            if (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) / block.timestamp - poolInfo[idx].field_256 != poolInfo[idx].field_1280:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            require idx < poolInfo.length
                            mem[0] = 4
                            if poolInfo[idx].field_2048 > poolInfo[idx].field_1792:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) <= poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                if not (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280):
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                else:
                                    if (10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if ((10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += (10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / poolInfo[idx].field_1536
                            else:
                                if not poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                else:
                                    if (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1792 - poolInfo[idx].field_2048 != 10^18:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if ((10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536
            poolInfo[idx].field_256 = block.timestamp
        idx = idx + 1
        continue 
}

function set(uint256 arg1, uint256 arg2, uint256 arg3, uint256 arg4, bool arg5) payable {
    require calldata.size - 4 >= 160
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if arg3 <= arg2:
        revert with 0, 'bad input'
    if arg5:
        idx = 0
        while idx < poolInfo.length:
            mem[0] = 4
            if block.timestamp > poolInfo[idx].field_256:
                if poolInfo[idx].field_1536:
                    if poolInfo[idx].field_1280:
                        if poolInfo[idx].field_2048 != poolInfo[idx].field_1792:
                            if poolInfo[idx].field_256 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not block.timestamp - poolInfo[idx].field_256:
                                require idx < poolInfo.length
                                mem[0] = 4
                                if poolInfo[idx].field_2048 > poolInfo[idx].field_1792:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if 0 <= poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                else:
                                    if not poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                    else:
                                        if (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1792 - poolInfo[idx].field_2048 != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if ((10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536
                            else:
                                if (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) / block.timestamp - poolInfo[idx].field_256 != poolInfo[idx].field_1280:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                require idx < poolInfo.length
                                mem[0] = 4
                                if poolInfo[idx].field_2048 > poolInfo[idx].field_1792:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) <= poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                    if not (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280):
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                    else:
                                        if (10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if ((10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += (10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / poolInfo[idx].field_1536
                                else:
                                    if not poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                    else:
                                        if (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1792 - poolInfo[idx].field_2048 != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if ((10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536
                poolInfo[idx].field_256 = block.timestamp
            idx = idx + 1
            continue 
    require arg1 < poolInfo.length
    poolInfo[arg1].field_768 = arg2
    poolInfo[arg1].field_1024 = arg3
    poolInfo[arg1].field_1280 = arg4
}

function sub_804380ff(?) payable {
    require calldata.size - 4 >= 192
    if owner != msg.sender:
        revert with 0, 'wOwnable: caller is not the owne'
    if stor7[address(arg1)]:
        revert with 0, 'nonDuplicated: duplicated'
    if arg2 <= block.timestamp:
        revert with 0, 'pool must start in future'
    if arg3 <= arg2:
        revert with 0, 'bad input'
    if arg6:
        idx = 0
        while idx < poolInfo.length:
            mem[0] = 4
            if block.timestamp > poolInfo[idx].field_256:
                if poolInfo[idx].field_1536:
                    if poolInfo[idx].field_1280:
                        if poolInfo[idx].field_2048 != poolInfo[idx].field_1792:
                            if poolInfo[idx].field_256 > block.timestamp:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not block.timestamp - poolInfo[idx].field_256:
                                require idx < poolInfo.length
                                mem[0] = 4
                                if poolInfo[idx].field_2048 > poolInfo[idx].field_1792:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if 0 <= poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                    if poolInfo[idx].field_1536 <= 0:
                                        revert with 0, 'SafeMath: division by zero'
                                    require poolInfo[idx].field_1536
                                    if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                else:
                                    if not poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                    else:
                                        if (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1792 - poolInfo[idx].field_2048 != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if ((10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536
                            else:
                                if (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) / block.timestamp - poolInfo[idx].field_256 != poolInfo[idx].field_1280:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                require idx < poolInfo.length
                                mem[0] = 4
                                if poolInfo[idx].field_2048 > poolInfo[idx].field_1792:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) <= poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                    if not (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280):
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                    else:
                                        if (10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / (block.timestamp * poolInfo[idx].field_1280) - (poolInfo[idx].field_256 * poolInfo[idx].field_1280) != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if ((10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += (10^18 * block.timestamp * poolInfo[idx].field_1280) - (10^18 * poolInfo[idx].field_256 * poolInfo[idx].field_1280) / poolInfo[idx].field_1536
                                else:
                                    if not poolInfo[idx].field_1792 - poolInfo[idx].field_2048:
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if (0 / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += 0 / poolInfo[idx].field_1536
                                    else:
                                        if (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1792 - poolInfo[idx].field_2048 != 10^18:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if poolInfo[idx].field_1536 <= 0:
                                            revert with 0, 'SafeMath: division by zero'
                                        require poolInfo[idx].field_1536
                                        if ((10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536) + poolInfo[idx].field_512 < poolInfo[idx].field_512:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[idx].field_512 += (10^18 * poolInfo[idx].field_1792) - (10^18 * poolInfo[idx].field_2048) / poolInfo[idx].field_1536
                poolInfo[idx].field_256 = block.timestamp
            idx = idx + 1
            continue 
    stor7[address(arg1)] = 1
    poolInfo.length++
    poolInfo[poolInfo.length].field_0 = arg1
    stor8A35[stor4.length] = arg2
    stor8A35[stor4.length] = 0
    stor8A35[stor4.length] = arg2
    stor8A35[stor4.length] = arg3
    stor8A35[stor4.length] = arg4
    stor8A35[stor4.length] = 0
    stor8A35[stor4.length] = arg5
    stor8A35[stor4.length] = 0
}

function pendingRewards(uint256 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 < poolInfo.length
    if block.timestamp <= poolInfo[arg1].field_256:
        if not userInfo[arg1][address(arg2)].field_0:
            if userInfo[arg1][address(arg2)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[arg1][address(arg2)].field_256
        if poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0 / userInfo[arg1][address(arg2)].field_0 != poolInfo[arg1].field_512:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[arg1][address(arg2)].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0 / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0 / 10^18) - userInfo[arg1][address(arg2)].field_256)
    if not poolInfo[arg1].field_1536:
        if not userInfo[arg1][address(arg2)].field_0:
            if userInfo[arg1][address(arg2)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[arg1][address(arg2)].field_256
        if poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0 / userInfo[arg1][address(arg2)].field_0 != poolInfo[arg1].field_512:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[arg1][address(arg2)].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0 / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        return ((poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0 / 10^18) - userInfo[arg1][address(arg2)].field_256)
    if poolInfo[arg1].field_256 > block.timestamp:
        revert with 0, 'SafeMath: subtraction overflow'
    if not block.timestamp - poolInfo[arg1].field_256:
        require arg1 < poolInfo.length
        if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
            revert with 0, 'SafeMath: subtraction overflow'
        if 0 <= poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
            if poolInfo[arg1].field_1536 <= 0:
                revert with 0, 'SafeMath: division by zero'
            require poolInfo[arg1].field_1536
            if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[arg1][address(arg2)].field_0:
                if userInfo[arg1][address(arg2)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[arg1][address(arg2)].field_256
            if (0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / userInfo[arg1][address(arg2)].field_0 != (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[arg1][address(arg2)].field_256 > (0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            return (((0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18) - userInfo[arg1][address(arg2)].field_256)
    else:
        if (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / block.timestamp - poolInfo[arg1].field_256 != poolInfo[arg1].field_1280:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require arg1 < poolInfo.length
        if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
            revert with 0, 'SafeMath: subtraction overflow'
        if (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) <= poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
            if not (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280):
                if poolInfo[arg1].field_1536 <= 0:
                    revert with 0, 'SafeMath: division by zero'
                require poolInfo[arg1].field_1536
                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                    revert with 0, 'SafeMath: addition overflow'
                if not userInfo[arg1][address(arg2)].field_0:
                    if userInfo[arg1][address(arg2)].field_256 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    return -userInfo[arg1][address(arg2)].field_256
                if (0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / userInfo[arg1][address(arg2)].field_0 != (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if userInfo[arg1][address(arg2)].field_256 > (0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                return (((0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18) - userInfo[arg1][address(arg2)].field_256)
            if (10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) != 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if poolInfo[arg1].field_1536 <= 0:
                revert with 0, 'SafeMath: division by zero'
            require poolInfo[arg1].field_1536
            if ((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                revert with 0, 'SafeMath: addition overflow'
            if not userInfo[arg1][address(arg2)].field_0:
                if userInfo[arg1][address(arg2)].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                return -userInfo[arg1][address(arg2)].field_256
            if ((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / userInfo[arg1][address(arg2)].field_0 != ((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if userInfo[arg1][address(arg2)].field_256 > ((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            return ((((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18) - userInfo[arg1][address(arg2)].field_256)
    if not poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
        if poolInfo[arg1].field_1536 <= 0:
            revert with 0, 'SafeMath: division by zero'
        require poolInfo[arg1].field_1536
        if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
            revert with 0, 'SafeMath: addition overflow'
        if not userInfo[arg1][address(arg2)].field_0:
            if userInfo[arg1][address(arg2)].field_256 > 0:
                revert with 0, 'SafeMath: subtraction overflow'
            return -userInfo[arg1][address(arg2)].field_256
        if (0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / userInfo[arg1][address(arg2)].field_0 != (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        if userInfo[arg1][address(arg2)].field_256 > (0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18:
            revert with 0, 'SafeMath: subtraction overflow'
        return (((0 / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18) - userInfo[arg1][address(arg2)].field_256)
    if (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048 != 10^18:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if poolInfo[arg1].field_1536 <= 0:
        revert with 0, 'SafeMath: division by zero'
    require poolInfo[arg1].field_1536
    if ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
        revert with 0, 'SafeMath: addition overflow'
    if not userInfo[arg1][address(arg2)].field_0:
        if userInfo[arg1][address(arg2)].field_256 > 0:
            revert with 0, 'SafeMath: subtraction overflow'
        return -userInfo[arg1][address(arg2)].field_256
    if ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / userInfo[arg1][address(arg2)].field_0 != ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if userInfo[arg1][address(arg2)].field_256 > ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18:
        revert with 0, 'SafeMath: subtraction overflow'
    return ((((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536 * userInfo[arg1][address(arg2)].field_0) + (poolInfo[arg1].field_512 * userInfo[arg1][address(arg2)].field_0) / 10^18) - userInfo[arg1][address(arg2)].field_256)
}

function deposit(uint256 arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if stor1 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor1 = 2
    require arg1 < poolInfo.length
    if block.timestamp <= poolInfo[arg1].field_256:
        if not userInfo[arg1][msg.sender].field_0:
            if not arg2:
                require ext_code.size(sub_25087a55Address)
                call sub_25087a55Address.0x40c10f19 with:
                     gas gas_remaining wei
                    args msg.sender, arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                    revert with 0, 'SafeMath: addition overflow'
                poolInfo[arg1].field_1536 += arg2
                if not userInfo[arg1][msg.sender].field_0:
                    userInfo[arg1][msg.sender].field_256 = 0
                else:
                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
            else:
                if eth.balance(this.address) < 0:
                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                if not ext_code.size(sub_1d7ec258Address):
                    revert with 0, 'Address: call to non-contract'
                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                mem[416 len 4] = 0
                call sub_1d7ec258Address with:
                     gas gas_remaining wei
                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                if not return_data.size:
                    if not ext_call.success:
                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                        revert with 0, 
                                    32,
                                    42,
                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                    mem[402 len 14],
                                    0,
                                    mem[420 len 4]
                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    userInfo[arg1][msg.sender].field_0 += arg2
                    require ext_code.size(sub_25087a55Address)
                    call sub_25087a55Address.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                        revert with 0, 'SafeMath: addition overflow'
                    poolInfo[arg1].field_1536 += arg2
                    if not userInfo[arg1][msg.sender].field_0:
                        userInfo[arg1][msg.sender].field_256 = 0
                    else:
                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                else:
                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        if return_data.size:
                            revert with ext_call.return_data[0 len return_data.size]
                        revert with 0, 'SafeERC20: low-level call failed'
                    if return_data.size:
                        require return_data.size >= 32
                        if not mem[324]:
                            revert with 0, 
                                        32,
                                        42,
                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[ceil32(return_data.size) + 403 len 22]
                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                        revert with 0, 'SafeMath: addition overflow'
                    userInfo[arg1][msg.sender].field_0 += arg2
                    require ext_code.size(sub_25087a55Address)
                    call sub_25087a55Address.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                        revert with 0, 'SafeMath: addition overflow'
                    poolInfo[arg1].field_1536 += arg2
                    if not userInfo[arg1][msg.sender].field_0:
                        userInfo[arg1][msg.sender].field_256 = 0
                    else:
                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                            revert with 0, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[ceil32(return_data.size) + 394 len 31]
                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
            emit Deposit(arg2, msg.sender, arg1);
        else:
            if not userInfo[arg1][msg.sender].field_0:
                if userInfo[arg1][msg.sender].field_256 > 0:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not -userInfo[arg1][msg.sender].field_256:
                    if not arg2:
                        require ext_code.size(sub_25087a55Address)
                        call sub_25087a55Address.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_1536 += arg2
                        if not userInfo[arg1][msg.sender].field_0:
                            userInfo[arg1][msg.sender].field_256 = 0
                        else:
                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    else:
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                        if not ext_code.size(sub_1d7ec258Address):
                            revert with 0, 'Address: call to non-contract'
                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[416 len 4] = 0
                        call sub_1d7ec258Address with:
                             gas gas_remaining wei
                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 
                                            32,
                                            42,
                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[402 len 14],
                                            0,
                                            mem[420 len 4]
                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[arg1][msg.sender].field_0 += arg2
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        else:
                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[324]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 403 len 22]
                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[arg1][msg.sender].field_0 += arg2
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 394 len 31]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    emit Deposit(arg2, msg.sender, arg1);
                else:
                    require ext_code.size(poolInfo[arg1].field_0)
                    staticcall poolInfo[arg1].field_0.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if not ext_code.size(poolInfo[arg1].field_0):
                        revert with 0, 'Address: call to non-contract'
                    if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                        call poolInfo[arg1].field_0 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[580 len 4] = 0
                                mem[552 len 0] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[566 len 14],
                                                    0,
                                                    mem[584 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[488]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[292]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 371 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 362 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 
                                                32,
                                                38,
                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                mem[ceil32(return_data.size) + 563 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                 arg2,
                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                 msg.sender,
                                                 arg1,
                    else:
                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                        call poolInfo[arg1].field_0 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[580 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[566 len 14],
                                                    0,
                                                    mem[584 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[488]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[292]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 371 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 362 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 
                                                32,
                                                38,
                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                mem[ceil32(return_data.size) + 563 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                 arg2,
                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                 msg.sender,
                                                 arg1,
            else:
                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                    if not arg2:
                        require ext_code.size(sub_25087a55Address)
                        call sub_25087a55Address.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_1536 += arg2
                        if not userInfo[arg1][msg.sender].field_0:
                            userInfo[arg1][msg.sender].field_256 = 0
                        else:
                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    else:
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                        if not ext_code.size(sub_1d7ec258Address):
                            revert with 0, 'Address: call to non-contract'
                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[416 len 4] = 0
                        call sub_1d7ec258Address with:
                             gas gas_remaining wei
                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 
                                            32,
                                            42,
                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[402 len 14],
                                            0,
                                            mem[420 len 4]
                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[arg1][msg.sender].field_0 += arg2
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        else:
                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[324]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 403 len 22]
                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[arg1][msg.sender].field_0 += arg2
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 394 len 31]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    emit Deposit(arg2, msg.sender, arg1);
                else:
                    require ext_code.size(poolInfo[arg1].field_0)
                    staticcall poolInfo[arg1].field_0.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                    if not ext_code.size(poolInfo[arg1].field_0):
                        revert with 0, 'Address: call to non-contract'
                    if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                        call poolInfo[arg1].field_0 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0xa9059cbb(?????), 
                                            msg.sender,
                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[580 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), 
                                                    msg.sender,
                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[566 len 14],
                                                    0,
                                                    mem[584 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[488]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[292]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 371 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 362 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 
                                                32,
                                                38,
                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                mem[ceil32(return_data.size) + 563 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), 
                                                    msg.sender,
                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                 arg2,
                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                 msg.sender,
                                                 arg1,
                    else:
                        mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                        call poolInfo[arg1].field_0 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[580 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[566 len 14],
                                                    0,
                                                    mem[584 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[488]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[292]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 371 len 22]
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 362 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 
                                                32,
                                                38,
                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                mem[ceil32(return_data.size) + 563 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                    0,
                                                    mem[ceil32(return_data.size) + 585 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[ceil32(return_data.size) + 489]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 
                                                    'SafeMath: addition overflow',
                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                 arg2,
                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                 msg.sender,
                                                 arg1,
    else:
        if not poolInfo[arg1].field_1536:
            poolInfo[arg1].field_256 = block.timestamp
            if not userInfo[arg1][msg.sender].field_0:
                if not arg2:
                    require ext_code.size(sub_25087a55Address)
                    call sub_25087a55Address.0x40c10f19 with:
                         gas gas_remaining wei
                        args msg.sender, arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                        revert with 0, 'SafeMath: addition overflow'
                    poolInfo[arg1].field_1536 += arg2
                    if not userInfo[arg1][msg.sender].field_0:
                        userInfo[arg1][msg.sender].field_256 = 0
                    else:
                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                else:
                    if eth.balance(this.address) < 0:
                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                    if not ext_code.size(sub_1d7ec258Address):
                        revert with 0, 'Address: call to non-contract'
                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                    mem[416 len 4] = 0
                    mem[388 len 0] = 0
                    call sub_1d7ec258Address with:
                         gas gas_remaining wei
                        args Mask(224, 32, arg2) << 480, mem[388 len 4]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                            revert with 0, 
                                        32,
                                        42,
                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                        mem[402 len 14],
                                        0,
                                        mem[420 len 4]
                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        userInfo[arg1][msg.sender].field_0 += arg2
                        require ext_code.size(sub_25087a55Address)
                        call sub_25087a55Address.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_1536 += arg2
                        if not userInfo[arg1][msg.sender].field_0:
                            userInfo[arg1][msg.sender].field_256 = 0
                        else:
                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    else:
                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            if return_data.size:
                                revert with ext_call.return_data[0 len return_data.size]
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[324]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 403 len 22]
                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                            revert with 0, 'SafeMath: addition overflow'
                        userInfo[arg1][msg.sender].field_0 += arg2
                        require ext_code.size(sub_25087a55Address)
                        call sub_25087a55Address.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_1536 += arg2
                        if not userInfo[arg1][msg.sender].field_0:
                            userInfo[arg1][msg.sender].field_256 = 0
                        else:
                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                revert with 0, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[ceil32(return_data.size) + 394 len 31]
                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                emit Deposit(arg2, msg.sender, arg1);
            else:
                if not userInfo[arg1][msg.sender].field_0:
                    if userInfo[arg1][msg.sender].field_256 > 0:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not -userInfo[arg1][msg.sender].field_256:
                        if not arg2:
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        else:
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                            if not ext_code.size(sub_1d7ec258Address):
                                revert with 0, 'Address: call to non-contract'
                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                            mem[416 len 4] = 0
                            call sub_1d7ec258Address with:
                                 gas gas_remaining wei
                                args Mask(224, 32, arg2) << 480, mem[388 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[402 len 14],
                                                0,
                                                mem[420 len 4]
                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                userInfo[arg1][msg.sender].field_0 += arg2
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[324]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 403 len 22]
                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                userInfo[arg1][msg.sender].field_0 += arg2
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 394 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        emit Deposit(arg2, msg.sender, arg1);
                    else:
                        require ext_code.size(poolInfo[arg1].field_0)
                        staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                        if not ext_code.size(poolInfo[arg1].field_0):
                            revert with 0, 'Address: call to non-contract'
                        if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                            call poolInfo[arg1].field_0 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[580 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[566 len 14],
                                                        0,
                                                        mem[584 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[488]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[292]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 371 len 22]
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 362 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 
                                                    32,
                                                    38,
                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                    mem[ceil32(return_data.size) + 563 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 
                                                        'SafeMath: addition overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 
                                                        'SafeMath: addition overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                     arg2,
                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                     msg.sender,
                                                     arg1,
                        else:
                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                            call poolInfo[arg1].field_0 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[580 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[566 len 14],
                                                        0,
                                                        mem[584 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[488]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[292]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 371 len 22]
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 362 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 
                                                    32,
                                                    38,
                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                    mem[ceil32(return_data.size) + 563 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                        0,
                                                        mem[ceil32(return_data.size) + 585 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[ceil32(return_data.size) + 489]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 
                                                        'SafeMath: addition overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 
                                                        'SafeMath: addition overflow',
                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                     arg2,
                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                     msg.sender,
                                                     arg1,
                else:
                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                    if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                        if not arg2:
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        else:
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                            if not ext_code.size(sub_1d7ec258Address):
                                revert with 0, 'Address: call to non-contract'
                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                            mem[416 len 4] = 0
                            call sub_1d7ec258Address with:
                                 gas gas_remaining wei
                                args Mask(224, 32, arg2) << 480, mem[388 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[402 len 14],
                                                0,
                                                mem[420 len 4]
                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                userInfo[arg1][msg.sender].field_0 += arg2
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[324]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 403 len 22]
                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                userInfo[arg1][msg.sender].field_0 += arg2
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 394 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        emit Deposit(arg2, msg.sender, arg1);
                    else:
                        require ext_code.size(poolInfo[arg1].field_0)
                        staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                        if not ext_code.size(poolInfo[arg1].field_0):
                            revert with 0, 'Address: call to non-contract'
                        if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 > ext_call.return_data[0]:
                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                            call poolInfo[arg1].field_0 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[580 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[566 len 14],
                                                        0,
                                                        mem[584 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[488]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 362 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 
                                                        32,
                                                        38,
                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                        mem[ceil32(return_data.size) + 563 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                        mem[ceil32(return_data.size) + 553 len 0] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    require return_data.size >= 32
                                    if not mem[292]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 371 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 362 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 
                                                        32,
                                                        38,
                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                        mem[ceil32(return_data.size) + 563 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                         arg2,
                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                         msg.sender,
                                                         arg1,
                        else:
                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                            mem[324 len 0] = 0
                            call poolInfo[arg1].field_0 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0xa9059cbb(?????), 
                                                msg.sender,
                                                (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[580 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args arg2, mem[392 len 60], mem[552 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[566 len 14],
                                                        0,
                                                        mem[584 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[488]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 558 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if not return_data.size:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 362 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 
                                                        32,
                                                        38,
                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                        mem[ceil32(return_data.size) + 563 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    require return_data.size >= 32
                                    if not mem[292]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 371 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 362 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 
                                                        32,
                                                        38,
                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                        mem[ceil32(return_data.size) + 563 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 
                                                            'SafeERC20: low-level call failed',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
        else:
            if not poolInfo[arg1].field_1280:
                poolInfo[arg1].field_256 = block.timestamp
                if not userInfo[arg1][msg.sender].field_0:
                    if not arg2:
                        require ext_code.size(sub_25087a55Address)
                        call sub_25087a55Address.0x40c10f19 with:
                             gas gas_remaining wei
                            args msg.sender, arg2
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                            revert with 0, 'SafeMath: addition overflow'
                        poolInfo[arg1].field_1536 += arg2
                        if not userInfo[arg1][msg.sender].field_0:
                            userInfo[arg1][msg.sender].field_256 = 0
                        else:
                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    else:
                        if eth.balance(this.address) < 0:
                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                        if not ext_code.size(sub_1d7ec258Address):
                            revert with 0, 'Address: call to non-contract'
                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                        mem[416 len 4] = 0
                        call sub_1d7ec258Address with:
                             gas gas_remaining wei
                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                revert with 0, 
                                            32,
                                            42,
                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[402 len 14],
                                            0,
                                            mem[420 len 4]
                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[arg1][msg.sender].field_0 += arg2
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        else:
                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                if return_data.size:
                                    revert with ext_call.return_data[0 len return_data.size]
                                revert with 0, 'SafeERC20: low-level call failed'
                            if return_data.size:
                                require return_data.size >= 32
                                if not mem[324]:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[ceil32(return_data.size) + 403 len 22]
                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                revert with 0, 'SafeMath: addition overflow'
                            userInfo[arg1][msg.sender].field_0 += arg2
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[ceil32(return_data.size) + 394 len 31]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                    emit Deposit(arg2, msg.sender, arg1);
                else:
                    if userInfo[arg1][msg.sender].field_0:
                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[416 len 4] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[402 len 14],
                                                    0,
                                                    mem[420 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[324]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 403 len 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 394 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            require ext_code.size(poolInfo[arg1].field_0)
                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                            if not ext_code.size(poolInfo[arg1].field_0):
                                revert with 0, 'Address: call to non-contract'
                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                call poolInfo[arg1].field_0 with:
                                   funct uint32(msg.sender)
                                     gas gas_remaining wei
                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), 
                                                    msg.sender,
                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[580 len 4] = 0
                                        mem[552 len 0] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[566 len 14],
                                                            0,
                                                            mem[584 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[488]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[292]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 371 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 362 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 
                                                        32,
                                                        38,
                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                        mem[ceil32(return_data.size) + 563 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), 
                                                            msg.sender,
                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                         arg2,
                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                         msg.sender,
                                                         arg1,
                            else:
                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                call poolInfo[arg1].field_0 with:
                                   funct uint32(msg.sender)
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[580 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[566 len 14],
                                                            0,
                                                            mem[584 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[488]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[292]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 371 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 362 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 
                                                        32,
                                                        38,
                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                        mem[ceil32(return_data.size) + 563 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                            0,
                                                            mem[ceil32(return_data.size) + 585 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[ceil32(return_data.size) + 489]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 
                                                            'SafeMath: addition overflow',
                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                         arg2,
                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                         msg.sender,
                                                         arg1,
                    else:
                        if userInfo[arg1][msg.sender].field_256 > 0:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not -userInfo[arg1][msg.sender].field_256:
                            if not arg2:
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                if not ext_code.size(sub_1d7ec258Address):
                                    revert with 0, 'Address: call to non-contract'
                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                mem[416 len 4] = 0
                                mem[388 len 0] = 0
                                call sub_1d7ec258Address with:
                                     gas gas_remaining wei
                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[402 len 14],
                                                    0,
                                                    mem[420 len 4]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if return_data.size:
                                        require return_data.size >= 32
                                        if not mem[324]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 403 len 22]
                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    userInfo[arg1][msg.sender].field_0 += arg2
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[ceil32(return_data.size) + 394 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            require ext_code.size(poolInfo[arg1].field_0)
                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                            if not ext_code.size(poolInfo[arg1].field_0):
                                revert with 0, 'Address: call to non-contract'
                            if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                call poolInfo[arg1].field_0 with:
                                   funct uint32(msg.sender)
                                     gas gas_remaining wei
                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[580 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[566 len 14],
                                                            0,
                                                            mem[584 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[488]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                             arg2,
                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                             msg.sender,
                                                             arg1,
                                    else:
                                        require return_data.size >= 32
                                        if not mem[292]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 371 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            mem[ceil32(return_data.size) + 553 len 0] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                            else:
                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                mem[324 len 0] = 0
                                call poolInfo[arg1].field_0 with:
                                   funct uint32(msg.sender)
                                     gas gas_remaining wei
                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[580 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args arg2, mem[392 len 60], mem[552 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[566 len 14],
                                                            0,
                                                            mem[584 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[488]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    if not ext_call.success:
                                        if return_data.size:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        revert with 0, 'SafeERC20: low-level call failed'
                                    if not return_data.size:
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        require return_data.size >= 32
                                        if not mem[292]:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[ceil32(return_data.size) + 371 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 
                                                                'SafeERC20: low-level call failed',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
            else:
                if poolInfo[arg1].field_2048 == poolInfo[arg1].field_1792:
                    poolInfo[arg1].field_256 = block.timestamp
                    if not userInfo[arg1][msg.sender].field_0:
                        if not arg2:
                            require ext_code.size(sub_25087a55Address)
                            call sub_25087a55Address.0x40c10f19 with:
                                 gas gas_remaining wei
                                args msg.sender, arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_1536 += arg2
                            if not userInfo[arg1][msg.sender].field_0:
                                userInfo[arg1][msg.sender].field_256 = 0
                            else:
                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        else:
                            if eth.balance(this.address) < 0:
                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                            if not ext_code.size(sub_1d7ec258Address):
                                revert with 0, 'Address: call to non-contract'
                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                            mem[416 len 4] = 0
                            call sub_1d7ec258Address with:
                                 gas gas_remaining wei
                                args Mask(224, 32, arg2) << 480, mem[388 len 4]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                    revert with 0, 
                                                32,
                                                42,
                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                mem[402 len 14],
                                                0,
                                                mem[420 len 4]
                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                userInfo[arg1][msg.sender].field_0 += arg2
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                            else:
                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    if return_data.size:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    revert with 0, 'SafeERC20: low-level call failed'
                                if return_data.size:
                                    require return_data.size >= 32
                                    if not mem[324]:
                                        revert with 0, 
                                                    32,
                                                    42,
                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                    mem[ceil32(return_data.size) + 403 len 22]
                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                    revert with 0, 'SafeMath: addition overflow'
                                userInfo[arg1][msg.sender].field_0 += arg2
                                require ext_code.size(sub_25087a55Address)
                                call sub_25087a55Address.0x40c10f19 with:
                                     gas gas_remaining wei
                                    args msg.sender, arg2
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_1536 += arg2
                                if not userInfo[arg1][msg.sender].field_0:
                                    userInfo[arg1][msg.sender].field_256 = 0
                                else:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[ceil32(return_data.size) + 394 len 31]
                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                        emit Deposit(arg2, msg.sender, arg1);
                    else:
                        if not userInfo[arg1][msg.sender].field_0:
                            if userInfo[arg1][msg.sender].field_256 > 0:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not -userInfo[arg1][msg.sender].field_256:
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[416 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                require ext_code.size(poolInfo[arg1].field_0)
                                staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                if not ext_code.size(poolInfo[arg1].field_0):
                                    revert with 0, 'Address: call to non-contract'
                                if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                    call poolInfo[arg1].field_0 with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[580 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                             arg2,
                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                             msg.sender,
                                                             arg1,
                                else:
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                    call poolInfo[arg1].field_0 with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[580 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                             arg2,
                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                             msg.sender,
                                                             arg1,
                        else:
                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                            32,
                                            33,
                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                            mem[197 len 31]
                            if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[416 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                require ext_code.size(poolInfo[arg1].field_0)
                                staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if eth.balance(this.address) < 0:
                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                if not ext_code.size(poolInfo[arg1].field_0):
                                    revert with 0, 'Address: call to non-contract'
                                if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                    call poolInfo[arg1].field_0 with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), 
                                                        msg.sender,
                                                        (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[580 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 
                                                            32,
                                                            38,
                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                            mem[ceil32(return_data.size) + 563 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                0,
                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[ceil32(return_data.size) + 489]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 
                                                                'SafeMath: addition overflow',
                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                             arg2,
                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                             msg.sender,
                                                             arg1,
                                else:
                                    mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                    call poolInfo[arg1].field_0 with:
                                       funct uint32(msg.sender)
                                         gas gas_remaining wei
                                        args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[580 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[566 len 14],
                                                                0,
                                                                mem[584 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[488]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 558 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if not return_data.size:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                mem[ceil32(return_data.size) + 553 len 0] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require return_data.size >= 32
                                            if not mem[292]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 371 len 22]
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 362 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 
                                                                32,
                                                                38,
                                                                0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                mem[ceil32(return_data.size) + 563 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[ceil32(return_data.size) + 581 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 567 len 14],
                                                                    0,
                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 558 len 23],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[ceil32(return_data.size) + 489]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 
                                                                    'SafeMath: addition overflow',
                                                                    mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                 arg2,
                                                                 mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                 msg.sender,
                                                                 arg1,
                else:
                    if poolInfo[arg1].field_256 > block.timestamp:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if not block.timestamp - poolInfo[arg1].field_256:
                        require arg1 < poolInfo.length
                        if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if 0 <= poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                            if poolInfo[arg1].field_1536 <= 0:
                                revert with 0, 'SafeMath: division by zero'
                            require poolInfo[arg1].field_1536
                            if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                revert with 0, 'SafeMath: addition overflow'
                            poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                            poolInfo[arg1].field_256 = block.timestamp
                            if not userInfo[arg1][msg.sender].field_0:
                                if not arg2:
                                    require ext_code.size(sub_25087a55Address)
                                    call sub_25087a55Address.0x40c10f19 with:
                                         gas gas_remaining wei
                                        args msg.sender, arg2
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                        revert with 0, 'SafeMath: addition overflow'
                                    poolInfo[arg1].field_1536 += arg2
                                    if not userInfo[arg1][msg.sender].field_0:
                                        userInfo[arg1][msg.sender].field_256 = 0
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                else:
                                    if eth.balance(this.address) < 0:
                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                    if not ext_code.size(sub_1d7ec258Address):
                                        revert with 0, 'Address: call to non-contract'
                                    mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                    mem[416 len 4] = 0
                                    call sub_1d7ec258Address with:
                                         gas gas_remaining wei
                                        args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                    if not return_data.size:
                                        if not ext_call.success:
                                            revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                        if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                            revert with 0, 
                                                        32,
                                                        42,
                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                        mem[402 len 14],
                                                        0,
                                                        mem[420 len 4]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                        if not ext_call.success:
                                            if return_data.size:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            revert with 0, 'SafeERC20: low-level call failed'
                                        if return_data.size:
                                            require return_data.size >= 32
                                            if not mem[324]:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[ceil32(return_data.size) + 403 len 22]
                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        userInfo[arg1][msg.sender].field_0 += arg2
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[ceil32(return_data.size) + 394 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if userInfo[arg1][msg.sender].field_0:
                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[416 len 4] = 0
                                            mem[388 len 0] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        require ext_code.size(poolInfo[arg1].field_0)
                                        staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if not ext_code.size(poolInfo[arg1].field_0):
                                            revert with 0, 'Address: call to non-contract'
                                        if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                            call poolInfo[arg1].field_0 with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), 
                                                                msg.sender,
                                                                (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[580 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeERC20: low-level call failed'
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), 
                                                                        msg.sender,
                                                                        (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeERC20: low-level call failed'
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                     arg2,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                                                     arg1,
                                        else:
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                            call poolInfo[arg1].field_0 with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[580 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeERC20: low-level call failed'
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeERC20: low-level call failed'
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                     arg2,
                                                                     mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                     msg.sender,
                                                                     arg1,
                                else:
                                    if userInfo[arg1][msg.sender].field_256 > 0:
                                        revert with 0, 'SafeMath: subtraction overflow'
                                    if not -userInfo[arg1][msg.sender].field_256:
                                        if not arg2:
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[197 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                            if not ext_code.size(sub_1d7ec258Address):
                                                revert with 0, 'Address: call to non-contract'
                                            mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                            mem[416 len 4] = 0
                                            call sub_1d7ec258Address with:
                                                 gas gas_remaining wei
                                                args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[402 len 14],
                                                                0,
                                                                mem[420 len 4]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[324]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 403 len 22]
                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[ceil32(return_data.size) + 394 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        require ext_code.size(poolInfo[arg1].field_0)
                                        staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                        if not ext_code.size(poolInfo[arg1].field_0):
                                            revert with 0, 'Address: call to non-contract'
                                        if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                            call poolInfo[arg1].field_0 with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[580 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeERC20: low-level call failed'
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if not return_data.size:
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        mem[ceil32(return_data.size) + 553 len 0] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                        else:
                                            mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                            mem[324 len 0] = 0
                                            call poolInfo[arg1].field_0 with:
                                               funct uint32(msg.sender)
                                                 gas gas_remaining wei
                                                args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                            if not return_data.size:
                                                if not ext_call.success:
                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                    revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[580 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args arg2, mem[392 len 60], mem[552 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[566 len 14],
                                                                        0,
                                                                        mem[584 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 'SafeERC20: low-level call failed'
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[488]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                if not ext_call.success:
                                                    if return_data.size:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                if return_data.size:
                                                    require return_data.size >= 32
                                                    if not mem[292]:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[ceil32(return_data.size) + 371 len 22]
                                                if not arg2:
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 362 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    if eth.balance(this.address) < 0:
                                                        revert with 0, 
                                                                    32,
                                                                    38,
                                                                    0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                    mem[ceil32(return_data.size) + 563 len 26]
                                                    if not ext_code.size(sub_1d7ec258Address):
                                                        revert with 0, 'Address: call to non-contract'
                                                    mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                    mem[ceil32(return_data.size) + 581 len 4] = 0
                                                    call sub_1d7ec258Address with:
                                                         gas gas_remaining wei
                                                        args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                    if not return_data.size:
                                                        if not ext_call.success:
                                                            revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                        if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 567 len 14],
                                                                        0,
                                                                        mem[ceil32(return_data.size) + 585 len 4]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 558 len 23],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                        if not ext_call.success:
                                                            if return_data.size:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            revert with 0, 
                                                                        'SafeERC20: low-level call failed',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if return_data.size:
                                                            require return_data.size >= 32
                                                            if not mem[ceil32(return_data.size) + 489]:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                        if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        userInfo[arg1][msg.sender].field_0 += arg2
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 
                                                                        'SafeMath: addition overflow',
                                                                        mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                        else:
                            if not poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                                poolInfo[arg1].field_256 = block.timestamp
                                if not userInfo[arg1][msg.sender].field_0:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[416 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if userInfo[arg1][msg.sender].field_0:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        mem[552 len 0] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                    else:
                                        if userInfo[arg1][msg.sender].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not -userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                mem[324 len 0] = 0
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[392 len 60], mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048 != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536
                                poolInfo[arg1].field_256 = block.timestamp
                                if not userInfo[arg1][msg.sender].field_0:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[416 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if not userInfo[arg1][msg.sender].field_0:
                                        if userInfo[arg1][msg.sender].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not -userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            mem[ceil32(return_data.size) + 553 len 0] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(arg2, msg.sender, arg1);
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                             arg2,
                                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                             msg.sender,
                                                                             arg1,
                    else:
                        if (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / block.timestamp - poolInfo[arg1].field_256 != poolInfo[arg1].field_1280:
                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                        32,
                                        33,
                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                        mem[197 len 31]
                        require arg1 < poolInfo.length
                        if poolInfo[arg1].field_2048 > poolInfo[arg1].field_1792:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) > poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                            if poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048:
                                if (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1792 - poolInfo[arg1].field_2048 != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if ((10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += (10^18 * poolInfo[arg1].field_1792) - (10^18 * poolInfo[arg1].field_2048) / poolInfo[arg1].field_1536
                                poolInfo[arg1].field_256 = block.timestamp
                                if not userInfo[arg1][msg.sender].field_0:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[416 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if userInfo[arg1][msg.sender].field_0:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            mem[ceil32(return_data.size) + 553 len 0] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(arg2, msg.sender, arg1);
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                             arg2,
                                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                             msg.sender,
                                                                             arg1,
                                    else:
                                        if userInfo[arg1][msg.sender].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not -userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if -userInfo[arg1][msg.sender].field_256 > ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(arg2, msg.sender, arg1);
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                             arg2,
                                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                             msg.sender,
                                                                             arg1,
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            mem[ceil32(return_data.size) + 553 len 0] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                                poolInfo[arg1].field_256 = block.timestamp
                                if not userInfo[arg1][msg.sender].field_0:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[416 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if not userInfo[arg1][msg.sender].field_0:
                                        if userInfo[arg1][msg.sender].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not -userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(arg2, msg.sender, arg1);
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                             arg2,
                                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                             msg.sender,
                                                                             arg1,
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            mem[ceil32(return_data.size) + 553 len 0] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 > ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            mem[ceil32(return_data.size) + 553 len 0] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(arg2, msg.sender, arg1);
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                                emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                             arg2,
                                                                             mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                             msg.sender,
                                                                             arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                                mem[324 len 0] = 0
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[392 len 60], mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                        else:
                            if not (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280):
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if (0 / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += 0 / poolInfo[arg1].field_1536
                                poolInfo[arg1].field_256 = block.timestamp
                                if not userInfo[arg1][msg.sender].field_0:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[416 len 4] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if userInfo[arg1][msg.sender].field_0:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                    else:
                                        if userInfo[arg1][msg.sender].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not -userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                mem[388 len 0] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if -userInfo[arg1][msg.sender].field_256 > ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                                mem[324 len 0] = 0
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[392 len 60], mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 
                                                                                'SafeERC20: low-level call failed',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                            else:
                                if (10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / (block.timestamp * poolInfo[arg1].field_1280) - (poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) != 10^18:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                33,
                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                mem[197 len 31]
                                if poolInfo[arg1].field_1536 <= 0:
                                    revert with 0, 'SafeMath: division by zero'
                                require poolInfo[arg1].field_1536
                                if ((10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536) + poolInfo[arg1].field_512 < poolInfo[arg1].field_512:
                                    revert with 0, 'SafeMath: addition overflow'
                                poolInfo[arg1].field_512 += (10^18 * block.timestamp * poolInfo[arg1].field_1280) - (10^18 * poolInfo[arg1].field_256 * poolInfo[arg1].field_1280) / poolInfo[arg1].field_1536
                                poolInfo[arg1].field_256 = block.timestamp
                                if not userInfo[arg1][msg.sender].field_0:
                                    if not arg2:
                                        require ext_code.size(sub_25087a55Address)
                                        call sub_25087a55Address.0x40c10f19 with:
                                             gas gas_remaining wei
                                            args msg.sender, arg2
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                            revert with 0, 'SafeMath: addition overflow'
                                        poolInfo[arg1].field_1536 += arg2
                                        if not userInfo[arg1][msg.sender].field_0:
                                            userInfo[arg1][msg.sender].field_256 = 0
                                        else:
                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    else:
                                        if eth.balance(this.address) < 0:
                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                        if not ext_code.size(sub_1d7ec258Address):
                                            revert with 0, 'Address: call to non-contract'
                                        mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                        mem[416 len 4] = 0
                                        mem[388 len 0] = 0
                                        call sub_1d7ec258Address with:
                                             gas gas_remaining wei
                                            args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                        if not return_data.size:
                                            if not ext_call.success:
                                                revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                            if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                revert with 0, 
                                                            32,
                                                            42,
                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                            mem[402 len 14],
                                                            0,
                                                            mem[420 len 4]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                        else:
                                            mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                            if not ext_call.success:
                                                if return_data.size:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                revert with 0, 'SafeERC20: low-level call failed'
                                            if return_data.size:
                                                require return_data.size >= 32
                                                if not mem[324]:
                                                    revert with 0, 
                                                                32,
                                                                42,
                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                mem[ceil32(return_data.size) + 403 len 22]
                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            userInfo[arg1][msg.sender].field_0 += arg2
                                            require ext_code.size(sub_25087a55Address)
                                            call sub_25087a55Address.0x40c10f19 with:
                                                 gas gas_remaining wei
                                                args msg.sender, arg2
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                revert with 0, 'SafeMath: addition overflow'
                                            poolInfo[arg1].field_1536 += arg2
                                            if not userInfo[arg1][msg.sender].field_0:
                                                userInfo[arg1][msg.sender].field_256 = 0
                                            else:
                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                    revert with 0, 
                                                                32,
                                                                33,
                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                mem[ceil32(return_data.size) + 394 len 31]
                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                    emit Deposit(arg2, msg.sender, arg1);
                                else:
                                    if not userInfo[arg1][msg.sender].field_0:
                                        if userInfo[arg1][msg.sender].field_256 > 0:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not -userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if -userInfo[arg1][msg.sender].field_256 <= ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, -userInfo[arg1][msg.sender].field_256) >> 32
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, -userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, -userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                mem[324 len 0] = 0
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[392 len 60], mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
                                    else:
                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if userInfo[arg1][msg.sender].field_256 > poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18:
                                            revert with 0, 'SafeMath: subtraction overflow'
                                        if not (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256:
                                            if not arg2:
                                                require ext_code.size(sub_25087a55Address)
                                                call sub_25087a55Address.0x40c10f19 with:
                                                     gas gas_remaining wei
                                                    args msg.sender, arg2
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                    revert with 0, 'SafeMath: addition overflow'
                                                poolInfo[arg1].field_1536 += arg2
                                                if not userInfo[arg1][msg.sender].field_0:
                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                else:
                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                    32,
                                                                    33,
                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                    mem[197 len 31]
                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            else:
                                                if eth.balance(this.address) < 0:
                                                    revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[398 len 26]
                                                if not ext_code.size(sub_1d7ec258Address):
                                                    revert with 0, 'Address: call to non-contract'
                                                mem[292 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                mem[416 len 4] = 0
                                                call sub_1d7ec258Address with:
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, arg2) << 480, mem[388 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2
                                                    if not unknown_0x23b872dd(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 
                                                                    32,
                                                                    42,
                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                    mem[402 len 14],
                                                                    0,
                                                                    mem[420 len 4]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[393 len 23], 0, mem[420 len 4]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[324 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[324]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 403 len 22]
                                                    if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    userInfo[arg1][msg.sender].field_0 += arg2
                                                    require ext_code.size(sub_25087a55Address)
                                                    call sub_25087a55Address.0x40c10f19 with:
                                                         gas gas_remaining wei
                                                        args msg.sender, arg2
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    poolInfo[arg1].field_1536 += arg2
                                                    if not userInfo[arg1][msg.sender].field_0:
                                                        userInfo[arg1][msg.sender].field_256 = 0
                                                    else:
                                                        if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                            revert with 0, 
                                                                        32,
                                                                        33,
                                                                        0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[ceil32(return_data.size) + 394 len 31]
                                                        userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                            emit Deposit(arg2, msg.sender, arg1);
                                        else:
                                            require ext_code.size(poolInfo[arg1].field_0)
                                            staticcall poolInfo[arg1].field_0.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if eth.balance(this.address) < 0:
                                                revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[366 len 26]
                                            if not ext_code.size(poolInfo[arg1].field_0):
                                                revert with 0, 'Address: call to non-contract'
                                            if (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256 > ext_call.return_data[0]:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0 len 28]
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(480, -256, ext_call.return_data[0 len 28]) << 256, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    emit Deposit(arg2, msg.sender, arg1);
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if return_data.size:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 
                                                                            32,
                                                                            33,
                                                                            0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                            mem[ceil32(return_data.size) + 362 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        emit Deposit(arg2, msg.sender, arg1);
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 
                                                                        32,
                                                                        38,
                                                                        0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                        mem[ceil32(return_data.size) + 563 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[ceil32(return_data.size) + 457 len 96] = unknown_0x23b872dd(?????), msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[ceil32(return_data.size) + 581 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args Mask(224, 32, arg2) << 480, mem[ceil32(return_data.size) + 553 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), msg.sender, ext_call.return_data[0]
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[ceil32(return_data.size) + 567 len 14],
                                                                            0,
                                                                            mem[ceil32(return_data.size) + 585 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 23],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(arg2, msg.sender, arg1);
                                                        else:
                                                            mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[ceil32(return_data.size) + 489]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 
                                                                            'SafeMath: addition overflow',
                                                                            mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            emit Deposit(address rg1, uint256 rg2, uint256 rg3):
                                                                         arg2,
                                                                         mem[(2 * ceil32(return_data.size)) + 490 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))],
                                                                         msg.sender,
                                                                         arg1,
                                            else:
                                                mem[260 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) >> 32
                                                mem[324 len 0] = 0
                                                call poolInfo[arg1].field_0 with:
                                                   funct uint32(msg.sender)
                                                     gas gas_remaining wei
                                                    args Mask(224, 32, (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256) << 224, mem[324 len 4]
                                                if not return_data.size:
                                                    if not ext_call.success:
                                                        revert with unknown_0xa9059cbb(?????), 
                                                                    msg.sender,
                                                                    (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                    if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                        revert with 0, 32, 42, 0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565, mem[370 len 22]
                                                    if not arg2:
                                                        require ext_code.size(sub_25087a55Address)
                                                        call sub_25087a55Address.0x40c10f19 with:
                                                             gas gas_remaining wei
                                                            args msg.sender, arg2
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                            revert with 0, 'SafeMath: addition overflow'
                                                        poolInfo[arg1].field_1536 += arg2
                                                        if not userInfo[arg1][msg.sender].field_0:
                                                            userInfo[arg1][msg.sender].field_256 = 0
                                                        else:
                                                            if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[361 len 31]
                                                            userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        if eth.balance(this.address) < 0:
                                                            revert with 0, 32, 38, 0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c, mem[562 len 26]
                                                        if not ext_code.size(sub_1d7ec258Address):
                                                            revert with 0, 'Address: call to non-contract'
                                                        mem[456 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                        mem[580 len 4] = 0
                                                        call sub_1d7ec258Address with:
                                                             gas gas_remaining wei
                                                            args arg2, mem[392 len 60], mem[552 len 4]
                                                        if not return_data.size:
                                                            if not ext_call.success:
                                                                revert with unknown_0xa9059cbb(?????), 
                                                                            msg.sender,
                                                                            (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                            if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                revert with 0, 
                                                                            32,
                                                                            42,
                                                                            0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                            mem[566 len 14],
                                                                            0,
                                                                            mem[584 len 4]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 32, 33, 0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[557 len 23], 0, mem[584 len 4]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            mem[488 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                if return_data.size:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                revert with 0, 'SafeERC20: low-level call failed'
                                                            if return_data.size:
                                                                require return_data.size >= 32
                                                                if not mem[488]:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 22]
                                                            if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            userInfo[arg1][msg.sender].field_0 += arg2
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 558 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                else:
                                                    mem[292 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                    if not ext_call.success:
                                                        if return_data.size:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        revert with 0, 'SafeERC20: low-level call failed'
                                                    if not return_data.size:
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), 
                                                                                msg.sender,
                                                                                (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 'SafeERC20: low-level call failed'
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                    else:
                                                        require return_data.size >= 32
                                                        if not mem[292]:
                                                            revert with 0, 
                                                                        32,
                                                                        42,
                                                                        0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                        mem[ceil32(return_data.size) + 371 len 22]
                                                        if not arg2:
                                                            require ext_code.size(sub_25087a55Address)
                                                            call sub_25087a55Address.0x40c10f19 with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, arg2
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            poolInfo[arg1].field_1536 += arg2
                                                            if not userInfo[arg1][msg.sender].field_0:
                                                                userInfo[arg1][msg.sender].field_256 = 0
                                                            else:
                                                                if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                    revert with 0, 
                                                                                32,
                                                                                33,
                                                                                0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[ceil32(return_data.size) + 362 len 31]
                                                                userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                        else:
                                                            if eth.balance(this.address) < 0:
                                                                revert with 0, 
                                                                            32,
                                                                            38,
                                                                            0x73416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c,
                                                                            mem[ceil32(return_data.size) + 563 len 26]
                                                            if not ext_code.size(sub_1d7ec258Address):
                                                                revert with 0, 'Address: call to non-contract'
                                                            mem[ceil32(return_data.size) + 457 len 96] = 0, msg.sender, address(this.address), Mask(224, 32, arg2) >> 32
                                                            mem[ceil32(return_data.size) + 581 len 4] = 0
                                                            call sub_1d7ec258Address with:
                                                                 gas gas_remaining wei
                                                                args arg2, mem[ceil32(return_data.size) + 393 len 60], mem[ceil32(return_data.size) + 553 len 4]
                                                            if not return_data.size:
                                                                if not ext_call.success:
                                                                    revert with unknown_0xa9059cbb(?????), 
                                                                                msg.sender,
                                                                                (poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18) - userInfo[arg1][msg.sender].field_256
                                                                if not unknown_0xa9059cbb(?????), Mask(224, 32, msg.sender) >> 32:
                                                                    revert with 0, 
                                                                                32,
                                                                                42,
                                                                                0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                mem[ceil32(return_data.size) + 567 len 14],
                                                                                0,
                                                                                mem[ceil32(return_data.size) + 585 len 4]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 'SafeMath: addition overflow'
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[ceil32(return_data.size) + 558 len 23],
                                                                                    0,
                                                                                    mem[ceil32(return_data.size) + 585 len 4]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                            else:
                                                                mem[ceil32(return_data.size) + 489 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    if return_data.size:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    revert with 0, 
                                                                                'SafeERC20: low-level call failed',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if return_data.size:
                                                                    require return_data.size >= 32
                                                                    if not mem[ceil32(return_data.size) + 489]:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    42,
                                                                                    0x725361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                                                                    mem[(2 * ceil32(return_data.size)) + 568 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 22]
                                                                if arg2 + userInfo[arg1][msg.sender].field_0 < userInfo[arg1][msg.sender].field_0:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                userInfo[arg1][msg.sender].field_0 += arg2
                                                                require ext_code.size(sub_25087a55Address)
                                                                call sub_25087a55Address.0x40c10f19 with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, arg2, mem[(2 * ceil32(return_data.size)) + 526 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                if arg2 + poolInfo[arg1].field_1536 < poolInfo[arg1].field_1536:
                                                                    revert with 0, 
                                                                                'SafeMath: addition overflow',
                                                                                mem[(2 * ceil32(return_data.size)) + 558 len (2 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                                                                poolInfo[arg1].field_1536 += arg2
                                                                if not userInfo[arg1][msg.sender].field_0:
                                                                    userInfo[arg1][msg.sender].field_256 = 0
                                                                else:
                                                                    if poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / userInfo[arg1][msg.sender].field_0 != poolInfo[arg1].field_512:
                                                                        revert with 0, 
                                                                                    32,
                                                                                    33,
                                                                                    0x6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[(2 * ceil32(return_data.size)) + 559 len (2 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 31]
                                                                    userInfo[arg1][msg.sender].field_256 = poolInfo[arg1].field_512 * userInfo[arg1][msg.sender].field_0 / 10^18
                                                emit Deposit(arg2, msg.sender, arg1);
    stor1 = 1
}



}
