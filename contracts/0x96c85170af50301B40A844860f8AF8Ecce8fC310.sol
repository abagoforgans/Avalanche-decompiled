contract main {




// =====================  Runtime code  =====================


#
#  - sub_19217b58(?)
#  - transferFrom(address arg1, address arg2, uint256 arg3)
#  - cashoutAll()
#  - cashoutReward(uint256 arg1)
#  - sub_7197fc9e(?)
#  - sub_ef34ded9(?)
#  - sub_f8b85ec3(?)
#
uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
array of struct stor1;
array of uint256 stor2;
array of uint256 stor3;
array of uint256 stor4;
array of uint256 stor5;
array of struct stor6;
array of struct stor101;
array of struct stor102;
mapping of address ownerOf;
mapping of uint256 balanceOf;
mapping of address approved;
mapping of uint8 stor106;
mapping of uint256 tokenOfOwnerByIndex;
mapping of uint256 stor152;
array of uint256 tokenByIndex;
mapping of uint256 stor154;
uint8 paused;
address owner;
uint256 stor401;
address sub_4d1c3621Address;
address liquidityPoolManagerImplementationAddress;
mapping of struct stor552;
array of struct stor553;
uint256 stor554;
uint256 stor555;
uint256 stor556;
uint256 sub_e6ae99e6;
uint256 sub_20e51fd9;
uint256 sub_22451834;
uint256 sub_39807f8d;
uint256 sub_1fdb4c5f;
uint256 sub_8783b90d;
uint256 sub_babf971c;
uint256 creationMinPrice;
uint256 sub_8a0bbae4;
uint256 sub_8a99d6ef;
uint256 sub_3e1fddb9;
uint256 sub_2f0da35d;
uint256 sub_9a1172c9;
uint256 sub_43348e23;
uint256 totalValueLocked;
array of uint256 stor51848699043762354786445001410105671568266765734117956169291548475795829136640;

function getApproved(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approved query for nonexistent token'
    return approved[arg1]
}

function totalSupply() payable {
    return tokenByIndex.length
}

function sub_1fdb4c5f(?) payable {
    return sub_1fdb4c5f
}

function sub_20e51fd9(?) payable {
    return sub_20e51fd9
}

function creationMinPrice() payable {
    return creationMinPrice
}

function sub_22451834(?) payable {
    return sub_22451834
}

function sub_2f0da35d(?) payable {
    return sub_2f0da35d
}

function tokenOfOwnerByIndex(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    if arg2 >= balanceOf[address(arg1)]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: owner index out of bounds'
    return tokenOfOwnerByIndex[address(arg1)][arg2]
}

function sub_39807f8d(?) payable {
    return sub_39807f8d
}

function sub_3e1fddb9(?) payable {
    return sub_3e1fddb9
}

function sub_43348e23(?) payable {
    return sub_43348e23
}

function sub_4d1c3621(?) payable {
    return sub_4d1c3621Address
}

function tokenByIndex(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 >= tokenByIndex.length:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721Enumerable: global index out of bounds'
    return tokenByIndex[arg1]
}

function paused() payable {
    return bool(paused)
}

function ownerOf(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if not ownerOf[arg1]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    return ownerOf[arg1]
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    return balanceOf[address(arg1)]
}

function sub_8783b90d(?) payable {
    return sub_8783b90d
}

function sub_8a0bbae4(?) payable {
    return sub_8a0bbae4
}

function sub_8a99d6ef(?) payable {
    return sub_8a99d6ef
}

function owner() payable {
    return owner
}

function sub_9a1172c9(?) payable {
    return sub_9a1172c9
}

function sub_babf971c(?) payable {
    return sub_babf971c
}

function getLiquidityPoolManagerImplementation() payable {
    return liquidityPoolManagerImplementationAddress
}

function sub_e6ae99e6(?) payable {
    return sub_e6ae99e6
}

function isApprovedForAll(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    return bool(stor106[address(arg1)][address(arg2)])
}

function totalValueLocked() payable {
    return totalValueLocked
}

function _fallback() payable {
    revert
}

function sub_cfa4a5bf(?) payable {
    return stor554, stor555, stor556
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function pause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if paused:
        revert with 0, 'Pausable: paused'
    paused = 1
    emit Paused(msg.sender);
}

function unpause() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not paused:
        revert with 0, 'Pausable: not paused'
    paused = 0
    emit Unpaused(msg.sender);
}

function recoverLostAVAX() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call owner with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setApprovalForAll(address arg1, bool arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if msg.sender == arg1:
        revert with 0, 'ERC721: approve to caller'
    stor106[address(msg.sender)][address(arg1)] = uint8(arg2)
    emit ApprovalForAll(arg2, msg.sender, arg1);
}

function sub_b34e6e9f(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 5000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Troops: Maximum fee percent to create a Troop must not be larger than 50'
    sub_8a0bbae4 = arg1
}

function changeNodeMinPrice(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Troops: Minimum price to create a Troop must be above 0'
    creationMinPrice = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function sub_59cd8843(?) payable {
    require calldata.size - 4 >= 64
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: rewardPerDay must be greater than 0'
    if arg2 <= 0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: rewardPerDay must be greater than 0'
    sub_e6ae99e6 = arg1
    sub_20e51fd9 = arg2
}

function sub_698bcd8e(?) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_e6ae99e6 > arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade for Gladiator is invalid'
    if arg1 > sub_20e51fd9:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade for Gladiator is invalid'
    sub_babf971c = arg1
}

function sub_9ebf906a(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(address(arg1)):
        if address(arg1):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'Army: You can only set 0x0 or a contract address as a new implementation'
    sub_4d1c3621Address = address(arg1)
    emit 0xa3e8afe8: sub_4d1c3621Address, address(arg1)
}

function recoverLostTokens(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call arg1.transfer(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg2), arg3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x780e9d6300000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x80ac58cd00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    if 0x5b5e139f00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (Mask(32, 224, arg1) == 0x1ffc9a700000000000000000000000000000000000000000000000000000000)
}

function changeLiquidityPoolManagerImplementation(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not ext_code.size(arg1):
        if arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'LiquidityPoolManagerUpgradeable: You can only set 0x0 or a contract address as a new implementation'
    liquidityPoolManagerImplementationAddress = arg1
    emit UpdateLiquidityPoolManager(liquidityPoolManagerImplementationAddress, arg1);
}

function sub_82d0dcf8(?) payable {
    require calldata.size - 4 >= 128
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 >= arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    if arg2 >= arg3:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    if arg3 >= arg4:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Troops: Reward grade timestamp order is invalid'
    sub_22451834 = arg1
    sub_39807f8d = arg2
    sub_1fdb4c5f = arg3
    sub_8783b90d = arg4
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    if arg1 == ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: approval to current owner'
    if ownerOf[arg2] != msg.sender:
        if not stor106[stor103[arg2]][address(msg.sender)]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        'ERC721: approve caller is not owner nor approved for all'
    approved[arg2] = arg1
    if not ownerOf[arg2]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: owner query for nonexistent token'
    emit Approval(ownerOf[arg2], arg1, arg2);
}

function sub_0933ca9f(?) payable {
    require calldata.size - 4 >= 160
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 10000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cashout fee can never exceed 100%'
    if arg2 > 10000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cashout fee can never exceed 100%'
    if arg3 > 10000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cashout fee can never exceed 100%'
    if arg4 > 10000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cashout fee can never exceed 100%'
    if arg5 > 10000:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Cashout fee can never exceed 100%'
    sub_8a99d6ef = arg1
    sub_3e1fddb9 = arg2
    sub_2f0da35d = arg3
    sub_9a1172c9 = arg4
    sub_43348e23 = arg5
}

function initialize() payable {
    if uint8(stor0.field_8):
        if ext_code.size(this.address):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    else:
        if uint8(stor0.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
    if not uint8(stor0.field_8):
        uint16(stor0.field_0) = 257
        revert with 0, 'Initializable: contract is not initializing'
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 14
        Mask(112, 0, stor101.length.field_144) = Mask(112, 0, 'Army Ecosystem')
        idx = 0
        while (uint255(stor101.length) * 0.5) + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
            revert with 0, 34
        bool(stor101.length) = 0
        uint255(stor101.length.field_1) = 14
        Mask(112, 0, stor101.length.field_144) = Mask(112, 0, 'Army Ecosystem')
        idx = 0
        while stor101.length.field_1 % 128 + 31 / 32 > idx:
            stor101[idx].field_0 = 0
            idx = idx + 1
            continue 
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 5
        stor102.length.field_216 % 1099511627776 = 362158182224
        idx = 0
        while (uint255(stor102.length) * 0.5) + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    else:
        if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
            revert with 0, 34
        bool(stor102.length) = 0
        uint255(stor102.length.field_1) = 5
        stor102.length.field_216 % 1099511627776 = 362158182224
        idx = 0
        while stor102.length.field_1 % 128 + 31 / 32 > idx:
            stor102[idx].field_0 = 0
            idx = idx + 1
            continue 
    if not uint8(stor0.field_8):
        revert with 0, 'Initializable: contract is not initializing'
    owner = msg.sender
    emit OwnershipTransferred(owner, msg.sender);
    stor401 = 1
    paused = 0
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_e6ae99e6 = 28935
    sub_20e51fd9 = 46299
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if sub_e6ae99e6 > 40509:
        revert with 0, 'Troops: Reward grade for Gladiator is invalid'
    if 40509 > sub_20e51fd9:
        revert with 0, 'Troops: Reward grade for Gladiator is invalid'
    sub_babf971c = 40509
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_22451834 = 72 * 24 * 3600
    sub_39807f8d = 168 * 24 * 3600
    sub_1fdb4c5f = 720 * 24 * 3600
    sub_8783b90d = 240 * 10^6 * 24 * 3600
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    creationMinPrice = 20000 * 10^18
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8a0bbae4 = 3000
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_8a99d6ef = 5000
    sub_3e1fddb9 = 4500
    sub_2f0da35d = 4000
    sub_9a1172c9 = 3000
    sub_43348e23 = 3000
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function name() payable {
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor101.length):
            if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor101.length):
                if 31 < uint255(stor101.length) * 0.5:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor101.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        else:
            if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor101.length.field_1 % 128:
                if 31 < stor101.length.field_1 % 128:
                    mem[128] = uint256(stor101.field_0)
                    idx = 128
                    s = 0
                    while stor101.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor101[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
        mem[ceil32(uint255(stor101.length) * 0.5) + 192 len ceil32(uint255(stor101.length) * 0.5)] = mem[128 len ceil32(uint255(stor101.length) * 0.5)]
        if ceil32(uint255(stor101.length) * 0.5) > uint255(stor101.length) * 0.5:
            mem[(uint255(stor101.length) * 0.5) + ceil32(uint255(stor101.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor101.length), data=mem[128 len ceil32(uint255(stor101.length) * 0.5)], mem[(2 * ceil32(uint255(stor101.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor101.length) * 0.5)]), 
    if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor101.length):
        if bool(stor101.length) == uint255(stor101.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor101.length):
            if 31 < uint255(stor101.length) * 0.5:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while (uint255(stor101.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    else:
        if bool(stor101.length) == stor101.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor101.length.field_1 % 128:
            if 31 < stor101.length.field_1 % 128:
                mem[128] = uint256(stor101.field_0)
                idx = 128
                s = 0
                while stor101.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor101[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor101.length.field_8)
    mem[ceil32(stor101.length.field_1 % 128) + 192 len ceil32(stor101.length.field_1 % 128)] = mem[128 len ceil32(stor101.length.field_1 % 128)]
    if ceil32(stor101.length.field_1 % 128) > stor101.length.field_1 % 128:
        mem[stor101.length.field_1 % 128 + ceil32(stor101.length.field_1 % 128) + 192] = 0
    return Array(len=stor101.length % 128, data=mem[128 len ceil32(stor101.length.field_1 % 128)], mem[(2 * ceil32(stor101.length.field_1 % 128)) + 192 len 2 * ceil32(stor101.length.field_1 % 128)]), 
}

function symbol() payable {
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor102.length):
            if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor102.length):
                if 31 < uint255(stor102.length) * 0.5:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor102.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        else:
            if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
                revert with 0, 34
            if stor102.length.field_1 % 128:
                if 31 < stor102.length.field_1 % 128:
                    mem[128] = uint256(stor102.field_0)
                    idx = 128
                    s = 0
                    while stor102.length.field_1 % 128 + 96 > idx:
                        mem[idx + 32] = stor102[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)])
                mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
        mem[ceil32(uint255(stor102.length) * 0.5) + 192 len ceil32(uint255(stor102.length) * 0.5)] = mem[128 len ceil32(uint255(stor102.length) * 0.5)]
        if ceil32(uint255(stor102.length) * 0.5) > uint255(stor102.length) * 0.5:
            mem[(uint255(stor102.length) * 0.5) + ceil32(uint255(stor102.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor102.length), data=mem[128 len ceil32(uint255(stor102.length) * 0.5)], mem[(2 * ceil32(uint255(stor102.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor102.length) * 0.5)]), 
    if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
        revert with 0, 34
    if bool(stor102.length):
        if bool(stor102.length) == uint255(stor102.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor102.length):
            if 31 < uint255(stor102.length) * 0.5:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while (uint255(stor102.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    else:
        if bool(stor102.length) == stor102.length.field_1 % 128 < 32:
            revert with 0, 34
        if stor102.length.field_1 % 128:
            if 31 < stor102.length.field_1 % 128:
                mem[128] = uint256(stor102.field_0)
                idx = 128
                s = 0
                while stor102.length.field_1 % 128 + 96 > idx:
                    mem[idx + 32] = stor102[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)])
            mem[128] = 256 * Mask(248, 0, stor102.length.field_8)
    mem[ceil32(stor102.length.field_1 % 128) + 192 len ceil32(stor102.length.field_1 % 128)] = mem[128 len ceil32(stor102.length.field_1 % 128)]
    if ceil32(stor102.length.field_1 % 128) > stor102.length.field_1 % 128:
        mem[stor102.length.field_1 % 128 + ceil32(stor102.length.field_1 % 128) + 192] = 0
    return Array(len=stor102.length % 128, data=mem[128 len ceil32(stor102.length.field_1 % 128)], mem[(2 * ceil32(stor102.length.field_1 % 128)) + 192 len 2 * ceil32(stor102.length.field_1 % 128)]), 
}

function calculateTotalDailyEmission() payable {
    if sub_babf971c and 24 * 3600 > -1 / sub_babf971c:
        revert with 0, 17
    if 24 * 3600 * sub_babf971c and stor556 > -1 / 24 * 3600 * sub_babf971c:
        revert with 0, 17
    if not stor553.length:
        return (24 * 3600 * sub_babf971c * stor556 / 10^11)
    if stor553.length < 1:
        revert with 0, 17
    if stor553.length - 1 >= stor553.length:
        revert with 0, 50
    if stor553[stor553.length - 1].field_256 > block.timestamp:
        return (24 * 3600 * sub_babf971c * stor556 / 10^11)
    if sub_20e51fd9 and 24 * 3600 > -1 / sub_20e51fd9:
        revert with 0, 17
    if 24 * 3600 * sub_20e51fd9 and stor555 > -1 / 24 * 3600 * sub_20e51fd9:
        revert with 0, 17
    if 24 * 3600 * sub_babf971c * stor556 > !(24 * 3600 * sub_20e51fd9 * stor555):
        revert with 0, 17
    idx = stor554
    while idx < stor553.length:
        mem[0] = 553
        if stor553[idx].field_256 != 0:
            if stor553[idx].field_256 > -7776001:
                revert with 0, 17
            if stor553[idx].field_256 + (2160 * 24 * 3600) <= block.timestamp:
                if sub_20e51fd9 and 24 * 3600 > -1 / sub_20e51fd9:
                    revert with 0, 17
                if 24 * 3600 * sub_20e51fd9 and stor553[idx].field_0 > -1 / 24 * 3600 * sub_20e51fd9:
                    revert with 0, 17
                if (24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !(24 * 3600 * sub_20e51fd9 * stor553[idx].field_0):
                    revert with 0, 17
            else:
                if block.timestamp > -86401:
                    revert with 0, 17
                if stor553[idx].field_256 > -7776001:
                    revert with 0, 17
                if stor553[idx].field_256 > -7776001:
                    revert with 0, 17
                if stor553[idx].field_256 + (2160 * 24 * 3600) < block.timestamp:
                    revert with 0, 17
                if stor553[idx].field_256 + (2160 * 24 * 3600) <= block.timestamp + (24 * 3600):
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if 24 * 3600 < stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600):
                        revert with 0, 17
                    if sub_20e51fd9 and -stor553[idx].field_256 + block.timestamp - (2136 * 24 * 3600) > -1 / sub_20e51fd9:
                        revert with 0, 17
                    if sub_20e51fd9 > !(sub_20e51fd9 - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)):
                        revert with 0, 17
                    if (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600):
                        revert with 0, 17
                    if (2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 > !((-7689600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9)):
                        revert with 0, 17
                    if ((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2) - (2136 * 24 * 3600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9) and stor553[idx].field_0 > -1 / ((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2) - (2136 * 24 * 3600 * sub_20e51fd9) - (stor553[idx].field_256 * sub_20e51fd9) + (block.timestamp * sub_20e51fd9):
                        revert with 0, 17
                    if (24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !(((2 * 2160 * 24 * 3600 * sub_20e51fd9) + (2 * stor553[idx].field_256 * sub_20e51fd9) + (2 * -1 * block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (stor553[idx].field_256 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) + (block.timestamp * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 * stor553[idx].field_0) - (2136 * 24 * 3600 * sub_20e51fd9 * stor553[idx].field_0) - (stor553[idx].field_256 * sub_20e51fd9 * stor553[idx].field_0) + (block.timestamp * sub_20e51fd9 * stor553[idx].field_0)):
                        revert with 0, 17
                else:
                    if stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) < 24 * 3600:
                        revert with 0, 17
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2136 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if stor553[idx].field_256 + -block.timestamp + (2136 * 24 * 3600) > -86401:
                        revert with 0, 17
                    if sub_20e51fd9 < sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 - sub_e6ae99e6 and stor553[idx].field_256 + -block.timestamp + (2160 * 24 * 3600) > -1 / sub_20e51fd9 - sub_e6ae99e6:
                        revert with 0, 17
                    if sub_20e51fd9 < (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600:
                        revert with 0, 17
                    if sub_20e51fd9 - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) > !(sub_20e51fd9 - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)):
                        revert with 0, 17
                    if (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) and 24 * 3600 > -1 / (2 * sub_20e51fd9) - ((2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - ((2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600):
                        revert with 0, 17
                    if Mask(255, 1, (48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600)) and stor553[idx].field_0 > -1 / (48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2:
                        revert with 0, 17
                    if (24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) > !((48 * 24 * 3600 * sub_20e51fd9) - (24 * 3600 * (2160 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2160 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) - (24 * 3600 * (2136 * 24 * 3600 * sub_20e51fd9) + (stor553[idx].field_256 * sub_20e51fd9) - (block.timestamp * sub_20e51fd9) - (2136 * 24 * 3600 * sub_e6ae99e6) - (stor553[idx].field_256 * sub_e6ae99e6) + (block.timestamp * sub_e6ae99e6) / 2160 * 24 * 3600) / 2 * stor553[idx].field_0):
                        revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
    return ((24 * 3600 * sub_babf971c * stor556) + (24 * 3600 * sub_20e51fd9 * stor555) / 10^11)
}

function sub_0e127233(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'ERC721: balance query for the zero address'
    mem[0] = address(arg1)
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[96] = balanceOf[address(arg1)]
    mem[64] = (32 * balanceOf[address(arg1)]) + 128
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _166 = mem[64]
            mem[64] = mem[64] + 256
            mem[_166] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _173 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_173] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_173 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_173 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _173 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _173 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_173 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_173 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _173 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _173 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_166 + 32] = _173
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _175 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_175] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_175 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_175 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _175 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _175 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_175 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_175 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _175 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _175 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_166 + 32] = _175
            mem[_166 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_166 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_166 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_166 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_166 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_166 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[128 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not address(arg1):
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _169 = mem[64]
            mem[64] = mem[64] + 256
            mem[_169] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _174 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_174] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_174 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_174 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _174 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _174 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_174 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_174 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _174 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _174 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_169 + 32] = _174
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _176 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_176] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_176 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_176 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _176 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _176 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_176 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_176 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _176 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _176 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_169 + 32] = _176
            mem[_169 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_169 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_169 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_169 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_169 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_169 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[96]:
                revert with 0, 50
            mem[(32 * idx) + 128] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    mem[mem[64]] = 32
    mem[mem[64] + 32] = mem[96]
    mem[mem[64] + 64 len 32 * mem[96]] = mem[128 len 32 * mem[96]]
    return 32, mem[mem[64] + 32 len (32 * mem[96]) + 32]
}

function tokenURI(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = 384
                    s = 0
                    while (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = 384
                    s = 0
                    while stor552[arg1].field_257 % 128 + 352 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if 1 == bool(uint8(stor552[arg1].field_1544)):
            return 32, 74, 
                   0x4568747470733a2f2f697066732e696e667572612e696f2f697066732f516d567878784b443847634575326665557062324a653344487151344b437851487443674e5a4837557968636e, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + 490 len 22] >> 336,
                   0
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if bool(stor552[arg1].field_256):
                if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                    revert with 0, 34
                if Mask(256, -1, stor552[arg1].field_256):
                    if 31 < uint255(stor552[arg1].field_256) * 0.5:
                        idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                        s = 0
                        while ceil32(uint255(stor552[arg1].field_256) * 0.5) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                            mem[idx + 32] = stor552[arg1][s + 1].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
            else:
                if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                    revert with 0, 34
                if stor552[arg1].field_257 % 128:
                    if 31 < stor552[arg1].field_257 % 128:
                        idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                        s = 0
                        while ceil32(uint255(stor552[arg1].field_256) * 0.5) + stor552[arg1].field_257 % 128 + 640 > idx:
                            mem[idx + 32] = stor552[arg1][s + 1].field_256
                            idx = idx + 32
                            s = s + 1
                            continue 
            if stor552[arg1].field_768 > !sub_22451834:
                revert with 0, 17
            if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
                return 32, 74, 
                       0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            if stor552[arg1].field_768 > !sub_39807f8d:
                revert with 0, 17
            if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
                return 32, 74, 
                       0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            if stor552[arg1].field_768 > !sub_1fdb4c5f:
                revert with 0, 17
            if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
                return 32, 74, 
                       0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                       0
            return 32, 74, 
                   0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[(2 * ceil32(uint255(stor552[arg1].field_256) * 0.5)) + 778 len 22] >> 336,
                   0
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                    s = 0
                    while ceil32(uint255(stor552[arg1].field_256) * 0.5) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = ceil32(uint255(stor552[arg1].field_256) * 0.5) + 672
                    s = 0
                    while ceil32(uint255(stor552[arg1].field_256) * 0.5) + stor552[arg1].field_257 % 128 + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if stor552[arg1].field_768 > !sub_22451834:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
            return 32, 74, 
                   0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_39807f8d:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
            return 32, 74, 
                   0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_1fdb4c5f:
            revert with 0, 17
        if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
            return 32, 74, 
                   0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
                   0
        return 32, 74, 
               0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[ceil32(uint255(stor552[arg1].field_256) * 0.5) + ceil32(stor552[arg1].field_257 % 128) + 778 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
        revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = 384
                s = 0
                while (uint255(stor552[arg1].field_256) * 0.5) + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = 384
                s = 0
                while stor552[arg1].field_257 % 128 + 352 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if 1 == bool(uint8(stor552[arg1].field_1544)):
        return 32, 74, 
               0x4568747470733a2f2f697066732e696e667572612e696f2f697066732f516d567878784b443847634575326665557062324a653344487151344b437851487443674e5a4837557968636e, mem[ceil32(stor552[arg1].field_257 % 128) + 490 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if bool(stor552[arg1].field_256):
            if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor552[arg1].field_256):
                if 31 < uint255(stor552[arg1].field_256) * 0.5:
                    idx = ceil32(stor552[arg1].field_257 % 128) + 672
                    s = 0
                    while ceil32(stor552[arg1].field_257 % 128) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        else:
            if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
                revert with 0, 34
            if stor552[arg1].field_257 % 128:
                if 31 < stor552[arg1].field_257 % 128:
                    idx = ceil32(stor552[arg1].field_257 % 128) + 672
                    s = 0
                    while ceil32(stor552[arg1].field_257 % 128) + stor552[arg1].field_257 % 128 + 640 > idx:
                        mem[idx + 32] = stor552[arg1][s + 1].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
        if stor552[arg1].field_768 > !sub_22451834:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
            return 32, 74, 
                   0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_39807f8d:
            revert with 0, 17
        if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
            return 32, 74, 
                   0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        if stor552[arg1].field_768 > !sub_1fdb4c5f:
            revert with 0, 17
        if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
            return 32, 74, 
                   0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
                   0
        return 32, 74, 
               0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[ceil32(stor552[arg1].field_257 % 128) + ceil32(uint255(stor552[arg1].field_256) * 0.5) + 778 len 22] >> 336,
               0
    if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
        revert with 0, 34
    if bool(stor552[arg1].field_256):
        if bool(stor552[arg1].field_256) == uint255(stor552[arg1].field_256) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor552[arg1].field_256):
            if 31 < uint255(stor552[arg1].field_256) * 0.5:
                idx = ceil32(stor552[arg1].field_257 % 128) + 672
                s = 0
                while ceil32(stor552[arg1].field_257 % 128) + (uint255(stor552[arg1].field_256) * 0.5) + 640 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    else:
        if bool(stor552[arg1].field_256) == stor552[arg1].field_257 % 128 < 32:
            revert with 0, 34
        if stor552[arg1].field_257 % 128:
            if 31 < stor552[arg1].field_257 % 128:
                idx = ceil32(stor552[arg1].field_257 % 128) + 672
                s = 0
                while ceil32(stor552[arg1].field_257 % 128) + stor552[arg1].field_257 % 128 + 640 > idx:
                    mem[idx + 32] = stor552[arg1][s + 1].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
    if stor552[arg1].field_768 > !sub_22451834:
        revert with 0, 17
    if block.timestamp <= stor552[arg1].field_768 + sub_22451834:
        return 32, 74, 
               0x3668747470733a2f2f697066732e696e667572612e696f2f697066732f516d5a4c474c646a7575443754416375587848444b685a63374b643237766434744b4570525a65713965624d34, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    if stor552[arg1].field_768 > !sub_39807f8d:
        revert with 0, 17
    if block.timestamp <= stor552[arg1].field_768 + sub_39807f8d:
        return 32, 74, 
               0xfe68747470733a2f2f697066732e696e667572612e696f2f697066732f516d61705a565678384758754c6d6857554144686145764e6a6e6d426138597634794c7754446f455238594854, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    if stor552[arg1].field_768 > !sub_1fdb4c5f:
        revert with 0, 17
    if block.timestamp > stor552[arg1].field_768 + sub_1fdb4c5f:
        return 32, 74, 
               0x4468747470733a2f2f697066732e696e667572612e696f2f697066732f516d5250516b565a663550796a7663774a414337326b4a51696a79446734587a54435a706e7a647a7652727772, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
               0
    return 32, 74, 
           0x4e68747470733a2f2f697066732e696e667572612e696f2f697066732f516d57513443754e743832687a52757a74514c5076674d697a3454683456724e506b707971597a597337766134, mem[(2 * ceil32(stor552[arg1].field_257 % 128)) + 778 len 22] >> 336,
           0
}

function isNameAvailable(address arg1, string arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg2.length
    require arg2 + arg2.length + 36 <= calldata.size
    mem[128 len arg2.length] = arg2[all]
    mem[arg2.length + 128] = 0
    if not arg1:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = arg1
    mem[32] = 104
    if balanceOf[address(arg1)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg2.length)) + 97] = balanceOf[address(arg1)]
    mem[64] = ceil32(ceil32(arg2.length)) + (32 * balanceOf[address(arg1)]) + 129
    if not balanceOf[address(arg1)]:
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _360 = mem[64]
            mem[64] = mem[64] + 256
            mem[_360] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _370 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_370] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _370 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_370 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_370 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _370 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _370 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_360 + 32] = _370
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _377 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_377] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_377 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_377 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _377 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _377 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_377 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_377 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _377 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _377 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_360 + 32] = _377
            mem[_360 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_360 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_360 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_360 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_360 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_360 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _654 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _654:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _660 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _661 = mem[64]
            mem[64] = mem[64] + 256
            mem[_661] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_660].field_0):
                if bool(stor1[_660].field_0) == uint255(stor1[_660].field_0) * 0.5 < 32:
                    revert with 0, 34
                _692 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_660].field_0) * 0.5) + 32
                mem[_692] = uint255(stor1[_660].field_0) * 0.5
                if bool(stor1[_660].field_0):
                    if bool(stor1[_660].field_0) == uint255(stor1[_660].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_660].field_0):
                        if 31 >= uint255(stor1[_660].field_0) * 0.5:
                            mem[_692 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_692 + 32] = stor[sha3(_660 + 1)]
                            s = _692 + 32
                            t = sha3(_660 + 1)
                            while _692 + (uint255(stor1[_660].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_660].field_0) == stor1[_660].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_660].field_1 % 128:
                        if 31 >= stor1[_660].field_1 % 128:
                            mem[_692 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_692 + 32] = stor[sha3(_660 + 1)]
                            s = _692 + 32
                            t = sha3(_660 + 1)
                            while _692 + stor1[_660].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_661 + 32] = _692
                mem[_661 + 64] = stor2[_660]
                mem[_661 + 96] = stor3[_660]
                mem[_661 + 128] = stor4[_660]
                mem[_661 + 160] = stor5[_660]
                mem[_661 + 192] = bool(uint8(stor6[_660].field_0))
                mem[_661 + 224] = bool(uint8(stor6[_660].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_692 + 32 len uint255(stor1[_660].field_0) * 0.5]):
                    return 0
            else:
                if bool(stor1[_660].field_0) == stor1[_660].field_1 % 128 < 32:
                    revert with 0, 34
                _702 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_660].field_1 % 128) + 32
                mem[_702] = stor1[_660].field_1 % 128
                if bool(stor1[_660].field_0):
                    if bool(stor1[_660].field_0) == uint255(stor1[_660].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_660].field_0):
                        if 31 >= uint255(stor1[_660].field_0) * 0.5:
                            mem[_702 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_702 + 32] = stor[sha3(_660 + 1)]
                            s = _702 + 32
                            t = sha3(_660 + 1)
                            while _702 + (uint255(stor1[_660].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_660].field_0) == stor1[_660].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_660].field_1 % 128:
                        if 31 >= stor1[_660].field_1 % 128:
                            mem[_702 + 32] = 256 * Mask(248, 0, stor1[_660].field_8)
                        else:
                            mem[0] = _660 + 1
                            mem[_702 + 32] = stor[sha3(_660 + 1)]
                            s = _702 + 32
                            t = sha3(_660 + 1)
                            while _702 + stor1[_660].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_661 + 32] = _702
                mem[_661 + 64] = stor2[_660]
                mem[_661 + 96] = stor3[_660]
                mem[_661 + 128] = stor4[_660]
                mem[_661 + 160] = stor5[_660]
                mem[_661 + 192] = bool(uint8(stor6[_660].field_0))
                mem[_661 + 224] = bool(uint8(stor6[_660].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_702 + 32 len stor1[_660].field_1 % 128]):
                    return 0
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(ceil32(arg2.length)) + 129 len 32 * balanceOf[address(arg1)]] = call.data[calldata.size len 32 * balanceOf[address(arg1)]]
        idx = 0
        while idx < balanceOf[address(arg1)]:
            if not arg1:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(arg1)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(arg1)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(arg1)][idx]
            mem[32] = 552
            _364 = mem[64]
            mem[64] = mem[64] + 256
            mem[_364] = stor552[stor151[address(arg1)][idx]].field_0
            if bool(stor552[stor151[address(arg1)][idx]].field_256):
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _371 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) + 32
                mem[_371] = uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_371 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_371 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _371 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _371 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_371 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_371 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _371 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _371 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_364 + 32] = _371
            else:
                if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _383 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(arg1)][idx]].field_257 % 128) + 32
                mem[_383] = stor552[stor151[address(arg1)][idx]].field_257 % 128
                if bool(stor552[stor151[address(arg1)][idx]].field_256):
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(arg1)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5:
                            mem[_383 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_383 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _383 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _383 + (uint255(stor552[stor151[address(arg1)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(arg1)][idx]].field_256) == stor552[stor151[address(arg1)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(arg1)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(arg1)][idx]].field_257 % 128:
                            mem[_383 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg1)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1
                            mem[_383 + 32] = stor552[stor151[address(arg1)][idx]][1].field_0
                            s = _383 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(arg1)][idx], 552) + 1)
                            while _383 + stor552[stor151[address(arg1)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_364 + 32] = _383
            mem[_364 + 64] = stor552[stor151[address(arg1)][idx]].field_512
            mem[_364 + 96] = stor552[stor151[address(arg1)][idx]].field_768
            mem[_364 + 128] = stor552[stor151[address(arg1)][idx]].field_1024
            mem[_364 + 160] = stor552[stor151[address(arg1)][idx]].field_1280
            mem[_364 + 192] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1536))
            mem[_364 + 224] = bool(uint8(stor552[stor151[address(arg1)][idx]].field_1544))
            if not uint8(stor552[stor151[address(arg1)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129] = tokenOfOwnerByIndex[address(arg1)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _655 = mem[ceil32(ceil32(arg2.length)) + 97]
        idx = 0
        while idx < _655:
            if idx >= mem[ceil32(ceil32(arg2.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]
            mem[32] = 552
            _668 = sha3(mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129], 552)
            _669 = mem[64]
            mem[64] = mem[64] + 256
            mem[_669] = stor552[mem[(32 * idx) + ceil32(ceil32(arg2.length)) + 129]].field_0
            if bool(stor1[_668].field_0):
                if bool(stor1[_668].field_0) == uint255(stor1[_668].field_0) * 0.5 < 32:
                    revert with 0, 34
                _697 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_668].field_0) * 0.5) + 32
                mem[_697] = uint255(stor1[_668].field_0) * 0.5
                if bool(stor1[_668].field_0):
                    if bool(stor1[_668].field_0) == uint255(stor1[_668].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_668].field_0):
                        if 31 >= uint255(stor1[_668].field_0) * 0.5:
                            mem[_697 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_697 + 32] = stor[sha3(_668 + 1)]
                            s = _697 + 32
                            t = sha3(_668 + 1)
                            while _697 + (uint255(stor1[_668].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_668].field_0) == stor1[_668].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_668].field_1 % 128:
                        if 31 >= stor1[_668].field_1 % 128:
                            mem[_697 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_697 + 32] = stor[sha3(_668 + 1)]
                            s = _697 + 32
                            t = sha3(_668 + 1)
                            while _697 + stor1[_668].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_669 + 32] = _697
                mem[_669 + 64] = stor2[_668]
                mem[_669 + 96] = stor3[_668]
                mem[_669 + 128] = stor4[_668]
                mem[_669 + 160] = stor5[_668]
                mem[_669 + 192] = bool(uint8(stor6[_668].field_0))
                mem[_669 + 224] = bool(uint8(stor6[_668].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_697 + 32 len uint255(stor1[_668].field_0) * 0.5]):
                    return 0
            else:
                if bool(stor1[_668].field_0) == stor1[_668].field_1 % 128 < 32:
                    revert with 0, 34
                _703 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_668].field_1 % 128) + 32
                mem[_703] = stor1[_668].field_1 % 128
                if bool(stor1[_668].field_0):
                    if bool(stor1[_668].field_0) == uint255(stor1[_668].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_668].field_0):
                        if 31 >= uint255(stor1[_668].field_0) * 0.5:
                            mem[_703 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_703 + 32] = stor[sha3(_668 + 1)]
                            s = _703 + 32
                            t = sha3(_668 + 1)
                            while _703 + (uint255(stor1[_668].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_668].field_0) == stor1[_668].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_668].field_1 % 128:
                        if 31 >= stor1[_668].field_1 % 128:
                            mem[_703 + 32] = 256 * Mask(248, 0, stor1[_668].field_8)
                        else:
                            mem[0] = _668 + 1
                            mem[_703 + 32] = stor[sha3(_668 + 1)]
                            s = _703 + 32
                            t = sha3(_668 + 1)
                            while _703 + stor1[_668].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_669 + 32] = _703
                mem[_669 + 64] = stor2[_668]
                mem[_669 + 96] = stor3[_668]
                mem[_669 + 128] = stor4[_668]
                mem[_669 + 160] = stor5[_668]
                mem[_669 + 192] = bool(uint8(stor6[_668].field_0))
                mem[_669 + 224] = bool(uint8(stor6[_668].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_703 + 32 len stor1[_668].field_1 % 128]):
                    return 0
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    return 1
}

function sub_c9619f43(?) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    if arg1.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg1.length)) + 97 < 96 or ceil32(ceil32(arg1.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg1.length
    require arg1 + arg1.length + 36 <= calldata.size
    mem[128 len arg1.length] = arg1[all]
    mem[arg1.length + 128] = 0
    if stor401 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor401 = 2
    if not sub_4d1c3621Address:
        revert with 0, 'Troops: Army is not set'
    if not ownerOf[arg2]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if ownerOf[arg2] != msg.sender:
        revert with 0, 'Troops: Rename context invalid'
    if arg1.length <= 1:
        revert with 0, 'Troops: Rename context invalid'
    if arg1.length >= 32:
        revert with 0, 'Troops: Rename context invalid'
    if not msg.sender:
        revert with 0, 'ERC721: balance query for the zero address'
    mem[0] = msg.sender
    mem[32] = 104
    if balanceOf[address(msg.sender)] > test266151307():
        revert with 0, 65
    mem[ceil32(ceil32(arg1.length)) + 97] = balanceOf[address(msg.sender)]
    mem[64] = ceil32(ceil32(arg1.length)) + (32 * balanceOf[address(msg.sender)]) + 129
    if not balanceOf[address(msg.sender)]:
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _387 = mem[64]
            mem[64] = mem[64] + 256
            mem[_387] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _402 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_402] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_402 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_402 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _402 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _402 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_402 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_402 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _402 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _402 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_387 + 32] = _402
            else:
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _411 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_411] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_411 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_411 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _411 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _411 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_411 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_411 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _411 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _411 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_387 + 32] = _411
            mem[_387 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_387 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_387 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_387 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_387 + 192] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1536))
            mem[_387 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1544))
            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _693 = mem[ceil32(ceil32(arg1.length)) + 97]
        idx = 0
        while idx < _693:
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]
            mem[32] = 552
            _698 = sha3(mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129], 552)
            _699 = mem[64]
            mem[64] = mem[64] + 256
            mem[_699] = stor552[mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]].field_0
            if bool(stor1[_698].field_0):
                if bool(stor1[_698].field_0) == uint255(stor1[_698].field_0) * 0.5 < 32:
                    revert with 0, 34
                _731 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_698].field_0) * 0.5) + 32
                mem[_731] = uint255(stor1[_698].field_0) * 0.5
                if bool(stor1[_698].field_0):
                    if bool(stor1[_698].field_0) == uint255(stor1[_698].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_698].field_0):
                        if 31 >= uint255(stor1[_698].field_0) * 0.5:
                            mem[_731 + 32] = 256 * Mask(248, 0, stor1[_698].field_8)
                        else:
                            mem[0] = _698 + 1
                            mem[_731 + 32] = stor[sha3(_698 + 1)]
                            s = _731 + 32
                            t = sha3(_698 + 1)
                            while _731 + (uint255(stor1[_698].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_698].field_0) == stor1[_698].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_698].field_1 % 128:
                        if 31 >= stor1[_698].field_1 % 128:
                            mem[_731 + 32] = 256 * Mask(248, 0, stor1[_698].field_8)
                        else:
                            mem[0] = _698 + 1
                            mem[_731 + 32] = stor[sha3(_698 + 1)]
                            s = _731 + 32
                            t = sha3(_698 + 1)
                            while _731 + stor1[_698].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_699 + 32] = _731
                mem[_699 + 64] = stor2[_698]
                mem[_699 + 96] = stor3[_698]
                mem[_699 + 128] = stor4[_698]
                mem[_699 + 160] = stor5[_698]
                mem[_699 + 192] = bool(uint8(stor6[_698].field_0))
                mem[_699 + 224] = bool(uint8(stor6[_698].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_731 + 32 len uint255(stor1[_698].field_0) * 0.5]):
                    revert with 0, 'Troops: Rename context invalid'
            else:
                if bool(stor1[_698].field_0) == stor1[_698].field_1 % 128 < 32:
                    revert with 0, 34
                _741 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_698].field_1 % 128) + 32
                mem[_741] = stor1[_698].field_1 % 128
                if bool(stor1[_698].field_0):
                    if bool(stor1[_698].field_0) == uint255(stor1[_698].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_698].field_0):
                        if 31 >= uint255(stor1[_698].field_0) * 0.5:
                            mem[_741 + 32] = 256 * Mask(248, 0, stor1[_698].field_8)
                        else:
                            mem[0] = _698 + 1
                            mem[_741 + 32] = stor[sha3(_698 + 1)]
                            s = _741 + 32
                            t = sha3(_698 + 1)
                            while _741 + (uint255(stor1[_698].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_698].field_0) == stor1[_698].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_698].field_1 % 128:
                        if 31 >= stor1[_698].field_1 % 128:
                            mem[_741 + 32] = 256 * Mask(248, 0, stor1[_698].field_8)
                        else:
                            mem[0] = _698 + 1
                            mem[_741 + 32] = stor[sha3(_698 + 1)]
                            s = _741 + 32
                            t = sha3(_698 + 1)
                            while _741 + stor1[_698].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_699 + 32] = _741
                mem[_699 + 64] = stor2[_698]
                mem[_699 + 96] = stor3[_698]
                mem[_699 + 128] = stor4[_698]
                mem[_699 + 160] = stor5[_698]
                mem[_699 + 192] = bool(uint8(stor6[_698].field_0))
                mem[_699 + 224] = bool(uint8(stor6[_698].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_741 + 32 len stor1[_698].field_1 % 128]):
                    revert with 0, 'Troops: Rename context invalid'
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    else:
        mem[ceil32(ceil32(arg1.length)) + 129 len 32 * balanceOf[address(msg.sender)]] = call.data[calldata.size len 32 * balanceOf[address(msg.sender)]]
        idx = 0
        while idx < balanceOf[address(msg.sender)]:
            if not msg.sender:
                revert with 0, 'ERC721: balance query for the zero address'
            if idx >= balanceOf[address(msg.sender)]:
                revert with 0, 'ERC721Enumerable: owner index out of bounds'
            if tokenOfOwnerByIndex[address(msg.sender)][idx] <= 0:
                revert with 0, 'Troops: Id must be higher than zero'
            mem[0] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            mem[32] = 552
            _391 = mem[64]
            mem[64] = mem[64] + 256
            mem[_391] = stor552[stor151[address(msg.sender)][idx]].field_0
            if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                    revert with 0, 34
                _404 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) + 32
                mem[_404] = uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_404 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_404 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _404 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _404 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_404 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_404 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _404 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _404 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_391 + 32] = _404
            else:
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                    revert with 0, 34
                _418 = mem[64]
                mem[64] = mem[64] + ceil32(stor552[stor151[address(msg.sender)][idx]].field_257 % 128) + 32
                mem[_418] = stor552[stor151[address(msg.sender)][idx]].field_257 % 128
                if bool(stor552[stor151[address(msg.sender)][idx]].field_256):
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor552[stor151[address(msg.sender)][idx]].field_256):
                        if 31 >= uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5:
                            mem[_418 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_418 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _418 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _418 + (uint255(stor552[stor151[address(msg.sender)][idx]].field_256) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor552[stor151[address(msg.sender)][idx]].field_256) == stor552[stor151[address(msg.sender)][idx]].field_257 % 128 < 32:
                        revert with 0, 34
                    if stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                        if 31 >= stor552[stor151[address(msg.sender)][idx]].field_257 % 128:
                            mem[_418 + 32] = 256 * Mask(248, 0, stor552[stor151[address(msg.sender)][idx]].field_264)
                        else:
                            mem[0] = sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1
                            mem[_418 + 32] = stor552[stor151[address(msg.sender)][idx]][1].field_0
                            s = _418 + 32
                            t = sha3(sha3(tokenOfOwnerByIndex[address(msg.sender)][idx], 552) + 1)
                            while _418 + stor552[stor151[address(msg.sender)][idx]].field_257 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_391 + 32] = _418
            mem[_391 + 64] = stor552[stor151[address(msg.sender)][idx]].field_512
            mem[_391 + 96] = stor552[stor151[address(msg.sender)][idx]].field_768
            mem[_391 + 128] = stor552[stor151[address(msg.sender)][idx]].field_1024
            mem[_391 + 160] = stor552[stor151[address(msg.sender)][idx]].field_1280
            mem[_391 + 192] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1536))
            mem[_391 + 224] = bool(uint8(stor552[stor151[address(msg.sender)][idx]].field_1544))
            if not uint8(stor552[stor151[address(msg.sender)][idx]].field_1536):
                revert with 0, 'Troops: This troop doesn't exist'
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129] = tokenOfOwnerByIndex[address(msg.sender)][idx]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        _694 = mem[ceil32(ceil32(arg1.length)) + 97]
        idx = 0
        while idx < _694:
            if idx >= mem[ceil32(ceil32(arg1.length)) + 97]:
                revert with 0, 50
            mem[0] = mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]
            mem[32] = 552
            _705 = sha3(mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129], 552)
            _706 = mem[64]
            mem[64] = mem[64] + 256
            mem[_706] = stor552[mem[(32 * idx) + ceil32(ceil32(arg1.length)) + 129]].field_0
            if bool(stor1[_705].field_0):
                if bool(stor1[_705].field_0) == uint255(stor1[_705].field_0) * 0.5 < 32:
                    revert with 0, 34
                _736 = mem[64]
                mem[64] = mem[64] + ceil32(uint255(stor1[_705].field_0) * 0.5) + 32
                mem[_736] = uint255(stor1[_705].field_0) * 0.5
                if bool(stor1[_705].field_0):
                    if bool(stor1[_705].field_0) == uint255(stor1[_705].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_705].field_0):
                        if 31 >= uint255(stor1[_705].field_0) * 0.5:
                            mem[_736 + 32] = 256 * Mask(248, 0, stor1[_705].field_8)
                        else:
                            mem[0] = _705 + 1
                            mem[_736 + 32] = stor[sha3(_705 + 1)]
                            s = _736 + 32
                            t = sha3(_705 + 1)
                            while _736 + (uint255(stor1[_705].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_705].field_0) == stor1[_705].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_705].field_1 % 128:
                        if 31 >= stor1[_705].field_1 % 128:
                            mem[_736 + 32] = 256 * Mask(248, 0, stor1[_705].field_8)
                        else:
                            mem[0] = _705 + 1
                            mem[_736 + 32] = stor[sha3(_705 + 1)]
                            s = _736 + 32
                            t = sha3(_705 + 1)
                            while _736 + stor1[_705].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_706 + 32] = _736
                mem[_706 + 64] = stor2[_705]
                mem[_706 + 96] = stor3[_705]
                mem[_706 + 128] = stor4[_705]
                mem[_706 + 160] = stor5[_705]
                mem[_706 + 192] = bool(uint8(stor6[_705].field_0))
                mem[_706 + 224] = bool(uint8(stor6[_705].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_736 + 32 len uint255(stor1[_705].field_0) * 0.5]):
                    revert with 0, 'Troops: Rename context invalid'
            else:
                if bool(stor1[_705].field_0) == stor1[_705].field_1 % 128 < 32:
                    revert with 0, 34
                _742 = mem[64]
                mem[64] = mem[64] + ceil32(stor1[_705].field_1 % 128) + 32
                mem[_742] = stor1[_705].field_1 % 128
                if bool(stor1[_705].field_0):
                    if bool(stor1[_705].field_0) == uint255(stor1[_705].field_0) * 0.5 < 32:
                        revert with 0, 34
                    if Mask(256, -1, stor1[_705].field_0):
                        if 31 >= uint255(stor1[_705].field_0) * 0.5:
                            mem[_742 + 32] = 256 * Mask(248, 0, stor1[_705].field_8)
                        else:
                            mem[0] = _705 + 1
                            mem[_742 + 32] = stor[sha3(_705 + 1)]
                            s = _742 + 32
                            t = sha3(_705 + 1)
                            while _742 + (uint255(stor1[_705].field_0) * 0.5) > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                else:
                    if bool(stor1[_705].field_0) == stor1[_705].field_1 % 128 < 32:
                        revert with 0, 34
                    if stor1[_705].field_1 % 128:
                        if 31 >= stor1[_705].field_1 % 128:
                            mem[_742 + 32] = 256 * Mask(248, 0, stor1[_705].field_8)
                        else:
                            mem[0] = _705 + 1
                            mem[_742 + 32] = stor[sha3(_705 + 1)]
                            s = _742 + 32
                            t = sha3(_705 + 1)
                            while _742 + stor1[_705].field_1 % 128 > s:
                                mem[s + 32] = stor1[t].field_0
                                s = s + 32
                                t = t + 1
                                continue 
                mem[_706 + 32] = _742
                mem[_706 + 64] = stor2[_705]
                mem[_706 + 96] = stor3[_705]
                mem[_706 + 128] = stor4[_705]
                mem[_706 + 160] = stor5[_705]
                mem[_706 + 192] = bool(uint8(stor6[_705].field_0))
                mem[_706 + 224] = bool(uint8(stor6[_705].field_8))
                if sha3(mem[128 len mem[96]]) == sha3(mem[_742 + 32 len stor1[_705].field_1 % 128]):
                    revert with 0, 'Troops: Rename context invalid'
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
    if bool(stor552[arg2].field_256):
        if bool(stor552[arg2].field_256) == uint255(stor552[arg2].field_256) * 0.5 < 32:
            revert with 0, 34
        if mem[96]:
            stor552[arg2][1][].field_0 = Array(len=mem[96], data=mem[128 len mem[96]])
        else:
            stor552[arg2].field_256 = 0
            idx = 0
            while (uint255(stor552[arg2].field_256) * 0.5) + 31 / 32 > idx:
                stor552[arg2][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if bool(stor552[arg2].field_256) == stor552[arg2].field_257 % 128 < 32:
            revert with 0, 34
        if mem[96]:
            stor552[arg2][1][].field_0 = Array(len=mem[96], data=mem[128 len mem[96]])
        else:
            stor552[arg2].field_256 = 0
            idx = 0
            while stor552[arg2].field_257 % 128 + 31 / 32 > idx:
                stor552[arg2][idx + 1].field_0 = 0
                idx = idx + 1
                continue 
    stor401 = 1
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    mem[96] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if msg.sender == ownerOf[arg3]:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg3] != arg1:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not arg2:
            revert with 0, 'ERC721: transfer to the zero address'
        if owner == arg2:
            if not arg1:
                stor154[arg3] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg3
            else:
                if arg1 != arg2:
                    if not arg1:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                    stor152[arg3] = 0
                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
            if arg2:
                if arg2 != arg1:
                    if not arg2:
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                    stor152[arg3] = balanceOf[address(arg2)]
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor154[arg3] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                stor154[stor153[stor153.length]] = stor154[arg3]
                stor154[arg3] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
            approved[arg3] = 0
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg3], 0, arg3);
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            balanceOf[address(arg1)]--
            if balanceOf[address(arg2)] > -2:
                revert with 0, 17
            balanceOf[address(arg2)]++
            ownerOf[arg3] = arg2
            emit Transfer(arg1, arg2, arg3);
            if ext_code.size(arg2):
                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                if not ext_call.success:
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if bool(uint8(stor552[arg3].field_1536)) != 1:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1544)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if not liquidityPoolManagerImplementationAddress:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg2)] > test266151307():
                            revert with 0, 65
                        mem[128] = balanceOf[address(arg2)]
                        mem[64] = (32 * balanceOf[address(arg2)]) + 160
                        if not balanceOf[address(arg2)]:
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15809 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15809] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _18041 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_18041] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18041 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18041 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18041 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18041 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18041 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18041 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18041 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18041 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15809 + 32] = _18041
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _18068 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_18068] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18068 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18068 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18068 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18068 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18068 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18068 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18068 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18068 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15809 + 32] = _18068
                                mem[_15809 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15809 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15809 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15809 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15809 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15809 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                    revert with 0, 'Troops: This troop doesn't exist'
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[128]:
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + 160]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33262 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33262] == Mask(32, 224, mem[_33262])
                                                if Mask(32, 224, mem[_33262]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33263 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33263] == Mask(32, 224, mem[_33263])
                                                if Mask(32, 224, mem[_33263]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33264 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33264] == Mask(32, 224, mem[_33264])
                                                if Mask(32, 224, mem[_33264]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33265 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33265] == Mask(32, 224, mem[_33265])
                                                if Mask(32, 224, mem[_33265]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33266 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33266] == Mask(32, 224, mem[_33266])
                                            if Mask(32, 224, mem[_33266]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[96] + mem[64] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33267 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33267] == Mask(32, 224, mem[_33267])
                                            if Mask(32, 224, mem[_33267]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33244 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33244] == Mask(32, 224, mem[_33244])
                                                    if Mask(32, 224, mem[_33244]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33245 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33245] == Mask(32, 224, mem[_33245])
                                                    if Mask(32, 224, mem[_33245]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33246 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33246] == Mask(32, 224, mem[_33246])
                                                    if Mask(32, 224, mem[_33246]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33247 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33247] == Mask(32, 224, mem[_33247])
                                                    if Mask(32, 224, mem[_33247]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33248 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33248] == Mask(32, 224, mem[_33248])
                                                if Mask(32, 224, mem[_33248]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33249 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33249] == Mask(32, 224, mem[_33249])
                                                if Mask(32, 224, mem[_33249]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33250 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33250] == Mask(32, 224, mem[_33250])
                                                        if Mask(32, 224, mem[_33250]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33251 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33251] == Mask(32, 224, mem[_33251])
                                                        if Mask(32, 224, mem[_33251]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33252 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33252] == Mask(32, 224, mem[_33252])
                                                        if Mask(32, 224, mem[_33252]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33253 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33253] == Mask(32, 224, mem[_33253])
                                                        if Mask(32, 224, mem[_33253]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33254 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33254] == Mask(32, 224, mem[_33254])
                                                    if Mask(32, 224, mem[_33254]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33255 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33255] == Mask(32, 224, mem[_33255])
                                                    if Mask(32, 224, mem[_33255]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33256 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33256] == Mask(32, 224, mem[_33256])
                                                        if Mask(32, 224, mem[_33256]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33257 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33257] == Mask(32, 224, mem[_33257])
                                                        if Mask(32, 224, mem[_33257]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33258 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33258] == Mask(32, 224, mem[_33258])
                                                        if Mask(32, 224, mem[_33258]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33259 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33259] == Mask(32, 224, mem[_33259])
                                                        if Mask(32, 224, mem[_33259]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33260 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33260] == Mask(32, 224, mem[_33260])
                                                    if Mask(32, 224, mem[_33260]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33261 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33261] == Mask(32, 224, mem[_33261])
                                                    if Mask(32, 224, mem[_33261]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15812 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15812] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _18043 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_18043] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18043 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18043 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18043 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18043 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18043 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18043 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18043 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18043 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15812 + 32] = _18043
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _18073 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_18073] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18073 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18073 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18073 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18073 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18073 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18073 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18073 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18073 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15812 + 32] = _18073
                                mem[_15812 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15812 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15812 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15812 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15812 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15812 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                    revert with 0, 'Troops: This troop doesn't exist'
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[128]:
                                if idx >= mem[128]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + 160]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33286 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33286] == Mask(32, 224, mem[_33286])
                                                if Mask(32, 224, mem[_33286]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33287 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33287] == Mask(32, 224, mem[_33287])
                                                if Mask(32, 224, mem[_33287]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33288 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33288] == Mask(32, 224, mem[_33288])
                                                if Mask(32, 224, mem[_33288]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33289 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33289] == Mask(32, 224, mem[_33289])
                                                if Mask(32, 224, mem[_33289]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33290 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33290] == Mask(32, 224, mem[_33290])
                                            if Mask(32, 224, mem[_33290]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[96] + mem[64] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33291 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33291] == Mask(32, 224, mem[_33291])
                                            if Mask(32, 224, mem[_33291]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33268 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33268] == Mask(32, 224, mem[_33268])
                                                    if Mask(32, 224, mem[_33268]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33269 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33269] == Mask(32, 224, mem[_33269])
                                                    if Mask(32, 224, mem[_33269]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33270 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33270] == Mask(32, 224, mem[_33270])
                                                    if Mask(32, 224, mem[_33270]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33271 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33271] == Mask(32, 224, mem[_33271])
                                                    if Mask(32, 224, mem[_33271]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33272 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33272] == Mask(32, 224, mem[_33272])
                                                if Mask(32, 224, mem[_33272]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33273 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33273] == Mask(32, 224, mem[_33273])
                                                if Mask(32, 224, mem[_33273]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33274 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33274] == Mask(32, 224, mem[_33274])
                                                        if Mask(32, 224, mem[_33274]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33275 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33275] == Mask(32, 224, mem[_33275])
                                                        if Mask(32, 224, mem[_33275]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33276 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33276] == Mask(32, 224, mem[_33276])
                                                        if Mask(32, 224, mem[_33276]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33277 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33277] == Mask(32, 224, mem[_33277])
                                                        if Mask(32, 224, mem[_33277]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33278 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33278] == Mask(32, 224, mem[_33278])
                                                    if Mask(32, 224, mem[_33278]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33279 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33279] == Mask(32, 224, mem[_33279])
                                                    if Mask(32, 224, mem[_33279]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33280 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33280] == Mask(32, 224, mem[_33280])
                                                        if Mask(32, 224, mem[_33280]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33281 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33281] == Mask(32, 224, mem[_33281])
                                                        if Mask(32, 224, mem[_33281]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33282 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33282] == Mask(32, 224, mem[_33282])
                                                        if Mask(32, 224, mem[_33282]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33283 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33283] == Mask(32, 224, mem[_33283])
                                                        if Mask(32, 224, mem[_33283]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33284 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33284] == Mask(32, 224, mem[_33284])
                                                    if Mask(32, 224, mem[_33284]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33285 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33285] == Mask(32, 224, mem[_33285])
                                                    if Mask(32, 224, mem[_33285]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[132] = arg2
                        staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                gas gas_remaining wei
                               args arg2
                        mem[128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(arg1), arg3, 128, 0
                                if not ext_call.success:
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                            mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15863 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15863] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18045 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18045] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18045 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18045 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18045 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18045 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18045 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18045 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18045 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18045 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15863 + 32] = _18045
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18078 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18078] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18078 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18078 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18078 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18078 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18078 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18078 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18078 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18078 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15863 + 32] = _18078
                                    mem[_15863 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15863 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15863 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15863 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15863 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15863 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(return_data.size) + 128]:
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33310 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33310] == Mask(32, 224, mem[_33310])
                                                    if Mask(32, 224, mem[_33310]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33311 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33311] == Mask(32, 224, mem[_33311])
                                                    if Mask(32, 224, mem[_33311]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33312 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33312] == Mask(32, 224, mem[_33312])
                                                    if Mask(32, 224, mem[_33312]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33313 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33313] == Mask(32, 224, mem[_33313])
                                                    if Mask(32, 224, mem[_33313]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33314 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33314] == Mask(32, 224, mem[_33314])
                                                if Mask(32, 224, mem[_33314]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33315 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33315] == Mask(32, 224, mem[_33315])
                                                if Mask(32, 224, mem[_33315]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33292 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33292] == Mask(32, 224, mem[_33292])
                                                        if Mask(32, 224, mem[_33292]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33293 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33293] == Mask(32, 224, mem[_33293])
                                                        if Mask(32, 224, mem[_33293]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33294 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33294] == Mask(32, 224, mem[_33294])
                                                        if Mask(32, 224, mem[_33294]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33295 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33295] == Mask(32, 224, mem[_33295])
                                                        if Mask(32, 224, mem[_33295]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33296 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33296] == Mask(32, 224, mem[_33296])
                                                    if Mask(32, 224, mem[_33296]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33297 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33297] == Mask(32, 224, mem[_33297])
                                                    if Mask(32, 224, mem[_33297]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33298 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33298] == Mask(32, 224, mem[_33298])
                                                            if Mask(32, 224, mem[_33298]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33299 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33299] == Mask(32, 224, mem[_33299])
                                                            if Mask(32, 224, mem[_33299]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33300 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33300] == Mask(32, 224, mem[_33300])
                                                            if Mask(32, 224, mem[_33300]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33301 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33301] == Mask(32, 224, mem[_33301])
                                                            if Mask(32, 224, mem[_33301]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33302 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33302] == Mask(32, 224, mem[_33302])
                                                        if Mask(32, 224, mem[_33302]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33303 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33303] == Mask(32, 224, mem[_33303])
                                                        if Mask(32, 224, mem[_33303]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33304 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33304] == Mask(32, 224, mem[_33304])
                                                            if Mask(32, 224, mem[_33304]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33305 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33305] == Mask(32, 224, mem[_33305])
                                                            if Mask(32, 224, mem[_33305]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33306 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33306] == Mask(32, 224, mem[_33306])
                                                            if Mask(32, 224, mem[_33306]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33307 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33307] == Mask(32, 224, mem[_33307])
                                                            if Mask(32, 224, mem[_33307]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33308 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33308] == Mask(32, 224, mem[_33308])
                                                        if Mask(32, 224, mem[_33308]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33309 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33309] == Mask(32, 224, mem[_33309])
                                                        if Mask(32, 224, mem[_33309]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15866 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15866] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18047 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18047] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18047 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18047 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18047 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18047 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18047 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18047 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18047 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18047 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15866 + 32] = _18047
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18083 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18083] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18083 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18083 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18083 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18083 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18083 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18083 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18083 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18083 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15866 + 32] = _18083
                                    mem[_15866 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15866 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15866 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15866 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15866 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15866 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(return_data.size) + 128]:
                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33334 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33334] == Mask(32, 224, mem[_33334])
                                                    if Mask(32, 224, mem[_33334]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33335 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33335] == Mask(32, 224, mem[_33335])
                                                    if Mask(32, 224, mem[_33335]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33336 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33336] == Mask(32, 224, mem[_33336])
                                                    if Mask(32, 224, mem[_33336]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33337 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33337] == Mask(32, 224, mem[_33337])
                                                    if Mask(32, 224, mem[_33337]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33338 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33338] == Mask(32, 224, mem[_33338])
                                                if Mask(32, 224, mem[_33338]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33339 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33339] == Mask(32, 224, mem[_33339])
                                                if Mask(32, 224, mem[_33339]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33316 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33316] == Mask(32, 224, mem[_33316])
                                                        if Mask(32, 224, mem[_33316]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33317 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33317] == Mask(32, 224, mem[_33317])
                                                        if Mask(32, 224, mem[_33317]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33318 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33318] == Mask(32, 224, mem[_33318])
                                                        if Mask(32, 224, mem[_33318]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33319 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33319] == Mask(32, 224, mem[_33319])
                                                        if Mask(32, 224, mem[_33319]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33320 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33320] == Mask(32, 224, mem[_33320])
                                                    if Mask(32, 224, mem[_33320]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33321 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33321] == Mask(32, 224, mem[_33321])
                                                    if Mask(32, 224, mem[_33321]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33322 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33322] == Mask(32, 224, mem[_33322])
                                                            if Mask(32, 224, mem[_33322]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33323 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33323] == Mask(32, 224, mem[_33323])
                                                            if Mask(32, 224, mem[_33323]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33324 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33324] == Mask(32, 224, mem[_33324])
                                                            if Mask(32, 224, mem[_33324]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33325 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33325] == Mask(32, 224, mem[_33325])
                                                            if Mask(32, 224, mem[_33325]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33326 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33326] == Mask(32, 224, mem[_33326])
                                                        if Mask(32, 224, mem[_33326]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33327 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33327] == Mask(32, 224, mem[_33327])
                                                        if Mask(32, 224, mem[_33327]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33328 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33328] == Mask(32, 224, mem[_33328])
                                                            if Mask(32, 224, mem[_33328]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33329 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33329] == Mask(32, 224, mem[_33329])
                                                            if Mask(32, 224, mem[_33329]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33330 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33330] == Mask(32, 224, mem[_33330])
                                                            if Mask(32, 224, mem[_33330]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33331 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33331] == Mask(32, 224, mem[_33331])
                                                            if Mask(32, 224, mem[_33331]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33332 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33332] == Mask(32, 224, mem[_33332])
                                                        if Mask(32, 224, mem[_33332]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33333 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33333] == Mask(32, 224, mem[_33333])
                                                        if Mask(32, 224, mem[_33333]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    else:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] == msg.sender:
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[128] = balanceOf[address(arg2)]
                            mem[64] = (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16013 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16013] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18049 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18049] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18049 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18049 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18049 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18049 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18049 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18049 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18049 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18049 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16013 + 32] = _18049
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18088 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18088] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18088 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18088 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18088 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18088 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18088 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18088 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18088 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18088 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16013 + 32] = _18088
                                    mem[_16013 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16013 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16013 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16013 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16013 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16013 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33358 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33358] == Mask(32, 224, mem[_33358])
                                                    if Mask(32, 224, mem[_33358]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33359 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33359] == Mask(32, 224, mem[_33359])
                                                    if Mask(32, 224, mem[_33359]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33360 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33360] == Mask(32, 224, mem[_33360])
                                                    if Mask(32, 224, mem[_33360]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33361 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33361] == Mask(32, 224, mem[_33361])
                                                    if Mask(32, 224, mem[_33361]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33362 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33362] == Mask(32, 224, mem[_33362])
                                                if Mask(32, 224, mem[_33362]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33363 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33363] == Mask(32, 224, mem[_33363])
                                                if Mask(32, 224, mem[_33363]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33340 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33340] == Mask(32, 224, mem[_33340])
                                                        if Mask(32, 224, mem[_33340]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33341 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33341] == Mask(32, 224, mem[_33341])
                                                        if Mask(32, 224, mem[_33341]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33342 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33342] == Mask(32, 224, mem[_33342])
                                                        if Mask(32, 224, mem[_33342]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33343 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33343] == Mask(32, 224, mem[_33343])
                                                        if Mask(32, 224, mem[_33343]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33344 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33344] == Mask(32, 224, mem[_33344])
                                                    if Mask(32, 224, mem[_33344]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33345 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33345] == Mask(32, 224, mem[_33345])
                                                    if Mask(32, 224, mem[_33345]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33346 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33346] == Mask(32, 224, mem[_33346])
                                                            if Mask(32, 224, mem[_33346]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33347 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33347] == Mask(32, 224, mem[_33347])
                                                            if Mask(32, 224, mem[_33347]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33348 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33348] == Mask(32, 224, mem[_33348])
                                                            if Mask(32, 224, mem[_33348]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33349 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33349] == Mask(32, 224, mem[_33349])
                                                            if Mask(32, 224, mem[_33349]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33350 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33350] == Mask(32, 224, mem[_33350])
                                                        if Mask(32, 224, mem[_33350]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33351 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33351] == Mask(32, 224, mem[_33351])
                                                        if Mask(32, 224, mem[_33351]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33352 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33352] == Mask(32, 224, mem[_33352])
                                                            if Mask(32, 224, mem[_33352]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33353 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33353] == Mask(32, 224, mem[_33353])
                                                            if Mask(32, 224, mem[_33353]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33354 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33354] == Mask(32, 224, mem[_33354])
                                                            if Mask(32, 224, mem[_33354]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33355 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33355] == Mask(32, 224, mem[_33355])
                                                            if Mask(32, 224, mem[_33355]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33356 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33356] == Mask(32, 224, mem[_33356])
                                                        if Mask(32, 224, mem[_33356]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33357 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33357] == Mask(32, 224, mem[_33357])
                                                        if Mask(32, 224, mem[_33357]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16016 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16016] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18051 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18051] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18051 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18051 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18051 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18051 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18051 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18051 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18051 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18051 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16016 + 32] = _18051
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18093 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18093] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18093 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18093 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18093 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18093 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18093 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18093 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18093 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18093 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16016 + 32] = _18093
                                    mem[_16016 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16016 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16016 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16016 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16016 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16016 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33382 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33382] == Mask(32, 224, mem[_33382])
                                                    if Mask(32, 224, mem[_33382]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33383 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33383] == Mask(32, 224, mem[_33383])
                                                    if Mask(32, 224, mem[_33383]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33384 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33384] == Mask(32, 224, mem[_33384])
                                                    if Mask(32, 224, mem[_33384]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33385 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33385] == Mask(32, 224, mem[_33385])
                                                    if Mask(32, 224, mem[_33385]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33386 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33386] == Mask(32, 224, mem[_33386])
                                                if Mask(32, 224, mem[_33386]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33387 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33387] == Mask(32, 224, mem[_33387])
                                                if Mask(32, 224, mem[_33387]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33364 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33364] == Mask(32, 224, mem[_33364])
                                                        if Mask(32, 224, mem[_33364]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33365 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33365] == Mask(32, 224, mem[_33365])
                                                        if Mask(32, 224, mem[_33365]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33366 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33366] == Mask(32, 224, mem[_33366])
                                                        if Mask(32, 224, mem[_33366]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33367 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33367] == Mask(32, 224, mem[_33367])
                                                        if Mask(32, 224, mem[_33367]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33368 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33368] == Mask(32, 224, mem[_33368])
                                                    if Mask(32, 224, mem[_33368]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33369 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33369] == Mask(32, 224, mem[_33369])
                                                    if Mask(32, 224, mem[_33369]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33370 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33370] == Mask(32, 224, mem[_33370])
                                                            if Mask(32, 224, mem[_33370]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33371 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33371] == Mask(32, 224, mem[_33371])
                                                            if Mask(32, 224, mem[_33371]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33372 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33372] == Mask(32, 224, mem[_33372])
                                                            if Mask(32, 224, mem[_33372]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33373 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33373] == Mask(32, 224, mem[_33373])
                                                            if Mask(32, 224, mem[_33373]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33374 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33374] == Mask(32, 224, mem[_33374])
                                                        if Mask(32, 224, mem[_33374]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33375 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33375] == Mask(32, 224, mem[_33375])
                                                        if Mask(32, 224, mem[_33375]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33376 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33376] == Mask(32, 224, mem[_33376])
                                                            if Mask(32, 224, mem[_33376]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33377 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33377] == Mask(32, 224, mem[_33377])
                                                            if Mask(32, 224, mem[_33377]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33378 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33378] == Mask(32, 224, mem[_33378])
                                                            if Mask(32, 224, mem[_33378]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33379 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33379] == Mask(32, 224, mem[_33379])
                                                            if Mask(32, 224, mem[_33379]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33380 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33380] == Mask(32, 224, mem[_33380])
                                                        if Mask(32, 224, mem[_33380]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33381 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33381] == Mask(32, 224, mem[_33381])
                                                        if Mask(32, 224, mem[_33381]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[132] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, 128, 0
                                    if not ext_call.success:
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16067 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16067] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18053 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18053] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18053 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18053 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18053 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18053 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18053 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18053 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18053 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18053 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16067 + 32] = _18053
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18098 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18098] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18098 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18098 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18098 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18098 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18098 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18098 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18098 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18098 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16067 + 32] = _18098
                                        mem[_16067 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16067 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16067 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16067 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16067 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16067 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33406 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33406] == Mask(32, 224, mem[_33406])
                                                        if Mask(32, 224, mem[_33406]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33407 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33407] == Mask(32, 224, mem[_33407])
                                                        if Mask(32, 224, mem[_33407]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33408 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33408] == Mask(32, 224, mem[_33408])
                                                        if Mask(32, 224, mem[_33408]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33409 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33409] == Mask(32, 224, mem[_33409])
                                                        if Mask(32, 224, mem[_33409]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33410 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33410] == Mask(32, 224, mem[_33410])
                                                    if Mask(32, 224, mem[_33410]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33411 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33411] == Mask(32, 224, mem[_33411])
                                                    if Mask(32, 224, mem[_33411]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33388 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33388] == Mask(32, 224, mem[_33388])
                                                            if Mask(32, 224, mem[_33388]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33389 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33389] == Mask(32, 224, mem[_33389])
                                                            if Mask(32, 224, mem[_33389]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33390 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33390] == Mask(32, 224, mem[_33390])
                                                            if Mask(32, 224, mem[_33390]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33391 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33391] == Mask(32, 224, mem[_33391])
                                                            if Mask(32, 224, mem[_33391]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33392 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33392] == Mask(32, 224, mem[_33392])
                                                        if Mask(32, 224, mem[_33392]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33393 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33393] == Mask(32, 224, mem[_33393])
                                                        if Mask(32, 224, mem[_33393]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33394 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33394] == Mask(32, 224, mem[_33394])
                                                                if Mask(32, 224, mem[_33394]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33395 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33395] == Mask(32, 224, mem[_33395])
                                                                if Mask(32, 224, mem[_33395]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33396 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33396] == Mask(32, 224, mem[_33396])
                                                                if Mask(32, 224, mem[_33396]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33397 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33397] == Mask(32, 224, mem[_33397])
                                                                if Mask(32, 224, mem[_33397]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33398 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33398] == Mask(32, 224, mem[_33398])
                                                            if Mask(32, 224, mem[_33398]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33399 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33399] == Mask(32, 224, mem[_33399])
                                                            if Mask(32, 224, mem[_33399]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33400 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33400] == Mask(32, 224, mem[_33400])
                                                                if Mask(32, 224, mem[_33400]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33401 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33401] == Mask(32, 224, mem[_33401])
                                                                if Mask(32, 224, mem[_33401]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33402 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33402] == Mask(32, 224, mem[_33402])
                                                                if Mask(32, 224, mem[_33402]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33403 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33403] == Mask(32, 224, mem[_33403])
                                                                if Mask(32, 224, mem[_33403]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33404 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33404] == Mask(32, 224, mem[_33404])
                                                            if Mask(32, 224, mem[_33404]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33405 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33405] == Mask(32, 224, mem[_33405])
                                                            if Mask(32, 224, mem[_33405]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16070 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16070] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18055 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18055] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18055 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18055 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18055 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18055 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18055 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18055 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18055 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18055 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16070 + 32] = _18055
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18103 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18103] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18103 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18103 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18103 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18103 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18103 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18103 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18103 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18103 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16070 + 32] = _18103
                                        mem[_16070 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16070 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16070 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16070 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16070 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16070 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33430 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33430] == Mask(32, 224, mem[_33430])
                                                        if Mask(32, 224, mem[_33430]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33431 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33431] == Mask(32, 224, mem[_33431])
                                                        if Mask(32, 224, mem[_33431]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33432 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33432] == Mask(32, 224, mem[_33432])
                                                        if Mask(32, 224, mem[_33432]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33433 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33433] == Mask(32, 224, mem[_33433])
                                                        if Mask(32, 224, mem[_33433]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33434 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33434] == Mask(32, 224, mem[_33434])
                                                    if Mask(32, 224, mem[_33434]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33435 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33435] == Mask(32, 224, mem[_33435])
                                                    if Mask(32, 224, mem[_33435]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33412 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33412] == Mask(32, 224, mem[_33412])
                                                            if Mask(32, 224, mem[_33412]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33413 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33413] == Mask(32, 224, mem[_33413])
                                                            if Mask(32, 224, mem[_33413]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33414 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33414] == Mask(32, 224, mem[_33414])
                                                            if Mask(32, 224, mem[_33414]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33415 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33415] == Mask(32, 224, mem[_33415])
                                                            if Mask(32, 224, mem[_33415]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33416 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33416] == Mask(32, 224, mem[_33416])
                                                        if Mask(32, 224, mem[_33416]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33417 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33417] == Mask(32, 224, mem[_33417])
                                                        if Mask(32, 224, mem[_33417]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33418 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33418] == Mask(32, 224, mem[_33418])
                                                                if Mask(32, 224, mem[_33418]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33419 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33419] == Mask(32, 224, mem[_33419])
                                                                if Mask(32, 224, mem[_33419]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33420 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33420] == Mask(32, 224, mem[_33420])
                                                                if Mask(32, 224, mem[_33420]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33421 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33421] == Mask(32, 224, mem[_33421])
                                                                if Mask(32, 224, mem[_33421]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33422 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33422] == Mask(32, 224, mem[_33422])
                                                            if Mask(32, 224, mem[_33422]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33423 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33423] == Mask(32, 224, mem[_33423])
                                                            if Mask(32, 224, mem[_33423]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33424 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33424] == Mask(32, 224, mem[_33424])
                                                                if Mask(32, 224, mem[_33424]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33425 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33425] == Mask(32, 224, mem[_33425])
                                                                if Mask(32, 224, mem[_33425]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33426 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33426] == Mask(32, 224, mem[_33426])
                                                                if Mask(32, 224, mem[_33426]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33427 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33427] == Mask(32, 224, mem[_33427])
                                                                if Mask(32, 224, mem[_33427]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33428 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33428] == Mask(32, 224, mem[_33428])
                                                            if Mask(32, 224, mem[_33428]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33429 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33429] == Mask(32, 224, mem[_33429])
                                                            if Mask(32, 224, mem[_33429]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                    if not ext_call.success:
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                        if not ext_call.success:
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, uint32(msg.sender), address(arg1), arg3, 128, 0
                            if not ext_call.success:
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[128] = balanceOf[address(arg2)]
                            mem[64] = (32 * balanceOf[address(arg2)]) + 160
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16217 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16217] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18057 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18057] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18057 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18057 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18057 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18057 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18057 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18057 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18057 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18057 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16217 + 32] = _18057
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18108 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18108] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18108 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18108 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18108 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18108 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18108 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18108 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18108 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18108 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16217 + 32] = _18108
                                    mem[_16217 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16217 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16217 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16217 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16217 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16217 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33454 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33454] == Mask(32, 224, mem[_33454])
                                                    if Mask(32, 224, mem[_33454]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33455 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33455] == Mask(32, 224, mem[_33455])
                                                    if Mask(32, 224, mem[_33455]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33456 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33456] == Mask(32, 224, mem[_33456])
                                                    if Mask(32, 224, mem[_33456]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33457 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33457] == Mask(32, 224, mem[_33457])
                                                    if Mask(32, 224, mem[_33457]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33458 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33458] == Mask(32, 224, mem[_33458])
                                                if Mask(32, 224, mem[_33458]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33459 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33459] == Mask(32, 224, mem[_33459])
                                                if Mask(32, 224, mem[_33459]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33436 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33436] == Mask(32, 224, mem[_33436])
                                                        if Mask(32, 224, mem[_33436]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33437 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33437] == Mask(32, 224, mem[_33437])
                                                        if Mask(32, 224, mem[_33437]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33438 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33438] == Mask(32, 224, mem[_33438])
                                                        if Mask(32, 224, mem[_33438]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33439 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33439] == Mask(32, 224, mem[_33439])
                                                        if Mask(32, 224, mem[_33439]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33440 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33440] == Mask(32, 224, mem[_33440])
                                                    if Mask(32, 224, mem[_33440]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33441 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33441] == Mask(32, 224, mem[_33441])
                                                    if Mask(32, 224, mem[_33441]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33442 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33442] == Mask(32, 224, mem[_33442])
                                                            if Mask(32, 224, mem[_33442]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33443 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33443] == Mask(32, 224, mem[_33443])
                                                            if Mask(32, 224, mem[_33443]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33444 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33444] == Mask(32, 224, mem[_33444])
                                                            if Mask(32, 224, mem[_33444]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33445 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33445] == Mask(32, 224, mem[_33445])
                                                            if Mask(32, 224, mem[_33445]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33446 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33446] == Mask(32, 224, mem[_33446])
                                                        if Mask(32, 224, mem[_33446]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33447 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33447] == Mask(32, 224, mem[_33447])
                                                        if Mask(32, 224, mem[_33447]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33448 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33448] == Mask(32, 224, mem[_33448])
                                                            if Mask(32, 224, mem[_33448]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33449 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33449] == Mask(32, 224, mem[_33449])
                                                            if Mask(32, 224, mem[_33449]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33450 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33450] == Mask(32, 224, mem[_33450])
                                                            if Mask(32, 224, mem[_33450]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33451 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33451] == Mask(32, 224, mem[_33451])
                                                            if Mask(32, 224, mem[_33451]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33452 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33452] == Mask(32, 224, mem[_33452])
                                                        if Mask(32, 224, mem[_33452]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33453 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33453] == Mask(32, 224, mem[_33453])
                                                        if Mask(32, 224, mem[_33453]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16220 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16220] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18059 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18059] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18059 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18059 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18059 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18059 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18059 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18059 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18059 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18059 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16220 + 32] = _18059
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18113 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18113] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18113 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18113 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18113 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18113 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18113 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18113 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18113 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18113 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16220 + 32] = _18113
                                    mem[_16220 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16220 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16220 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16220 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16220 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16220 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[(32 * idx) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[128]:
                                    if idx >= mem[128]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + 160]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + 160]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33478 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33478] == Mask(32, 224, mem[_33478])
                                                    if Mask(32, 224, mem[_33478]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33479 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33479] == Mask(32, 224, mem[_33479])
                                                    if Mask(32, 224, mem[_33479]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33480 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33480] == Mask(32, 224, mem[_33480])
                                                    if Mask(32, 224, mem[_33480]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33481 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33481] == Mask(32, 224, mem[_33481])
                                                    if Mask(32, 224, mem[_33481]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33482 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33482] == Mask(32, 224, mem[_33482])
                                                if Mask(32, 224, mem[_33482]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33483 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33483] == Mask(32, 224, mem[_33483])
                                                if Mask(32, 224, mem[_33483]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33460 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33460] == Mask(32, 224, mem[_33460])
                                                        if Mask(32, 224, mem[_33460]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33461 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33461] == Mask(32, 224, mem[_33461])
                                                        if Mask(32, 224, mem[_33461]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33462 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33462] == Mask(32, 224, mem[_33462])
                                                        if Mask(32, 224, mem[_33462]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33463 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33463] == Mask(32, 224, mem[_33463])
                                                        if Mask(32, 224, mem[_33463]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33464 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33464] == Mask(32, 224, mem[_33464])
                                                    if Mask(32, 224, mem[_33464]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33465 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33465] == Mask(32, 224, mem[_33465])
                                                    if Mask(32, 224, mem[_33465]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33466 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33466] == Mask(32, 224, mem[_33466])
                                                            if Mask(32, 224, mem[_33466]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33467 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33467] == Mask(32, 224, mem[_33467])
                                                            if Mask(32, 224, mem[_33467]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33468 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33468] == Mask(32, 224, mem[_33468])
                                                            if Mask(32, 224, mem[_33468]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33469 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33469] == Mask(32, 224, mem[_33469])
                                                            if Mask(32, 224, mem[_33469]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33470 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33470] == Mask(32, 224, mem[_33470])
                                                        if Mask(32, 224, mem[_33470]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33471 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33471] == Mask(32, 224, mem[_33471])
                                                        if Mask(32, 224, mem[_33471]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33472 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33472] == Mask(32, 224, mem[_33472])
                                                            if Mask(32, 224, mem[_33472]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33473 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33473] == Mask(32, 224, mem[_33473])
                                                            if Mask(32, 224, mem[_33473]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33474 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33474] == Mask(32, 224, mem[_33474])
                                                            if Mask(32, 224, mem[_33474]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33475 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33475] == Mask(32, 224, mem[_33475])
                                                            if Mask(32, 224, mem[_33475]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33476 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33476] == Mask(32, 224, mem[_33476])
                                                        if Mask(32, 224, mem[_33476]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33477 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33477] == Mask(32, 224, mem[_33477])
                                                        if Mask(32, 224, mem[_33477]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[132] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, 128, 0
                                    if not ext_call.success:
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(return_data.size) + 128] = balanceOf[address(arg2)]
                                mem[64] = ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 160
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16271 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16271] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18061 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18061] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18061 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18061 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18061 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18061 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18061 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18061 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18061 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18061 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16271 + 32] = _18061
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18118 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18118] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18118 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18118 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18118 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18118 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18118 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18118 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18118 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18118 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16271 + 32] = _18118
                                        mem[_16271 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16271 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16271 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16271 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16271 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16271 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33502 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33502] == Mask(32, 224, mem[_33502])
                                                        if Mask(32, 224, mem[_33502]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33503 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33503] == Mask(32, 224, mem[_33503])
                                                        if Mask(32, 224, mem[_33503]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33504 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33504] == Mask(32, 224, mem[_33504])
                                                        if Mask(32, 224, mem[_33504]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33505 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33505] == Mask(32, 224, mem[_33505])
                                                        if Mask(32, 224, mem[_33505]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33506 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33506] == Mask(32, 224, mem[_33506])
                                                    if Mask(32, 224, mem[_33506]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33507 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33507] == Mask(32, 224, mem[_33507])
                                                    if Mask(32, 224, mem[_33507]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33484 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33484] == Mask(32, 224, mem[_33484])
                                                            if Mask(32, 224, mem[_33484]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33485 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33485] == Mask(32, 224, mem[_33485])
                                                            if Mask(32, 224, mem[_33485]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33486 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33486] == Mask(32, 224, mem[_33486])
                                                            if Mask(32, 224, mem[_33486]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33487 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33487] == Mask(32, 224, mem[_33487])
                                                            if Mask(32, 224, mem[_33487]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33488 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33488] == Mask(32, 224, mem[_33488])
                                                        if Mask(32, 224, mem[_33488]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33489 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33489] == Mask(32, 224, mem[_33489])
                                                        if Mask(32, 224, mem[_33489]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33490 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33490] == Mask(32, 224, mem[_33490])
                                                                if Mask(32, 224, mem[_33490]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33491 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33491] == Mask(32, 224, mem[_33491])
                                                                if Mask(32, 224, mem[_33491]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33492 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33492] == Mask(32, 224, mem[_33492])
                                                                if Mask(32, 224, mem[_33492]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33493 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33493] == Mask(32, 224, mem[_33493])
                                                                if Mask(32, 224, mem[_33493]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33494 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33494] == Mask(32, 224, mem[_33494])
                                                            if Mask(32, 224, mem[_33494]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33495 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33495] == Mask(32, 224, mem[_33495])
                                                            if Mask(32, 224, mem[_33495]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33496 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33496] == Mask(32, 224, mem[_33496])
                                                                if Mask(32, 224, mem[_33496]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33497 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33497] == Mask(32, 224, mem[_33497])
                                                                if Mask(32, 224, mem[_33497]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33498 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33498] == Mask(32, 224, mem[_33498])
                                                                if Mask(32, 224, mem[_33498]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33499 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33499] == Mask(32, 224, mem[_33499])
                                                                if Mask(32, 224, mem[_33499]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33500 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33500] == Mask(32, 224, mem[_33500])
                                                            if Mask(32, 224, mem[_33500]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33501 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33501] == Mask(32, 224, mem[_33501])
                                                            if Mask(32, 224, mem[_33501]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(return_data.size) + 160 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16274 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16274] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18063 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18063] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18063 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18063 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18063 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18063 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18063 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18063 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18063 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18063 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16274 + 32] = _18063
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18123 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18123] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18123 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18123 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18123 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18123 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18123 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18123 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18123 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18123 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16274 + 32] = _18123
                                        mem[_16274 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16274 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16274 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16274 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16274 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16274 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(return_data.size) + 160] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(return_data.size) + 128]:
                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(return_data.size) + 160]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33526 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33526] == Mask(32, 224, mem[_33526])
                                                        if Mask(32, 224, mem[_33526]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33527 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33527] == Mask(32, 224, mem[_33527])
                                                        if Mask(32, 224, mem[_33527]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33528 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33528] == Mask(32, 224, mem[_33528])
                                                        if Mask(32, 224, mem[_33528]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33529 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33529] == Mask(32, 224, mem[_33529])
                                                        if Mask(32, 224, mem[_33529]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33530 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33530] == Mask(32, 224, mem[_33530])
                                                    if Mask(32, 224, mem[_33530]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33531 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33531] == Mask(32, 224, mem[_33531])
                                                    if Mask(32, 224, mem[_33531]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33508 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33508] == Mask(32, 224, mem[_33508])
                                                            if Mask(32, 224, mem[_33508]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33509 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33509] == Mask(32, 224, mem[_33509])
                                                            if Mask(32, 224, mem[_33509]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33510 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33510] == Mask(32, 224, mem[_33510])
                                                            if Mask(32, 224, mem[_33510]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33511 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33511] == Mask(32, 224, mem[_33511])
                                                            if Mask(32, 224, mem[_33511]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33512 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33512] == Mask(32, 224, mem[_33512])
                                                        if Mask(32, 224, mem[_33512]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33513 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33513] == Mask(32, 224, mem[_33513])
                                                        if Mask(32, 224, mem[_33513]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33514 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33514] == Mask(32, 224, mem[_33514])
                                                                if Mask(32, 224, mem[_33514]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33515 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33515] == Mask(32, 224, mem[_33515])
                                                                if Mask(32, 224, mem[_33515]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33516 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33516] == Mask(32, 224, mem[_33516])
                                                                if Mask(32, 224, mem[_33516]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33517 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33517] == Mask(32, 224, mem[_33517])
                                                                if Mask(32, 224, mem[_33517]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33518 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33518] == Mask(32, 224, mem[_33518])
                                                            if Mask(32, 224, mem[_33518]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33519 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33519] == Mask(32, 224, mem[_33519])
                                                            if Mask(32, 224, mem[_33519]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33520 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33520] == Mask(32, 224, mem[_33520])
                                                                if Mask(32, 224, mem[_33520]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33521 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33521] == Mask(32, 224, mem[_33521])
                                                                if Mask(32, 224, mem[_33521]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33522 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33522] == Mask(32, 224, mem[_33522])
                                                                if Mask(32, 224, mem[_33522]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33523 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33523] == Mask(32, 224, mem[_33523])
                                                                if Mask(32, 224, mem[_33523]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33524 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33524] == Mask(32, 224, mem[_33524])
                                                            if Mask(32, 224, mem[_33524]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33525 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33525] == Mask(32, 224, mem[_33525])
                                                            if Mask(32, 224, mem[_33525]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}

function safeTransferFrom(address arg1, address arg2, uint256 arg3, bytes arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require arg2 == arg2
    require arg4 <= test266151307()
    require calldata.size > arg4 + 35
    if arg4.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg4.length)) + 97 < 96 or ceil32(ceil32(arg4.length)) + 97 > test266151307():
        revert with 0, 65
    mem[96] = arg4.length
    require arg4 + arg4.length + 36 <= calldata.size
    mem[128 len arg4.length] = arg4[all]
    mem[arg4.length + 128] = 0
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: operator query for nonexistent token'
    if not ownerOf[arg3]:
        revert with 0, 'ERC721: owner query for nonexistent token'
    if msg.sender == ownerOf[arg3]:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: owner query for nonexistent token'
        if ownerOf[arg3] != arg1:
            revert with 0, 'ERC721: transfer from incorrect owner'
        if not arg2:
            revert with 0, 'ERC721: transfer to the zero address'
        if owner == arg2:
            if not arg1:
                stor154[arg3] = tokenByIndex.length
                tokenByIndex.length++
                stor72A1[stor153.length] = arg3
            else:
                if arg1 != arg2:
                    if not arg1:
                        revert with 0, 'ERC721: balance query for the zero address'
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                    stor152[arg3] = 0
                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
            if arg2:
                if arg2 != arg1:
                    if not arg2:
                        revert with 0, 'ERC721: balance query for the zero address'
                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                    stor152[arg3] = balanceOf[address(arg2)]
            else:
                if tokenByIndex.length < 1:
                    revert with 0, 17
                if tokenByIndex.length - 1 >= tokenByIndex.length:
                    revert with 0, 50
                if stor154[arg3] >= tokenByIndex.length:
                    revert with 0, 50
                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                stor154[stor153[stor153.length]] = stor154[arg3]
                stor154[arg3] = 0
                if not tokenByIndex.length:
                    revert with 0, 49
                tokenByIndex[tokenByIndex.length] = 0
                tokenByIndex.length--
            approved[arg3] = 0
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            emit Approval(ownerOf[arg3], 0, arg3);
            if balanceOf[address(arg1)] < 1:
                revert with 0, 17
            balanceOf[address(arg1)]--
            if balanceOf[address(arg2)] > -2:
                revert with 0, 17
            balanceOf[address(arg2)]++
            ownerOf[arg3] = arg2
            emit Transfer(arg1, arg2, arg3);
            if ext_code.size(arg2):
                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                if not ext_call.success:
                    if not return_data.size:
                        if not arg4.length:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with arg4[all]
                    if not return_data.size:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if bool(uint8(stor552[arg3].field_1536)) != 1:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1544)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if not liquidityPoolManagerImplementationAddress:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg2)] > test266151307():
                            revert with 0, 65
                        mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                        mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                        if not balanceOf[address(arg2)]:
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15809 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15809] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _18041 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_18041] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18041 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18041 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18041 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18041 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18041 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18041 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18041 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18041 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15809 + 32] = _18041
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _18068 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_18068] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18068 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18068 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18068 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18068 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18068 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18068 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18068 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18068 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15809 + 32] = _18068
                                mem[_15809 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15809 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15809 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15809 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15809 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15809 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                    revert with 0, 'Troops: This troop doesn't exist'
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33262 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33262] == Mask(32, 224, mem[_33262])
                                                if Mask(32, 224, mem[_33262]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33263 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33263] == Mask(32, 224, mem[_33263])
                                                if Mask(32, 224, mem[_33263]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33264 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33264] == Mask(32, 224, mem[_33264])
                                                if Mask(32, 224, mem[_33264]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33265 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33265] == Mask(32, 224, mem[_33265])
                                                if Mask(32, 224, mem[_33265]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33266 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33266] == Mask(32, 224, mem[_33266])
                                            if Mask(32, 224, mem[_33266]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[96] + mem[64] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33267 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33267] == Mask(32, 224, mem[_33267])
                                            if Mask(32, 224, mem[_33267]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33244 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33244] == Mask(32, 224, mem[_33244])
                                                    if Mask(32, 224, mem[_33244]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33245 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33245] == Mask(32, 224, mem[_33245])
                                                    if Mask(32, 224, mem[_33245]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33246 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33246] == Mask(32, 224, mem[_33246])
                                                    if Mask(32, 224, mem[_33246]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33247 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33247] == Mask(32, 224, mem[_33247])
                                                    if Mask(32, 224, mem[_33247]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33248 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33248] == Mask(32, 224, mem[_33248])
                                                if Mask(32, 224, mem[_33248]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33249 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33249] == Mask(32, 224, mem[_33249])
                                                if Mask(32, 224, mem[_33249]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33250 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33250] == Mask(32, 224, mem[_33250])
                                                        if Mask(32, 224, mem[_33250]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33251 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33251] == Mask(32, 224, mem[_33251])
                                                        if Mask(32, 224, mem[_33251]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33252 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33252] == Mask(32, 224, mem[_33252])
                                                        if Mask(32, 224, mem[_33252]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33253 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33253] == Mask(32, 224, mem[_33253])
                                                        if Mask(32, 224, mem[_33253]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33254 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33254] == Mask(32, 224, mem[_33254])
                                                    if Mask(32, 224, mem[_33254]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33255 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33255] == Mask(32, 224, mem[_33255])
                                                    if Mask(32, 224, mem[_33255]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33256 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33256] == Mask(32, 224, mem[_33256])
                                                        if Mask(32, 224, mem[_33256]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33257 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33257] == Mask(32, 224, mem[_33257])
                                                        if Mask(32, 224, mem[_33257]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33258 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33258] == Mask(32, 224, mem[_33258])
                                                        if Mask(32, 224, mem[_33258]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33259 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33259] == Mask(32, 224, mem[_33259])
                                                        if Mask(32, 224, mem[_33259]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33260 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33260] == Mask(32, 224, mem[_33260])
                                                    if Mask(32, 224, mem[_33260]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33261 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33261] == Mask(32, 224, mem[_33261])
                                                    if Mask(32, 224, mem[_33261]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                            idx = 0
                            while idx < balanceOf[address(arg2)]:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if idx >= balanceOf[address(arg2)]:
                                    revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                    revert with 0, 'Troops: Id must be higher than zero'
                                mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                mem[32] = 552
                                _15812 = mem[64]
                                mem[64] = mem[64] + 256
                                mem[_15812] = stor552[stor151[address(arg2)][idx]].field_0
                                if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                        revert with 0, 34
                                    _18043 = mem[64]
                                    mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                    mem[_18043] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18043 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18043 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18043 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18043 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18043 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18043 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18043 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18043 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15812 + 32] = _18043
                                else:
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                        revert with 0, 34
                                    _18073 = mem[64]
                                    mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                    mem[_18073] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                            if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                mem[_18073 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18073 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18073 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18073 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                            if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                mem[_18073 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                            else:
                                                mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                mem[_18073 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                s = _18073 + 32
                                                t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                while _18073 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                    mem[s + 32] = stor1[t].field_0
                                                    s = s + 32
                                                    t = t + 1
                                                    continue 
                                    mem[_15812 + 32] = _18073
                                mem[_15812 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                mem[_15812 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                mem[_15812 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                mem[_15812 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                mem[_15812 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                mem[_15812 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                    revert with 0, 'Troops: This troop doesn't exist'
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                continue 
                            idx = 0
                            s = 0
                            while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                    revert with 0, 50
                                mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                mem[32] = 552
                                if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s
                                    continue 
                                if s == -1:
                                    revert with 0, 17
                                if idx == -1:
                                    revert with 0, 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if s >= 2:
                                revert with 0, 'Each holder can not hold more than 2 Gladiators'
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                                if arg2:
                                    if arg2 == arg1:
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33286 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33286] == Mask(32, 224, mem[_33286])
                                                if Mask(32, 224, mem[_33286]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33287 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33287] == Mask(32, 224, mem[_33287])
                                                if Mask(32, 224, mem[_33287]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33288 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33288] == Mask(32, 224, mem[_33288])
                                                if Mask(32, 224, mem[_33288]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33289 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33289] == Mask(32, 224, mem[_33289])
                                                if Mask(32, 224, mem[_33289]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                    approved[arg3] = 0
                                    if not ownerOf[arg3]:
                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                    emit Approval(ownerOf[arg3], 0, arg3);
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    balanceOf[address(arg1)]--
                                    if balanceOf[address(arg2)] > -2:
                                        revert with 0, 17
                                    balanceOf[address(arg2)]++
                                    mem[0] = arg3
                                    mem[32] = 103
                                    ownerOf[arg3] = arg2
                                    emit Transfer(arg1, arg2, arg3);
                                    if ext_code.size(arg2):
                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = msg.sender
                                        mem[mem[64] + 36] = arg1
                                        mem[mem[64] + 68] = arg3
                                        mem[mem[64] + 100] = 128
                                        mem[mem[64] + 132] = mem[96]
                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                        if ceil32(mem[96]) <= mem[96]:
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33290 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33290] == Mask(32, 224, mem[_33290])
                                            if Mask(32, 224, mem[_33290]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            mem[mem[96] + mem[64] + 164] = 0
                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                 gas gas_remaining wei
                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                if not return_data.size:
                                                    if not mem[96]:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with memory
                                                      from 128
                                                       len mem[96]
                                                if not return_data.size:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _33291 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_33291] == Mask(32, 224, mem[_33291])
                                            if Mask(32, 224, mem[_33291]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if arg1 == arg2:
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33268 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33268] == Mask(32, 224, mem[_33268])
                                                    if Mask(32, 224, mem[_33268]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33269 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33269] == Mask(32, 224, mem[_33269])
                                                    if Mask(32, 224, mem[_33269]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33270 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33270] == Mask(32, 224, mem[_33270])
                                                    if Mask(32, 224, mem[_33270]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33271 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33271] == Mask(32, 224, mem[_33271])
                                                    if Mask(32, 224, mem[_33271]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33272 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33272] == Mask(32, 224, mem[_33272])
                                                if Mask(32, 224, mem[_33272]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33273 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33273] == Mask(32, 224, mem[_33273])
                                                if Mask(32, 224, mem[_33273]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33274 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33274] == Mask(32, 224, mem[_33274])
                                                        if Mask(32, 224, mem[_33274]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33275 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33275] == Mask(32, 224, mem[_33275])
                                                        if Mask(32, 224, mem[_33275]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33276 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33276] == Mask(32, 224, mem[_33276])
                                                        if Mask(32, 224, mem[_33276]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33277 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33277] == Mask(32, 224, mem[_33277])
                                                        if Mask(32, 224, mem[_33277]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33278 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33278] == Mask(32, 224, mem[_33278])
                                                    if Mask(32, 224, mem[_33278]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33279 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33279] == Mask(32, 224, mem[_33279])
                                                    if Mask(32, 224, mem[_33279]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33280 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33280] == Mask(32, 224, mem[_33280])
                                                        if Mask(32, 224, mem[_33280]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33281 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33281] == Mask(32, 224, mem[_33281])
                                                        if Mask(32, 224, mem[_33281]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33282 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33282] == Mask(32, 224, mem[_33282])
                                                        if Mask(32, 224, mem[_33282]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33283 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33283] == Mask(32, 224, mem[_33283])
                                                        if Mask(32, 224, mem[_33283]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33284 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33284] == Mask(32, 224, mem[_33284])
                                                    if Mask(32, 224, mem[_33284]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33285 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33285] == Mask(32, 224, mem[_33285])
                                                    if Mask(32, 224, mem[_33285]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                        staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                gas gas_remaining wei
                               args arg2
                        mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            if not arg1:
                                stor154[arg3] = tokenByIndex.length
                                tokenByIndex.length++
                                stor72A1[stor153.length] = arg3
                            else:
                                if arg1 != arg2:
                                    if not arg1:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if balanceOf[address(arg1)] < 1:
                                        revert with 0, 17
                                    if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                        tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                        stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                    stor152[arg3] = 0
                                    tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                            if arg2:
                                if arg2 != arg1:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                    stor152[arg3] = balanceOf[address(arg2)]
                            else:
                                if tokenByIndex.length < 1:
                                    revert with 0, 17
                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                    revert with 0, 50
                                if stor154[arg3] >= tokenByIndex.length:
                                    revert with 0, 50
                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                stor154[stor153[stor153.length]] = stor154[arg3]
                                stor154[arg3] = 0
                                if not tokenByIndex.length:
                                    revert with 0, 49
                                tokenByIndex[tokenByIndex.length] = 0
                                tokenByIndex.length--
                            approved[arg3] = 0
                            if not ownerOf[arg3]:
                                revert with 0, 'ERC721: owner query for nonexistent token'
                            emit Approval(ownerOf[arg3], 0, arg3);
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            balanceOf[address(arg1)]--
                            if balanceOf[address(arg2)] > -2:
                                revert with 0, 17
                            balanceOf[address(arg2)]++
                            ownerOf[arg3] = arg2
                            emit Transfer(arg1, arg2, arg3);
                            if ext_code.size(arg2):
                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                if not ext_call.success:
                                    if not return_data.size:
                                        if not arg4.length:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with arg4[all]
                                    if not return_data.size:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15863 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15863] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18045 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18045] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18045 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18045 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18045 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18045 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18045 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18045 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18045 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18045 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15863 + 32] = _18045
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18078 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18078] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18078 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18078 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18078 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18078 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18078 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18078 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18078 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18078 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15863 + 32] = _18078
                                    mem[_15863 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15863 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15863 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15863 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15863 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15863 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33310 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33310] == Mask(32, 224, mem[_33310])
                                                    if Mask(32, 224, mem[_33310]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33311 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33311] == Mask(32, 224, mem[_33311])
                                                    if Mask(32, 224, mem[_33311]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33312 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33312] == Mask(32, 224, mem[_33312])
                                                    if Mask(32, 224, mem[_33312]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33313 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33313] == Mask(32, 224, mem[_33313])
                                                    if Mask(32, 224, mem[_33313]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33314 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33314] == Mask(32, 224, mem[_33314])
                                                if Mask(32, 224, mem[_33314]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33315 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33315] == Mask(32, 224, mem[_33315])
                                                if Mask(32, 224, mem[_33315]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33292 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33292] == Mask(32, 224, mem[_33292])
                                                        if Mask(32, 224, mem[_33292]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33293 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33293] == Mask(32, 224, mem[_33293])
                                                        if Mask(32, 224, mem[_33293]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33294 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33294] == Mask(32, 224, mem[_33294])
                                                        if Mask(32, 224, mem[_33294]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33295 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33295] == Mask(32, 224, mem[_33295])
                                                        if Mask(32, 224, mem[_33295]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33296 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33296] == Mask(32, 224, mem[_33296])
                                                    if Mask(32, 224, mem[_33296]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33297 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33297] == Mask(32, 224, mem[_33297])
                                                    if Mask(32, 224, mem[_33297]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33298 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33298] == Mask(32, 224, mem[_33298])
                                                            if Mask(32, 224, mem[_33298]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33299 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33299] == Mask(32, 224, mem[_33299])
                                                            if Mask(32, 224, mem[_33299]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33300 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33300] == Mask(32, 224, mem[_33300])
                                                            if Mask(32, 224, mem[_33300]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33301 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33301] == Mask(32, 224, mem[_33301])
                                                            if Mask(32, 224, mem[_33301]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33302 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33302] == Mask(32, 224, mem[_33302])
                                                        if Mask(32, 224, mem[_33302]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33303 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33303] == Mask(32, 224, mem[_33303])
                                                        if Mask(32, 224, mem[_33303]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33304 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33304] == Mask(32, 224, mem[_33304])
                                                            if Mask(32, 224, mem[_33304]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33305 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33305] == Mask(32, 224, mem[_33305])
                                                            if Mask(32, 224, mem[_33305]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33306 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33306] == Mask(32, 224, mem[_33306])
                                                            if Mask(32, 224, mem[_33306]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33307 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33307] == Mask(32, 224, mem[_33307])
                                                            if Mask(32, 224, mem[_33307]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33308 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33308] == Mask(32, 224, mem[_33308])
                                                        if Mask(32, 224, mem[_33308]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33309 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33309] == Mask(32, 224, mem[_33309])
                                                        if Mask(32, 224, mem[_33309]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _15866 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_15866] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18047 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18047] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18047 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18047 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18047 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18047 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18047 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18047 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18047 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18047 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15866 + 32] = _18047
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18083 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18083] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18083 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18083 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18083 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18083 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18083 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18083 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18083 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18083 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_15866 + 32] = _18083
                                    mem[_15866 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_15866 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_15866 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_15866 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_15866 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_15866 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33334 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33334] == Mask(32, 224, mem[_33334])
                                                    if Mask(32, 224, mem[_33334]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33335 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33335] == Mask(32, 224, mem[_33335])
                                                    if Mask(32, 224, mem[_33335]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33336 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33336] == Mask(32, 224, mem[_33336])
                                                    if Mask(32, 224, mem[_33336]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33337 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33337] == Mask(32, 224, mem[_33337])
                                                    if Mask(32, 224, mem[_33337]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33338 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33338] == Mask(32, 224, mem[_33338])
                                                if Mask(32, 224, mem[_33338]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33339 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33339] == Mask(32, 224, mem[_33339])
                                                if Mask(32, 224, mem[_33339]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33316 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33316] == Mask(32, 224, mem[_33316])
                                                        if Mask(32, 224, mem[_33316]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33317 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33317] == Mask(32, 224, mem[_33317])
                                                        if Mask(32, 224, mem[_33317]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33318 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33318] == Mask(32, 224, mem[_33318])
                                                        if Mask(32, 224, mem[_33318]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33319 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33319] == Mask(32, 224, mem[_33319])
                                                        if Mask(32, 224, mem[_33319]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33320 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33320] == Mask(32, 224, mem[_33320])
                                                    if Mask(32, 224, mem[_33320]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33321 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33321] == Mask(32, 224, mem[_33321])
                                                    if Mask(32, 224, mem[_33321]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33322 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33322] == Mask(32, 224, mem[_33322])
                                                            if Mask(32, 224, mem[_33322]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33323 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33323] == Mask(32, 224, mem[_33323])
                                                            if Mask(32, 224, mem[_33323]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33324 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33324] == Mask(32, 224, mem[_33324])
                                                            if Mask(32, 224, mem[_33324]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33325 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33325] == Mask(32, 224, mem[_33325])
                                                            if Mask(32, 224, mem[_33325]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33326 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33326] == Mask(32, 224, mem[_33326])
                                                        if Mask(32, 224, mem[_33326]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33327 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33327] == Mask(32, 224, mem[_33327])
                                                        if Mask(32, 224, mem[_33327]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33328 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33328] == Mask(32, 224, mem[_33328])
                                                            if Mask(32, 224, mem[_33328]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33329 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33329] == Mask(32, 224, mem[_33329])
                                                            if Mask(32, 224, mem[_33329]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33330 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33330] == Mask(32, 224, mem[_33330])
                                                            if Mask(32, 224, mem[_33330]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33331 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33331] == Mask(32, 224, mem[_33331])
                                                            if Mask(32, 224, mem[_33331]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33332 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33332] == Mask(32, 224, mem[_33332])
                                                        if Mask(32, 224, mem[_33332]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33333 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33333] == Mask(32, 224, mem[_33333])
                                                        if Mask(32, 224, mem[_33333]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
    else:
        if not ownerOf[arg3]:
            revert with 0, 'ERC721: approved query for nonexistent token'
        if approved[arg3] == msg.sender:
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16013 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16013] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18049 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18049] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18049 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18049 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18049 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18049 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18049 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18049 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18049 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18049 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16013 + 32] = _18049
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18088 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18088] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18088 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18088 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18088 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18088 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18088 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18088 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18088 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18088 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16013 + 32] = _18088
                                    mem[_16013 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16013 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16013 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16013 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16013 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16013 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33358 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33358] == Mask(32, 224, mem[_33358])
                                                    if Mask(32, 224, mem[_33358]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33359 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33359] == Mask(32, 224, mem[_33359])
                                                    if Mask(32, 224, mem[_33359]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33360 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33360] == Mask(32, 224, mem[_33360])
                                                    if Mask(32, 224, mem[_33360]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33361 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33361] == Mask(32, 224, mem[_33361])
                                                    if Mask(32, 224, mem[_33361]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33362 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33362] == Mask(32, 224, mem[_33362])
                                                if Mask(32, 224, mem[_33362]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33363 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33363] == Mask(32, 224, mem[_33363])
                                                if Mask(32, 224, mem[_33363]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33340 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33340] == Mask(32, 224, mem[_33340])
                                                        if Mask(32, 224, mem[_33340]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33341 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33341] == Mask(32, 224, mem[_33341])
                                                        if Mask(32, 224, mem[_33341]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33342 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33342] == Mask(32, 224, mem[_33342])
                                                        if Mask(32, 224, mem[_33342]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33343 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33343] == Mask(32, 224, mem[_33343])
                                                        if Mask(32, 224, mem[_33343]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33344 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33344] == Mask(32, 224, mem[_33344])
                                                    if Mask(32, 224, mem[_33344]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33345 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33345] == Mask(32, 224, mem[_33345])
                                                    if Mask(32, 224, mem[_33345]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33346 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33346] == Mask(32, 224, mem[_33346])
                                                            if Mask(32, 224, mem[_33346]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33347 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33347] == Mask(32, 224, mem[_33347])
                                                            if Mask(32, 224, mem[_33347]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33348 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33348] == Mask(32, 224, mem[_33348])
                                                            if Mask(32, 224, mem[_33348]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33349 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33349] == Mask(32, 224, mem[_33349])
                                                            if Mask(32, 224, mem[_33349]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33350 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33350] == Mask(32, 224, mem[_33350])
                                                        if Mask(32, 224, mem[_33350]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33351 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33351] == Mask(32, 224, mem[_33351])
                                                        if Mask(32, 224, mem[_33351]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33352 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33352] == Mask(32, 224, mem[_33352])
                                                            if Mask(32, 224, mem[_33352]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33353 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33353] == Mask(32, 224, mem[_33353])
                                                            if Mask(32, 224, mem[_33353]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33354 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33354] == Mask(32, 224, mem[_33354])
                                                            if Mask(32, 224, mem[_33354]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33355 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33355] == Mask(32, 224, mem[_33355])
                                                            if Mask(32, 224, mem[_33355]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33356 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33356] == Mask(32, 224, mem[_33356])
                                                        if Mask(32, 224, mem[_33356]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33357 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33357] == Mask(32, 224, mem[_33357])
                                                        if Mask(32, 224, mem[_33357]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16016 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16016] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18051 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18051] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18051 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18051 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18051 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18051 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18051 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18051 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18051 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18051 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16016 + 32] = _18051
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18093 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18093] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18093 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18093 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18093 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18093 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18093 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18093 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18093 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18093 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16016 + 32] = _18093
                                    mem[_16016 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16016 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16016 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16016 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16016 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16016 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33382 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33382] == Mask(32, 224, mem[_33382])
                                                    if Mask(32, 224, mem[_33382]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33383 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33383] == Mask(32, 224, mem[_33383])
                                                    if Mask(32, 224, mem[_33383]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33384 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33384] == Mask(32, 224, mem[_33384])
                                                    if Mask(32, 224, mem[_33384]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33385 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33385] == Mask(32, 224, mem[_33385])
                                                    if Mask(32, 224, mem[_33385]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33386 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33386] == Mask(32, 224, mem[_33386])
                                                if Mask(32, 224, mem[_33386]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33387 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33387] == Mask(32, 224, mem[_33387])
                                                if Mask(32, 224, mem[_33387]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33364 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33364] == Mask(32, 224, mem[_33364])
                                                        if Mask(32, 224, mem[_33364]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33365 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33365] == Mask(32, 224, mem[_33365])
                                                        if Mask(32, 224, mem[_33365]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33366 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33366] == Mask(32, 224, mem[_33366])
                                                        if Mask(32, 224, mem[_33366]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33367 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33367] == Mask(32, 224, mem[_33367])
                                                        if Mask(32, 224, mem[_33367]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33368 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33368] == Mask(32, 224, mem[_33368])
                                                    if Mask(32, 224, mem[_33368]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33369 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33369] == Mask(32, 224, mem[_33369])
                                                    if Mask(32, 224, mem[_33369]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33370 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33370] == Mask(32, 224, mem[_33370])
                                                            if Mask(32, 224, mem[_33370]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33371 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33371] == Mask(32, 224, mem[_33371])
                                                            if Mask(32, 224, mem[_33371]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33372 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33372] == Mask(32, 224, mem[_33372])
                                                            if Mask(32, 224, mem[_33372]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33373 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33373] == Mask(32, 224, mem[_33373])
                                                            if Mask(32, 224, mem[_33373]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33374 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33374] == Mask(32, 224, mem[_33374])
                                                        if Mask(32, 224, mem[_33374]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33375 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33375] == Mask(32, 224, mem[_33375])
                                                        if Mask(32, 224, mem[_33375]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33376 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33376] == Mask(32, 224, mem[_33376])
                                                            if Mask(32, 224, mem[_33376]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33377 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33377] == Mask(32, 224, mem[_33377])
                                                            if Mask(32, 224, mem[_33377]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33378 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33378] == Mask(32, 224, mem[_33378])
                                                            if Mask(32, 224, mem[_33378]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33379 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33379] == Mask(32, 224, mem[_33379])
                                                            if Mask(32, 224, mem[_33379]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33380 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33380] == Mask(32, 224, mem[_33380])
                                                        if Mask(32, 224, mem[_33380]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33381 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33381] == Mask(32, 224, mem[_33381])
                                                        if Mask(32, 224, mem[_33381]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not arg4.length:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with arg4[all]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16067 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16067] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18053 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18053] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18053 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18053 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18053 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18053 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18053 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18053 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18053 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18053 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16067 + 32] = _18053
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18098 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18098] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18098 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18098 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18098 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18098 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18098 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18098 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18098 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18098 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16067 + 32] = _18098
                                        mem[_16067 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16067 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16067 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16067 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16067 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16067 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33406 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33406] == Mask(32, 224, mem[_33406])
                                                        if Mask(32, 224, mem[_33406]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33407 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33407] == Mask(32, 224, mem[_33407])
                                                        if Mask(32, 224, mem[_33407]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33408 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33408] == Mask(32, 224, mem[_33408])
                                                        if Mask(32, 224, mem[_33408]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33409 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33409] == Mask(32, 224, mem[_33409])
                                                        if Mask(32, 224, mem[_33409]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33410 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33410] == Mask(32, 224, mem[_33410])
                                                    if Mask(32, 224, mem[_33410]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33411 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33411] == Mask(32, 224, mem[_33411])
                                                    if Mask(32, 224, mem[_33411]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33388 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33388] == Mask(32, 224, mem[_33388])
                                                            if Mask(32, 224, mem[_33388]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33389 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33389] == Mask(32, 224, mem[_33389])
                                                            if Mask(32, 224, mem[_33389]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33390 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33390] == Mask(32, 224, mem[_33390])
                                                            if Mask(32, 224, mem[_33390]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33391 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33391] == Mask(32, 224, mem[_33391])
                                                            if Mask(32, 224, mem[_33391]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33392 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33392] == Mask(32, 224, mem[_33392])
                                                        if Mask(32, 224, mem[_33392]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33393 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33393] == Mask(32, 224, mem[_33393])
                                                        if Mask(32, 224, mem[_33393]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33394 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33394] == Mask(32, 224, mem[_33394])
                                                                if Mask(32, 224, mem[_33394]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33395 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33395] == Mask(32, 224, mem[_33395])
                                                                if Mask(32, 224, mem[_33395]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33396 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33396] == Mask(32, 224, mem[_33396])
                                                                if Mask(32, 224, mem[_33396]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33397 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33397] == Mask(32, 224, mem[_33397])
                                                                if Mask(32, 224, mem[_33397]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33398 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33398] == Mask(32, 224, mem[_33398])
                                                            if Mask(32, 224, mem[_33398]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33399 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33399] == Mask(32, 224, mem[_33399])
                                                            if Mask(32, 224, mem[_33399]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33400 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33400] == Mask(32, 224, mem[_33400])
                                                                if Mask(32, 224, mem[_33400]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33401 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33401] == Mask(32, 224, mem[_33401])
                                                                if Mask(32, 224, mem[_33401]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33402 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33402] == Mask(32, 224, mem[_33402])
                                                                if Mask(32, 224, mem[_33402]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33403 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33403] == Mask(32, 224, mem[_33403])
                                                                if Mask(32, 224, mem[_33403]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33404 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33404] == Mask(32, 224, mem[_33404])
                                                            if Mask(32, 224, mem[_33404]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33405 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33405] == Mask(32, 224, mem[_33405])
                                                            if Mask(32, 224, mem[_33405]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16070 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16070] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18055 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18055] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18055 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18055 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18055 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18055 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18055 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18055 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18055 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18055 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16070 + 32] = _18055
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18103 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18103] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18103 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18103 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18103 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18103 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18103 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18103 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18103 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18103 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16070 + 32] = _18103
                                        mem[_16070 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16070 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16070 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16070 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16070 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16070 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33430 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33430] == Mask(32, 224, mem[_33430])
                                                        if Mask(32, 224, mem[_33430]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33431 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33431] == Mask(32, 224, mem[_33431])
                                                        if Mask(32, 224, mem[_33431]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33432 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33432] == Mask(32, 224, mem[_33432])
                                                        if Mask(32, 224, mem[_33432]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33433 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33433] == Mask(32, 224, mem[_33433])
                                                        if Mask(32, 224, mem[_33433]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33434 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33434] == Mask(32, 224, mem[_33434])
                                                    if Mask(32, 224, mem[_33434]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33435 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33435] == Mask(32, 224, mem[_33435])
                                                    if Mask(32, 224, mem[_33435]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33412 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33412] == Mask(32, 224, mem[_33412])
                                                            if Mask(32, 224, mem[_33412]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33413 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33413] == Mask(32, 224, mem[_33413])
                                                            if Mask(32, 224, mem[_33413]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33414 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33414] == Mask(32, 224, mem[_33414])
                                                            if Mask(32, 224, mem[_33414]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33415 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33415] == Mask(32, 224, mem[_33415])
                                                            if Mask(32, 224, mem[_33415]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33416 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33416] == Mask(32, 224, mem[_33416])
                                                        if Mask(32, 224, mem[_33416]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33417 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33417] == Mask(32, 224, mem[_33417])
                                                        if Mask(32, 224, mem[_33417]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33418 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33418] == Mask(32, 224, mem[_33418])
                                                                if Mask(32, 224, mem[_33418]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33419 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33419] == Mask(32, 224, mem[_33419])
                                                                if Mask(32, 224, mem[_33419]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33420 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33420] == Mask(32, 224, mem[_33420])
                                                                if Mask(32, 224, mem[_33420]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33421 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33421] == Mask(32, 224, mem[_33421])
                                                                if Mask(32, 224, mem[_33421]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33422 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33422] == Mask(32, 224, mem[_33422])
                                                            if Mask(32, 224, mem[_33422]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33423 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33423] == Mask(32, 224, mem[_33423])
                                                            if Mask(32, 224, mem[_33423]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33424 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33424] == Mask(32, 224, mem[_33424])
                                                                if Mask(32, 224, mem[_33424]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33425 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33425] == Mask(32, 224, mem[_33425])
                                                                if Mask(32, 224, mem[_33425]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33426 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33426] == Mask(32, 224, mem[_33426])
                                                                if Mask(32, 224, mem[_33426]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33427 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33427] == Mask(32, 224, mem[_33427])
                                                                if Mask(32, 224, mem[_33427]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33428 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33428] == Mask(32, 224, mem[_33428])
                                                            if Mask(32, 224, mem[_33428]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33429 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33429] == Mask(32, 224, mem[_33429])
                                                            if Mask(32, 224, mem[_33429]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
        else:
            if not stor106[stor103[arg3]][address(msg.sender)]:
                revert with 0, 'ERC721: transfer caller is not owner nor approved'
            if not ownerOf[arg3]:
                revert with 0, 'ERC721: owner query for nonexistent token'
            if ownerOf[arg3] != arg1:
                revert with 0, 'ERC721: transfer from incorrect owner'
            if not arg2:
                revert with 0, 'ERC721: transfer to the zero address'
            if owner == arg2:
                if not arg1:
                    stor154[arg3] = tokenByIndex.length
                    tokenByIndex.length++
                    stor72A1[stor153.length] = arg3
                else:
                    if arg1 != arg2:
                        if not arg1:
                            revert with 0, 'ERC721: balance query for the zero address'
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                        stor152[arg3] = 0
                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                if arg2:
                    if arg2 != arg1:
                        if not arg2:
                            revert with 0, 'ERC721: balance query for the zero address'
                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                        stor152[arg3] = balanceOf[address(arg2)]
                else:
                    if tokenByIndex.length < 1:
                        revert with 0, 17
                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                        revert with 0, 50
                    if stor154[arg3] >= tokenByIndex.length:
                        revert with 0, 50
                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                    stor154[stor153[stor153.length]] = stor154[arg3]
                    stor154[arg3] = 0
                    if not tokenByIndex.length:
                        revert with 0, 49
                    tokenByIndex[tokenByIndex.length] = 0
                    tokenByIndex.length--
                approved[arg3] = 0
                if not ownerOf[arg3]:
                    revert with 0, 'ERC721: owner query for nonexistent token'
                emit Approval(ownerOf[arg3], 0, arg3);
                if balanceOf[address(arg1)] < 1:
                    revert with 0, 17
                balanceOf[address(arg1)]--
                if balanceOf[address(arg2)] > -2:
                    revert with 0, 17
                balanceOf[address(arg2)]++
                ownerOf[arg3] = arg2
                emit Transfer(arg1, arg2, arg3);
                if ext_code.size(arg2):
                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                    if not ext_call.success:
                        if not return_data.size:
                            if not arg4.length:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with arg4[all]
                        if not return_data.size:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
            else:
                if bool(uint8(stor552[arg3].field_1536)) != 1:
                    if not arg1:
                        stor154[arg3] = tokenByIndex.length
                        tokenByIndex.length++
                        stor72A1[stor153.length] = arg3
                    else:
                        if arg1 != arg2:
                            if not arg1:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg1)] < 1:
                                revert with 0, 17
                            if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                            stor152[arg3] = 0
                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                    if arg2:
                        if arg2 != arg1:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                            stor152[arg3] = balanceOf[address(arg2)]
                    else:
                        if tokenByIndex.length < 1:
                            revert with 0, 17
                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                            revert with 0, 50
                        if stor154[arg3] >= tokenByIndex.length:
                            revert with 0, 50
                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                        stor154[stor153[stor153.length]] = stor154[arg3]
                        stor154[arg3] = 0
                        if not tokenByIndex.length:
                            revert with 0, 49
                        tokenByIndex[tokenByIndex.length] = 0
                        tokenByIndex.length--
                    approved[arg3] = 0
                    if not ownerOf[arg3]:
                        revert with 0, 'ERC721: owner query for nonexistent token'
                    emit Approval(ownerOf[arg3], 0, arg3);
                    if balanceOf[address(arg1)] < 1:
                        revert with 0, 17
                    balanceOf[address(arg1)]--
                    if balanceOf[address(arg2)] > -2:
                        revert with 0, 17
                    balanceOf[address(arg2)]++
                    ownerOf[arg3] = arg2
                    emit Transfer(arg1, arg2, arg3);
                    if ext_code.size(arg2):
                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                        if not ext_call.success:
                            if not return_data.size:
                                if not arg4.length:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with arg4[all]
                            if not return_data.size:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                        if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                else:
                    if bool(uint8(stor552[arg3].field_1544)) != 1:
                        if not arg1:
                            stor154[arg3] = tokenByIndex.length
                            tokenByIndex.length++
                            stor72A1[stor153.length] = arg3
                        else:
                            if arg1 != arg2:
                                if not arg1:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                    tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                    stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                stor152[arg3] = 0
                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                        if arg2:
                            if arg2 != arg1:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                stor152[arg3] = balanceOf[address(arg2)]
                        else:
                            if tokenByIndex.length < 1:
                                revert with 0, 17
                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                revert with 0, 50
                            if stor154[arg3] >= tokenByIndex.length:
                                revert with 0, 50
                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                            stor154[stor153[stor153.length]] = stor154[arg3]
                            stor154[arg3] = 0
                            if not tokenByIndex.length:
                                revert with 0, 49
                            tokenByIndex[tokenByIndex.length] = 0
                            tokenByIndex.length--
                        approved[arg3] = 0
                        if not ownerOf[arg3]:
                            revert with 0, 'ERC721: owner query for nonexistent token'
                        emit Approval(ownerOf[arg3], 0, arg3);
                        if balanceOf[address(arg1)] < 1:
                            revert with 0, 17
                        balanceOf[address(arg1)]--
                        if balanceOf[address(arg2)] > -2:
                            revert with 0, 17
                        balanceOf[address(arg2)]++
                        ownerOf[arg3] = arg2
                        emit Transfer(arg1, arg2, arg3);
                        if ext_code.size(arg2):
                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                            if not ext_call.success:
                                if not return_data.size:
                                    if not arg4.length:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    revert with arg4[all]
                                if not return_data.size:
                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                            if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                    else:
                        if not liquidityPoolManagerImplementationAddress:
                            if not arg2:
                                revert with 0, 'ERC721: balance query for the zero address'
                            if balanceOf[address(arg2)] > test266151307():
                                revert with 0, 65
                            mem[ceil32(ceil32(arg4.length)) + 97] = balanceOf[address(arg2)]
                            mem[64] = ceil32(ceil32(arg4.length)) + (32 * balanceOf[address(arg2)]) + 129
                            if not balanceOf[address(arg2)]:
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16217 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16217] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18057 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18057] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18057 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18057 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18057 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18057 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18057 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18057 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18057 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18057 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16217 + 32] = _18057
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18108 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18108] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18108 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18108 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18108 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18108 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18108 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18108 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18108 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18108 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16217 + 32] = _18108
                                    mem[_16217 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16217 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16217 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16217 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16217 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16217 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33454 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33454] == Mask(32, 224, mem[_33454])
                                                    if Mask(32, 224, mem[_33454]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33455 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33455] == Mask(32, 224, mem[_33455])
                                                    if Mask(32, 224, mem[_33455]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33456 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33456] == Mask(32, 224, mem[_33456])
                                                    if Mask(32, 224, mem[_33456]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33457 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33457] == Mask(32, 224, mem[_33457])
                                                    if Mask(32, 224, mem[_33457]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33458 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33458] == Mask(32, 224, mem[_33458])
                                                if Mask(32, 224, mem[_33458]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33459 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33459] == Mask(32, 224, mem[_33459])
                                                if Mask(32, 224, mem[_33459]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33436 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33436] == Mask(32, 224, mem[_33436])
                                                        if Mask(32, 224, mem[_33436]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33437 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33437] == Mask(32, 224, mem[_33437])
                                                        if Mask(32, 224, mem[_33437]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33438 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33438] == Mask(32, 224, mem[_33438])
                                                        if Mask(32, 224, mem[_33438]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33439 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33439] == Mask(32, 224, mem[_33439])
                                                        if Mask(32, 224, mem[_33439]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33440 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33440] == Mask(32, 224, mem[_33440])
                                                    if Mask(32, 224, mem[_33440]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33441 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33441] == Mask(32, 224, mem[_33441])
                                                    if Mask(32, 224, mem[_33441]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33442 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33442] == Mask(32, 224, mem[_33442])
                                                            if Mask(32, 224, mem[_33442]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33443 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33443] == Mask(32, 224, mem[_33443])
                                                            if Mask(32, 224, mem[_33443]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33444 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33444] == Mask(32, 224, mem[_33444])
                                                            if Mask(32, 224, mem[_33444]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33445 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33445] == Mask(32, 224, mem[_33445])
                                                            if Mask(32, 224, mem[_33445]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33446 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33446] == Mask(32, 224, mem[_33446])
                                                        if Mask(32, 224, mem[_33446]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33447 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33447] == Mask(32, 224, mem[_33447])
                                                        if Mask(32, 224, mem[_33447]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33448 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33448] == Mask(32, 224, mem[_33448])
                                                            if Mask(32, 224, mem[_33448]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33449 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33449] == Mask(32, 224, mem[_33449])
                                                            if Mask(32, 224, mem[_33449]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33450 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33450] == Mask(32, 224, mem[_33450])
                                                            if Mask(32, 224, mem[_33450]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33451 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33451] == Mask(32, 224, mem[_33451])
                                                            if Mask(32, 224, mem[_33451]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33452 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33452] == Mask(32, 224, mem[_33452])
                                                        if Mask(32, 224, mem[_33452]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33453 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33453] == Mask(32, 224, mem[_33453])
                                                        if Mask(32, 224, mem[_33453]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                mem[ceil32(ceil32(arg4.length)) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                idx = 0
                                while idx < balanceOf[address(arg2)]:
                                    if not arg2:
                                        revert with 0, 'ERC721: balance query for the zero address'
                                    if idx >= balanceOf[address(arg2)]:
                                        revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                    if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                        revert with 0, 'Troops: Id must be higher than zero'
                                    mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    mem[32] = 552
                                    _16220 = mem[64]
                                    mem[64] = mem[64] + 256
                                    mem[_16220] = stor552[stor151[address(arg2)][idx]].field_0
                                    if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                            revert with 0, 34
                                        _18059 = mem[64]
                                        mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                        mem[_18059] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18059 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18059 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18059 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18059 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18059 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18059 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18059 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18059 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16220 + 32] = _18059
                                    else:
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                            revert with 0, 34
                                        _18113 = mem[64]
                                        mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                        mem[_18113] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                    mem[_18113 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18113 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18113 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18113 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    mem[_18113 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                else:
                                                    mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                    mem[_18113 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                    s = _18113 + 32
                                                    t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                    while _18113 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                        mem[s + 32] = stor1[t].field_0
                                                        s = s + 32
                                                        t = t + 1
                                                        continue 
                                        mem[_16220 + 32] = _18113
                                    mem[_16220 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                    mem[_16220 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                    mem[_16220 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                    mem[_16220 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                    mem[_16220 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                    mem[_16220 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                    if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                        revert with 0, 'Troops: This troop doesn't exist'
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    continue 
                                idx = 0
                                s = 0
                                while idx < mem[ceil32(ceil32(arg4.length)) + 97]:
                                    if idx >= mem[ceil32(ceil32(arg4.length)) + 97]:
                                        revert with 0, 50
                                    mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]
                                    mem[32] = 552
                                    if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + 129]].field_1544):
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s
                                        continue 
                                    if s == -1:
                                        revert with 0, 17
                                    if idx == -1:
                                        revert with 0, 17
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if s >= 2:
                                    revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                    if arg2:
                                        if arg2 == arg1:
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33478 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33478] == Mask(32, 224, mem[_33478])
                                                    if Mask(32, 224, mem[_33478]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33479 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33479] == Mask(32, 224, mem[_33479])
                                                    if Mask(32, 224, mem[_33479]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg2:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                            stor152[arg3] = balanceOf[address(arg2)]
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33480 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33480] == Mask(32, 224, mem[_33480])
                                                    if Mask(32, 224, mem[_33480]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33481 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33481] == Mask(32, 224, mem[_33481])
                                                    if Mask(32, 224, mem[_33481]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if tokenByIndex.length < 1:
                                            revert with 0, 17
                                        if tokenByIndex.length - 1 >= tokenByIndex.length:
                                            revert with 0, 50
                                        if stor154[arg3] >= tokenByIndex.length:
                                            revert with 0, 50
                                        tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                        stor154[stor153[stor153.length]] = stor154[arg3]
                                        stor154[arg3] = 0
                                        if not tokenByIndex.length:
                                            revert with 0, 49
                                        tokenByIndex[tokenByIndex.length] = 0
                                        tokenByIndex.length--
                                        approved[arg3] = 0
                                        if not ownerOf[arg3]:
                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                        emit Approval(ownerOf[arg3], 0, arg3);
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        balanceOf[address(arg1)]--
                                        if balanceOf[address(arg2)] > -2:
                                            revert with 0, 17
                                        balanceOf[address(arg2)]++
                                        mem[0] = arg3
                                        mem[32] = 103
                                        ownerOf[arg3] = arg2
                                        emit Transfer(arg1, arg2, arg3);
                                        if ext_code.size(arg2):
                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = msg.sender
                                            mem[mem[64] + 36] = arg1
                                            mem[mem[64] + 68] = arg3
                                            mem[mem[64] + 100] = 128
                                            mem[mem[64] + 132] = mem[96]
                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                            if ceil32(mem[96]) <= mem[96]:
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33482 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33482] == Mask(32, 224, mem[_33482])
                                                if Mask(32, 224, mem[_33482]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                mem[mem[96] + mem[64] + 164] = 0
                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                mem[mem[64]] = ext_call.return_data[0]
                                                if not ext_call.success:
                                                    if not return_data.size:
                                                        if not mem[96]:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with memory
                                                          from 128
                                                           len mem[96]
                                                    if not return_data.size:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                _33483 = mem[64]
                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                require return_data.size >= 32
                                                require mem[_33483] == Mask(32, 224, mem[_33483])
                                                if Mask(32, 224, mem[_33483]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    if arg1 == arg2:
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33460 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33460] == Mask(32, 224, mem[_33460])
                                                        if Mask(32, 224, mem[_33460]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33461 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33461] == Mask(32, 224, mem[_33461])
                                                        if Mask(32, 224, mem[_33461]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33462 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33462] == Mask(32, 224, mem[_33462])
                                                        if Mask(32, 224, mem[_33462]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33463 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33463] == Mask(32, 224, mem[_33463])
                                                        if Mask(32, 224, mem[_33463]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33464 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33464] == Mask(32, 224, mem[_33464])
                                                    if Mask(32, 224, mem[_33464]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33465 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33465] == Mask(32, 224, mem[_33465])
                                                    if Mask(32, 224, mem[_33465]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33466 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33466] == Mask(32, 224, mem[_33466])
                                                            if Mask(32, 224, mem[_33466]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33467 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33467] == Mask(32, 224, mem[_33467])
                                                            if Mask(32, 224, mem[_33467]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33468 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33468] == Mask(32, 224, mem[_33468])
                                                            if Mask(32, 224, mem[_33468]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33469 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33469] == Mask(32, 224, mem[_33469])
                                                            if Mask(32, 224, mem[_33469]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33470 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33470] == Mask(32, 224, mem[_33470])
                                                        if Mask(32, 224, mem[_33470]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33471 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33471] == Mask(32, 224, mem[_33471])
                                                        if Mask(32, 224, mem[_33471]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                            stor152[arg3] = 0
                                            tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33472 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33472] == Mask(32, 224, mem[_33472])
                                                            if Mask(32, 224, mem[_33472]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33473 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33473] == Mask(32, 224, mem[_33473])
                                                            if Mask(32, 224, mem[_33473]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33474 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33474] == Mask(32, 224, mem[_33474])
                                                            if Mask(32, 224, mem[_33474]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33475 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33475] == Mask(32, 224, mem[_33475])
                                                            if Mask(32, 224, mem[_33475]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33476 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33476] == Mask(32, 224, mem[_33476])
                                                        if Mask(32, 224, mem[_33476]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33477 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33477] == Mask(32, 224, mem[_33477])
                                                        if Mask(32, 224, mem[_33477]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                        else:
                            mem[ceil32(ceil32(arg4.length)) + 101] = arg2
                            staticcall liquidityPoolManagerImplementationAddress.0xb278110f with:
                                    gas gas_remaining wei
                                   args arg2
                            mem[ceil32(ceil32(arg4.length)) + 97] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not arg1:
                                    stor154[arg3] = tokenByIndex.length
                                    tokenByIndex.length++
                                    stor72A1[stor153.length] = arg3
                                else:
                                    if arg1 != arg2:
                                        if not arg1:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if balanceOf[address(arg1)] < 1:
                                            revert with 0, 17
                                        if balanceOf[address(arg1)] - 1 != stor152[arg3]:
                                            tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                            stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                        stor152[arg3] = 0
                                        tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                if arg2:
                                    if arg2 != arg1:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                        stor152[arg3] = balanceOf[address(arg2)]
                                else:
                                    if tokenByIndex.length < 1:
                                        revert with 0, 17
                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                        revert with 0, 50
                                    if stor154[arg3] >= tokenByIndex.length:
                                        revert with 0, 50
                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                    stor154[arg3] = 0
                                    if not tokenByIndex.length:
                                        revert with 0, 49
                                    tokenByIndex[tokenByIndex.length] = 0
                                    tokenByIndex.length--
                                approved[arg3] = 0
                                if not ownerOf[arg3]:
                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                emit Approval(ownerOf[arg3], 0, arg3);
                                if balanceOf[address(arg1)] < 1:
                                    revert with 0, 17
                                balanceOf[address(arg1)]--
                                if balanceOf[address(arg2)] > -2:
                                    revert with 0, 17
                                balanceOf[address(arg2)]++
                                ownerOf[arg3] = arg2
                                emit Transfer(arg1, arg2, arg3);
                                if ext_code.size(arg2):
                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args msg.sender, address(arg1), arg3, Array(len=arg4.length, data=arg4[all])
                                    if not ext_call.success:
                                        if not return_data.size:
                                            if not arg4.length:
                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            revert with arg4[all]
                                        if not return_data.size:
                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == Mask(32, 224, ext_call.return_data[0])
                                    if Mask(32, 224, ext_call.return_data[0]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                            else:
                                if not arg2:
                                    revert with 0, 'ERC721: balance query for the zero address'
                                if balanceOf[address(arg2)] > test266151307():
                                    revert with 0, 65
                                mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97] = balanceOf[address(arg2)]
                                mem[64] = ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + (32 * balanceOf[address(arg2)]) + 129
                                if not balanceOf[address(arg2)]:
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16271 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16271] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18061 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18061] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18061 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18061 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18061 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18061 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18061 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18061 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18061 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18061 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16271 + 32] = _18061
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18118 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18118] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18118 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18118 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18118 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18118 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18118 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18118 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18118 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18118 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16271 + 32] = _18118
                                        mem[_16271 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16271 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16271 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16271 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16271 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16271 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33502 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33502] == Mask(32, 224, mem[_33502])
                                                        if Mask(32, 224, mem[_33502]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33503 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33503] == Mask(32, 224, mem[_33503])
                                                        if Mask(32, 224, mem[_33503]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33504 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33504] == Mask(32, 224, mem[_33504])
                                                        if Mask(32, 224, mem[_33504]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33505 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33505] == Mask(32, 224, mem[_33505])
                                                        if Mask(32, 224, mem[_33505]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33506 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33506] == Mask(32, 224, mem[_33506])
                                                    if Mask(32, 224, mem[_33506]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33507 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33507] == Mask(32, 224, mem[_33507])
                                                    if Mask(32, 224, mem[_33507]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33484 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33484] == Mask(32, 224, mem[_33484])
                                                            if Mask(32, 224, mem[_33484]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33485 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33485] == Mask(32, 224, mem[_33485])
                                                            if Mask(32, 224, mem[_33485]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33486 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33486] == Mask(32, 224, mem[_33486])
                                                            if Mask(32, 224, mem[_33486]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33487 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33487] == Mask(32, 224, mem[_33487])
                                                            if Mask(32, 224, mem[_33487]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33488 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33488] == Mask(32, 224, mem[_33488])
                                                        if Mask(32, 224, mem[_33488]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33489 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33489] == Mask(32, 224, mem[_33489])
                                                        if Mask(32, 224, mem[_33489]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33490 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33490] == Mask(32, 224, mem[_33490])
                                                                if Mask(32, 224, mem[_33490]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33491 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33491] == Mask(32, 224, mem[_33491])
                                                                if Mask(32, 224, mem[_33491]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33492 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33492] == Mask(32, 224, mem[_33492])
                                                                if Mask(32, 224, mem[_33492]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33493 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33493] == Mask(32, 224, mem[_33493])
                                                                if Mask(32, 224, mem[_33493]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33494 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33494] == Mask(32, 224, mem[_33494])
                                                            if Mask(32, 224, mem[_33494]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33495 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33495] == Mask(32, 224, mem[_33495])
                                                            if Mask(32, 224, mem[_33495]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33496 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33496] == Mask(32, 224, mem[_33496])
                                                                if Mask(32, 224, mem[_33496]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33497 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33497] == Mask(32, 224, mem[_33497])
                                                                if Mask(32, 224, mem[_33497]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33498 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33498] == Mask(32, 224, mem[_33498])
                                                                if Mask(32, 224, mem[_33498]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33499 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33499] == Mask(32, 224, mem[_33499])
                                                                if Mask(32, 224, mem[_33499]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33500 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33500] == Mask(32, 224, mem[_33500])
                                                            if Mask(32, 224, mem[_33500]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33501 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33501] == Mask(32, 224, mem[_33501])
                                                            if Mask(32, 224, mem[_33501]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                else:
                                    mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129 len 32 * balanceOf[address(arg2)]] = call.data[calldata.size len 32 * balanceOf[address(arg2)]]
                                    idx = 0
                                    while idx < balanceOf[address(arg2)]:
                                        if not arg2:
                                            revert with 0, 'ERC721: balance query for the zero address'
                                        if idx >= balanceOf[address(arg2)]:
                                            revert with 0, 'ERC721Enumerable: owner index out of bounds'
                                        if tokenOfOwnerByIndex[address(arg2)][idx] <= 0:
                                            revert with 0, 'Troops: Id must be higher than zero'
                                        mem[0] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        mem[32] = 552
                                        _16274 = mem[64]
                                        mem[64] = mem[64] + 256
                                        mem[_16274] = stor552[stor151[address(arg2)][idx]].field_0
                                        if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                revert with 0, 34
                                            _18063 = mem[64]
                                            mem[64] = mem[64] + ceil32(uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) + 32
                                            mem[_18063] = uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18063 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18063 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18063 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18063 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18063 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18063 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18063 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18063 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16274 + 32] = _18063
                                        else:
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                revert with 0, 34
                                            _18123 = mem[64]
                                            mem[64] = mem[64] + ceil32(stor552[stor151[address(arg2)][idx]].field_257 % 128) + 32
                                            mem[_18123] = stor552[stor151[address(arg2)][idx]].field_257 % 128
                                            if bool(stor552[stor151[address(arg2)][idx]].field_256):
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5 < 32:
                                                    revert with 0, 34
                                                if Mask(256, -1, stor552[stor151[address(arg2)][idx]].field_256):
                                                    if 31 >= uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5:
                                                        mem[_18123 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18123 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18123 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18123 + (uint255(stor552[stor151[address(arg2)][idx]].field_256) * 0.5) > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            else:
                                                if bool(stor552[stor151[address(arg2)][idx]].field_256) == stor552[stor151[address(arg2)][idx]].field_257 % 128 < 32:
                                                    revert with 0, 34
                                                if stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                    if 31 >= stor552[stor151[address(arg2)][idx]].field_257 % 128:
                                                        mem[_18123 + 32] = 256 * Mask(248, 0, stor552[stor151[address(arg2)][idx]].field_264)
                                                    else:
                                                        mem[0] = sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1
                                                        mem[_18123 + 32] = stor552[stor151[address(arg2)][idx]][1].field_0
                                                        s = _18123 + 32
                                                        t = sha3(sha3(tokenOfOwnerByIndex[address(arg2)][idx], 552) + 1)
                                                        while _18123 + stor552[stor151[address(arg2)][idx]].field_257 % 128 > s:
                                                            mem[s + 32] = stor1[t].field_0
                                                            s = s + 32
                                                            t = t + 1
                                                            continue 
                                            mem[_16274 + 32] = _18123
                                        mem[_16274 + 64] = stor552[stor151[address(arg2)][idx]].field_512
                                        mem[_16274 + 96] = stor552[stor151[address(arg2)][idx]].field_768
                                        mem[_16274 + 128] = stor552[stor151[address(arg2)][idx]].field_1024
                                        mem[_16274 + 160] = stor552[stor151[address(arg2)][idx]].field_1280
                                        mem[_16274 + 192] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1536))
                                        mem[_16274 + 224] = bool(uint8(stor552[stor151[address(arg2)][idx]].field_1544))
                                        if not uint8(stor552[stor151[address(arg2)][idx]].field_1536):
                                            revert with 0, 'Troops: This troop doesn't exist'
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129] = tokenOfOwnerByIndex[address(arg2)][idx]
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        continue 
                                    idx = 0
                                    s = 0
                                    while idx < mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                        if idx >= mem[ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 97]:
                                            revert with 0, 50
                                        mem[0] = mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]
                                        mem[32] = 552
                                        if not uint8(stor552[mem[(32 * idx) + ceil32(ceil32(arg4.length)) + ceil32(return_data.size) + 129]].field_1544):
                                            if idx == -1:
                                                revert with 0, 17
                                            idx = idx + 1
                                            s = s
                                            continue 
                                        if s == -1:
                                            revert with 0, 17
                                        if idx == -1:
                                            revert with 0, 17
                                        idx = idx + 1
                                        s = s + 1
                                        continue 
                                    if s >= 2:
                                        revert with 0, 'Each holder can not hold more than 2 Gladiators'
                                    if not arg1:
                                        stor154[arg3] = tokenByIndex.length
                                        tokenByIndex.length++
                                        stor72A1[stor153.length] = arg3
                                        if arg2:
                                            if arg2 == arg1:
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33526 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33526] == Mask(32, 224, mem[_33526])
                                                        if Mask(32, 224, mem[_33526]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33527 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33527] == Mask(32, 224, mem[_33527])
                                                        if Mask(32, 224, mem[_33527]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if not arg2:
                                                    revert with 0, 'ERC721: balance query for the zero address'
                                                tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                stor152[arg3] = balanceOf[address(arg2)]
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33528 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33528] == Mask(32, 224, mem[_33528])
                                                        if Mask(32, 224, mem[_33528]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33529 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33529] == Mask(32, 224, mem[_33529])
                                                        if Mask(32, 224, mem[_33529]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if tokenByIndex.length < 1:
                                                revert with 0, 17
                                            if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                revert with 0, 50
                                            if stor154[arg3] >= tokenByIndex.length:
                                                revert with 0, 50
                                            tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                            stor154[stor153[stor153.length]] = stor154[arg3]
                                            stor154[arg3] = 0
                                            if not tokenByIndex.length:
                                                revert with 0, 49
                                            tokenByIndex[tokenByIndex.length] = 0
                                            tokenByIndex.length--
                                            approved[arg3] = 0
                                            if not ownerOf[arg3]:
                                                revert with 0, 'ERC721: owner query for nonexistent token'
                                            emit Approval(ownerOf[arg3], 0, arg3);
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            balanceOf[address(arg1)]--
                                            if balanceOf[address(arg2)] > -2:
                                                revert with 0, 17
                                            balanceOf[address(arg2)]++
                                            mem[0] = arg3
                                            mem[32] = 103
                                            ownerOf[arg3] = arg2
                                            emit Transfer(arg1, arg2, arg3);
                                            if ext_code.size(arg2):
                                                mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = msg.sender
                                                mem[mem[64] + 36] = arg1
                                                mem[mem[64] + 68] = arg3
                                                mem[mem[64] + 100] = 128
                                                mem[mem[64] + 132] = mem[96]
                                                mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                if ceil32(mem[96]) <= mem[96]:
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33530 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33530] == Mask(32, 224, mem[_33530])
                                                    if Mask(32, 224, mem[_33530]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    mem[mem[96] + mem[64] + 164] = 0
                                                    call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                    mem[mem[64]] = ext_call.return_data[0]
                                                    if not ext_call.success:
                                                        if not return_data.size:
                                                            if not mem[96]:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with memory
                                                              from 128
                                                               len mem[96]
                                                        if not return_data.size:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    _33531 = mem[64]
                                                    mem[64] = mem[64] + ceil32(return_data.size)
                                                    require return_data.size >= 32
                                                    require mem[_33531] == Mask(32, 224, mem[_33531])
                                                    if Mask(32, 224, mem[_33531]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                    else:
                                        if arg1 == arg2:
                                            if arg2:
                                                if arg2 == arg1:
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33508 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33508] == Mask(32, 224, mem[_33508])
                                                            if Mask(32, 224, mem[_33508]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33509 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33509] == Mask(32, 224, mem[_33509])
                                                            if Mask(32, 224, mem[_33509]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if not arg2:
                                                        revert with 0, 'ERC721: balance query for the zero address'
                                                    tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                    stor152[arg3] = balanceOf[address(arg2)]
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33510 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33510] == Mask(32, 224, mem[_33510])
                                                            if Mask(32, 224, mem[_33510]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33511 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33511] == Mask(32, 224, mem[_33511])
                                                            if Mask(32, 224, mem[_33511]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                if tokenByIndex.length < 1:
                                                    revert with 0, 17
                                                if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                    revert with 0, 50
                                                if stor154[arg3] >= tokenByIndex.length:
                                                    revert with 0, 50
                                                tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                stor154[stor153[stor153.length]] = stor154[arg3]
                                                stor154[arg3] = 0
                                                if not tokenByIndex.length:
                                                    revert with 0, 49
                                                tokenByIndex[tokenByIndex.length] = 0
                                                tokenByIndex.length--
                                                approved[arg3] = 0
                                                if not ownerOf[arg3]:
                                                    revert with 0, 'ERC721: owner query for nonexistent token'
                                                emit Approval(ownerOf[arg3], 0, arg3);
                                                if balanceOf[address(arg1)] < 1:
                                                    revert with 0, 17
                                                balanceOf[address(arg1)]--
                                                if balanceOf[address(arg2)] > -2:
                                                    revert with 0, 17
                                                balanceOf[address(arg2)]++
                                                mem[0] = arg3
                                                mem[32] = 103
                                                ownerOf[arg3] = arg2
                                                emit Transfer(arg1, arg2, arg3);
                                                if ext_code.size(arg2):
                                                    mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = msg.sender
                                                    mem[mem[64] + 36] = arg1
                                                    mem[mem[64] + 68] = arg3
                                                    mem[mem[64] + 100] = 128
                                                    mem[mem[64] + 132] = mem[96]
                                                    mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                    if ceil32(mem[96]) <= mem[96]:
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33512 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33512] == Mask(32, 224, mem[_33512])
                                                        if Mask(32, 224, mem[_33512]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        mem[mem[96] + mem[64] + 164] = 0
                                                        call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                        mem[mem[64]] = ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            if not return_data.size:
                                                                if not mem[96]:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with memory
                                                                  from 128
                                                                   len mem[96]
                                                            if not return_data.size:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        _33513 = mem[64]
                                                        mem[64] = mem[64] + ceil32(return_data.size)
                                                        require return_data.size >= 32
                                                        require mem[_33513] == Mask(32, 224, mem[_33513])
                                                        if Mask(32, 224, mem[_33513]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                        else:
                                            if not arg1:
                                                revert with 0, 'ERC721: balance query for the zero address'
                                            if balanceOf[address(arg1)] < 1:
                                                revert with 0, 17
                                            if balanceOf[address(arg1)] - 1 == stor152[arg3]:
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33514 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33514] == Mask(32, 224, mem[_33514])
                                                                if Mask(32, 224, mem[_33514]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33515 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33515] == Mask(32, 224, mem[_33515])
                                                                if Mask(32, 224, mem[_33515]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33516 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33516] == Mask(32, 224, mem[_33516])
                                                                if Mask(32, 224, mem[_33516]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33517 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33517] == Mask(32, 224, mem[_33517])
                                                                if Mask(32, 224, mem[_33517]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33518 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33518] == Mask(32, 224, mem[_33518])
                                                            if Mask(32, 224, mem[_33518]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33519 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33519] == Mask(32, 224, mem[_33519])
                                                            if Mask(32, 224, mem[_33519]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                            else:
                                                tokenOfOwnerByIndex[address(arg1)][stor152[arg3]] = tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1]
                                                stor152[stor151[address(arg1)][stor104[address(arg1)] - 1]] = stor152[arg3]
                                                stor152[arg3] = 0
                                                tokenOfOwnerByIndex[address(arg1)][stor104[address(arg1)] - 1] = 0
                                                if arg2:
                                                    if arg2 == arg1:
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33520 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33520] == Mask(32, 224, mem[_33520])
                                                                if Mask(32, 224, mem[_33520]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33521 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33521] == Mask(32, 224, mem[_33521])
                                                                if Mask(32, 224, mem[_33521]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                    else:
                                                        if not arg2:
                                                            revert with 0, 'ERC721: balance query for the zero address'
                                                        tokenOfOwnerByIndex[address(arg2)][stor104[address(arg2)]] = arg3
                                                        stor152[arg3] = balanceOf[address(arg2)]
                                                        approved[arg3] = 0
                                                        if not ownerOf[arg3]:
                                                            revert with 0, 'ERC721: owner query for nonexistent token'
                                                        emit Approval(ownerOf[arg3], 0, arg3);
                                                        if balanceOf[address(arg1)] < 1:
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)]--
                                                        if balanceOf[address(arg2)] > -2:
                                                            revert with 0, 17
                                                        balanceOf[address(arg2)]++
                                                        mem[0] = arg3
                                                        mem[32] = 103
                                                        ownerOf[arg3] = arg2
                                                        emit Transfer(arg1, arg2, arg3);
                                                        if ext_code.size(arg2):
                                                            mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = msg.sender
                                                            mem[mem[64] + 36] = arg1
                                                            mem[mem[64] + 68] = arg3
                                                            mem[mem[64] + 100] = 128
                                                            mem[mem[64] + 132] = mem[96]
                                                            mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                            if ceil32(mem[96]) <= mem[96]:
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33522 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33522] == Mask(32, 224, mem[_33522])
                                                                if Mask(32, 224, mem[_33522]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                            else:
                                                                mem[mem[96] + mem[64] + 164] = 0
                                                                call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                                mem[mem[64]] = ext_call.return_data[0]
                                                                if not ext_call.success:
                                                                    if not return_data.size:
                                                                        if not mem[96]:
                                                                            revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                        revert with memory
                                                                          from 128
                                                                           len mem[96]
                                                                    if not return_data.size:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                _33523 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                require mem[_33523] == Mask(32, 224, mem[_33523])
                                                                if Mask(32, 224, mem[_33523]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                else:
                                                    if tokenByIndex.length < 1:
                                                        revert with 0, 17
                                                    if tokenByIndex.length - 1 >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    if stor154[arg3] >= tokenByIndex.length:
                                                        revert with 0, 50
                                                    tokenByIndex[stor154[arg3]] = tokenByIndex[tokenByIndex.length]
                                                    stor154[stor153[stor153.length]] = stor154[arg3]
                                                    stor154[arg3] = 0
                                                    if not tokenByIndex.length:
                                                        revert with 0, 49
                                                    tokenByIndex[tokenByIndex.length] = 0
                                                    tokenByIndex.length--
                                                    approved[arg3] = 0
                                                    if not ownerOf[arg3]:
                                                        revert with 0, 'ERC721: owner query for nonexistent token'
                                                    emit Approval(ownerOf[arg3], 0, arg3);
                                                    if balanceOf[address(arg1)] < 1:
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)]--
                                                    if balanceOf[address(arg2)] > -2:
                                                        revert with 0, 17
                                                    balanceOf[address(arg2)]++
                                                    mem[0] = arg3
                                                    mem[32] = 103
                                                    ownerOf[arg3] = arg2
                                                    emit Transfer(arg1, arg2, arg3);
                                                    if ext_code.size(arg2):
                                                        mem[mem[64]] = 0x150b7a0200000000000000000000000000000000000000000000000000000000
                                                        mem[mem[64] + 4] = msg.sender
                                                        mem[mem[64] + 36] = arg1
                                                        mem[mem[64] + 68] = arg3
                                                        mem[mem[64] + 100] = 128
                                                        mem[mem[64] + 132] = mem[96]
                                                        mem[mem[64] + 164 len ceil32(mem[96])] = mem[128 len ceil32(mem[96])]
                                                        if ceil32(mem[96]) <= mem[96]:
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33524 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33524] == Mask(32, 224, mem[_33524])
                                                            if Mask(32, 224, mem[_33524]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                        else:
                                                            mem[mem[96] + mem[64] + 164] = 0
                                                            call arg2.onERC721Received(address arg1, address arg2, uint256 arg3, bytes arg4) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, address(arg1), arg3, Array(len=mem[96], data=mem[mem[64] + 164 len ceil32(mem[96])])
                                                            mem[mem[64]] = ext_call.return_data[0]
                                                            if not ext_call.success:
                                                                if not return_data.size:
                                                                    if not mem[96]:
                                                                        revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                    revert with memory
                                                                      from 128
                                                                       len mem[96]
                                                                if not return_data.size:
                                                                    revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            _33525 = mem[64]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            require mem[_33525] == Mask(32, 224, mem[_33525])
                                                            if Mask(32, 224, mem[_33525]) != 0x150b7a0200000000000000000000000000000000000000000000000000000000:
                                                                revert with 0, 'ERC721: transfer to non ERC721Receiver implementer'
}



}
