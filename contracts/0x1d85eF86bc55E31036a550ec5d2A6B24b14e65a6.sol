contract main {




// =====================  Runtime code  =====================


#
#  - sub_b20e7344(?)
#
const sub_4229dbe3(?) = eth.balance(this.address)


uint16 stor0;
address creatorAddress; offset 16
address owner;
mapping of uint8 stor2;
mapping of address tokenList;
mapping of uint256 sub_ba27f50b;
uint256 stor5;
address sub_13764611Address;
address sub_2354c7aeAddress;
address sub_16a84344Address;
address tokenAddr;
array of struct stor10;
array of struct stor11;

function creator() {
    return creatorAddress
}

function sub_13764611(?) {
    return sub_13764611Address
}

function sub_16a84344(?) {
    return sub_16a84344Address
}

function sub_2354c7ae(?) {
    return sub_2354c7aeAddress
}

function tokenAddr() {
    return tokenAddr
}

function owner() {
    return owner
}

function tokenList(uint256 arg1) {
    require calldata.size - 4 >= 32
    return tokenList[arg1]
}

function sub_ba27f50b(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_ba27f50b[arg1]
}

function whiteListed(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(stor2[arg1])
}

function addWhite(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    stor2[address(arg1)] = 1
}

function removeWhite(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    stor2[address(arg1)] = 0
}

function setOwner(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    if stor0 > 65534:
        revert with 'NH{q', 17
    stor0 = uint16(stor0 + 1)
    if stor0 >= 2:
        stor0 = 0
        owner = arg1
}

function balanceOfToken(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function withdrawAllMoney() {
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    if eth.balance(this.address):
        call owner with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
}

function sub_4b8eb24c(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    if not sub_ba27f50b[address(arg1)]:
        if stor5 > -2:
            revert with 'NH{q', 17
        stor5++
        sub_ba27f50b[address(arg1)] = stor5
        tokenList[stor5] = address(arg1)
}

function withdrawNFT(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    call arg1.0x23b872dd with:
         gas gas_remaining wei
        args this.address, owner, arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_946b5793(?) {
    require calldata.size - 4 >= 96
    require arg1 == bool(arg1)
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    if arg2.length > test266151307():
        revert with 'NH{q', 65
    if ceil32(ceil32(arg2.length)) + 97 < 96 or ceil32(ceil32(arg2.length)) + 97 > test266151307():
        revert with 'NH{q', 65
    require arg2 + arg2.length + 36 <= calldata.size
    require arg3 <= test266151307()
    require calldata.size > arg3 + 35
    if arg3.length > test266151307():
        revert with 'NH{q', 65
    if ceil32(ceil32(arg3.length)) + 98 < 97 or ceil32(ceil32(arg2.length)) + ceil32(ceil32(arg3.length)) + 98 > test266151307():
        revert with 'NH{q', 65
    require arg3 + arg3.length + 36 <= calldata.size
    if arg1:
    if arg2.length:
        revert with arg2[all]
    revert with 0, 
                32,
                arg3.length,
                arg3[all],
                Mask(8 * ceil32(arg3.length) - arg3.length, -(8 * ceil32(arg3.length) + -ceil32(ceil32(arg3.length)) + 27) + 256, 32) >> -(8 * ceil32(arg3.length) + -ceil32(ceil32(arg3.length)) + 27) + 256
}

function sub_30a01c4e(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        return ext_call.return_data[0]
    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
        if not 10^ext_call.return_data[31 len 1]:
            revert with 'NH{q', 18
        return (ext_call.return_data[0] / 10^ext_call.return_data[31 len 1])
    s = 10
    t = 1
    idx = ext_call.return_data[31 len 1]
    while idx > 1:
        if s > -1 / s:
            revert with 'NH{q', 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = s * t
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 'NH{q', 17
    if not s * t:
        revert with 'NH{q', 18
    return (ext_call.return_data[0] / s * t)
}

function sub_f43cf9e6(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if arg2 and 1 > -1 / arg2:
            revert with 'NH{q', 17
        require ext_code.size(address(arg1))
        call address(arg1).0x23b872dd with:
             gas gas_remaining wei
            args msg.sender, this.address, arg2
    else:
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if arg2 and 10^ext_call.return_data[31 len 1] > -1 / arg2:
                revert with 'NH{q', 17
            require ext_code.size(address(arg1))
            call address(arg1).0x23b872dd with:
                 gas gas_remaining wei
                args msg.sender, this.address, arg2 * 10^uint8(ext_call.return_data[0])
        else:
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if arg2 and s * t > -1 / arg2:
                revert with 'NH{q', 17
            require ext_code.size(address(arg1))
            call address(arg1).0x23b872dd with:
                 gas gas_remaining wei
                args msg.sender, this.address, arg2 * s * t
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function withdrawToken(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if arg2 and 1 > -1 / arg2:
            revert with 'NH{q', 17
        require ext_code.size(arg1)
        if arg2:
            call arg1.0xa9059cbb with:
                 gas gas_remaining wei
                args owner, arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            staticcall arg1.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                require ext_code.size(arg1)
                call arg1.0xa9059cbb with:
                     gas gas_remaining wei
                    args owner, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
    else:
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if arg2 and 10^ext_call.return_data[31 len 1] > -1 / arg2:
                revert with 'NH{q', 17
            require ext_code.size(arg1)
            if arg2 * 10^ext_call.return_data[31 len 1]:
                call arg1.0xa9059cbb with:
                     gas gas_remaining wei
                    args owner, arg2 * 10^uint8(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                staticcall arg1.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require ext_code.size(arg1)
                    call arg1.0xa9059cbb with:
                         gas gas_remaining wei
                        args owner, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
        else:
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if arg2 and s * t > -1 / arg2:
                revert with 'NH{q', 17
            require ext_code.size(arg1)
            if arg2 * s * t:
                call arg1.0xa9059cbb with:
                     gas gas_remaining wei
                    args owner, arg2 * s * t
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                staticcall arg1.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require ext_code.size(arg1)
                    call arg1.0xa9059cbb with:
                         gas gas_remaining wei
                        args owner, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_e551b351(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    if not ext_call.return_data[31 len 1]:
        if arg3 and 1 > -1 / arg3:
            revert with 'NH{q', 17
        require ext_code.size(address(arg1))
        if arg3:
            call address(arg1).0x23b872dd with:
                 gas gas_remaining wei
                args address(arg2), this.address, arg3
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if not sub_ba27f50b[address(arg1)]:
                if stor5 > -2:
                    revert with 'NH{q', 17
                stor5++
                sub_ba27f50b[address(arg1)] = stor5
                tokenList[stor5] = address(arg1)
        else:
            staticcall address(arg1).0x70a08231 with:
                    gas gas_remaining wei
                   args address(arg2)
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0]:
                require ext_code.size(address(arg1))
                call address(arg1).0x23b872dd with:
                     gas gas_remaining wei
                    args address(arg2), this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if not sub_ba27f50b[address(arg1)]:
                    if stor5 > -2:
                        revert with 'NH{q', 17
                    stor5++
                    sub_ba27f50b[address(arg1)] = stor5
                    tokenList[stor5] = address(arg1)
    else:
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if arg3 and 10^ext_call.return_data[31 len 1] > -1 / arg3:
                revert with 'NH{q', 17
            require ext_code.size(address(arg1))
            if arg3 * 10^ext_call.return_data[31 len 1]:
                call address(arg1).0x23b872dd with:
                     gas gas_remaining wei
                    args address(arg2), this.address, arg3 * 10^uint8(ext_call.return_data[0])
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if not sub_ba27f50b[address(arg1)]:
                    if stor5 > -2:
                        revert with 'NH{q', 17
                    stor5++
                    sub_ba27f50b[address(arg1)] = stor5
                    tokenList[stor5] = address(arg1)
            else:
                staticcall address(arg1).0x70a08231 with:
                        gas gas_remaining wei
                       args address(arg2)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require ext_code.size(address(arg1))
                    call address(arg1).0x23b872dd with:
                         gas gas_remaining wei
                        args address(arg2), this.address, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if not sub_ba27f50b[address(arg1)]:
                        if stor5 > -2:
                            revert with 'NH{q', 17
                        stor5++
                        sub_ba27f50b[address(arg1)] = stor5
                        tokenList[stor5] = address(arg1)
        else:
            s = 10
            t = 1
            idx = ext_call.return_data[31 len 1]
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = s * t
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if arg3 and s * t > -1 / arg3:
                revert with 'NH{q', 17
            require ext_code.size(address(arg1))
            if arg3 * s * t:
                call address(arg1).0x23b872dd with:
                     gas gas_remaining wei
                    args address(arg2), this.address, arg3 * s * t
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if not sub_ba27f50b[address(arg1)]:
                    if stor5 > -2:
                        revert with 'NH{q', 17
                    stor5++
                    sub_ba27f50b[address(arg1)] = stor5
                    tokenList[stor5] = address(arg1)
            else:
                staticcall address(arg1).0x70a08231 with:
                        gas gas_remaining wei
                       args address(arg2)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0]:
                    require ext_code.size(address(arg1))
                    call address(arg1).0x23b872dd with:
                         gas gas_remaining wei
                        args address(arg2), this.address, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if not sub_ba27f50b[address(arg1)]:
                        if stor5 > -2:
                            revert with 'NH{q', 17
                        stor5++
                        sub_ba27f50b[address(arg1)] = stor5
                        tokenList[stor5] = address(arg1)
}

function withdrawAllToken() payable {
    mem[64] = 96
    require not msg.value
    if msg.sender == owner:
        idx = 1
        while idx <= stor5:
            mem[0] = idx
            mem[32] = 3
            require ext_code.size(tokenList[idx])
            staticcall tokenList[idx].0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _99 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_99] == mem[_99 + 31 len 1]
            if not mem[_99 + 31 len 1]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenList[idx])
                staticcall tokenList[idx].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _107 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _109 = mem[_107]
                if mem[_107]:
                    mem[mem[64] + 4] = owner
                    mem[mem[64] + 36] = _109
                    require ext_code.size(tokenList[idx])
                    call tokenList[idx].0xa9059cbb with:
                         gas gas_remaining wei
                        args owner, _109
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _127 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_127] == bool(mem[_127])
            else:
                if bool(bool(mem[_99 + 31 len 1] < 78)) or bool(bool(mem[_99 + 31 len 1] < 32)):
                    if False and 10^mem[_99 + 31 len 1] > 0:
                        revert with 'NH{q', 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _115 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _123 = mem[_115]
                    if mem[_115]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _123
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _123
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _148 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_148] == bool(mem[_148])
                else:
                    t = 10
                    u = 1
                    s = mem[_99 + 31 len 1]
                    while s > 1:
                        if t > -1 / t:
                            revert with 'NH{q', 17
                        if not bool(s):
                            t = t * t
                            u = u
                            s = uint255(s) * 0.5
                            continue 
                        t = t * t
                        u = t * u
                        s = uint255(s) * 0.5
                        continue 
                    if u > -1 / t:
                        revert with 'NH{q', 17
                    if False and t * u > 0:
                        revert with 'NH{q', 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _189 = mem[_187]
                    if mem[_187]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _189
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _189
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _195 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_195] == bool(mem[_195])
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
    else:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
        idx = 1
        while idx <= stor5:
            mem[0] = idx
            mem[32] = 3
            require ext_code.size(tokenList[idx])
            staticcall tokenList[idx].0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _100 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_100] == mem[_100 + 31 len 1]
            if not mem[_100 + 31 len 1]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenList[idx])
                staticcall tokenList[idx].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _108 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _110 = mem[_108]
                if mem[_108]:
                    mem[mem[64] + 4] = owner
                    mem[mem[64] + 36] = _110
                    require ext_code.size(tokenList[idx])
                    call tokenList[idx].0xa9059cbb with:
                         gas gas_remaining wei
                        args owner, _110
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _128 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_128] == bool(mem[_128])
            else:
                if bool(bool(mem[_100 + 31 len 1] < 78)) or bool(bool(mem[_100 + 31 len 1] < 32)):
                    if False and 10^mem[_100 + 31 len 1] > 0:
                        revert with 'NH{q', 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _117 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _126 = mem[_117]
                    if mem[_117]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _126
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _126
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _150 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_150] == bool(mem[_150])
                else:
                    t = 10
                    u = 1
                    s = mem[_100 + 31 len 1]
                    while s > 1:
                        if t > -1 / t:
                            revert with 'NH{q', 17
                        if not bool(s):
                            t = t * t
                            u = u
                            s = uint255(s) * 0.5
                            continue 
                        t = t * t
                        u = t * u
                        s = uint255(s) * 0.5
                        continue 
                    if u > -1 / t:
                        revert with 'NH{q', 17
                    if False and t * u > 0:
                        revert with 'NH{q', 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _188 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _190 = mem[_188]
                    if mem[_188]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _190
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _190
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _196 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_196] == bool(mem[_196])
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
}

function withdrawAll() payable {
    mem[64] = 96
    require not msg.value
    if msg.sender == owner:
        idx = 1
        while idx <= stor5:
            mem[0] = idx
            mem[32] = 3
            require ext_code.size(tokenList[idx])
            staticcall tokenList[idx].0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _161 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_161] == mem[_161 + 31 len 1]
            if not mem[_161 + 31 len 1]:
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenList[idx])
                staticcall tokenList[idx].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _185 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _188 = mem[_185]
                if mem[_185]:
                    mem[mem[64] + 4] = owner
                    mem[mem[64] + 36] = _188
                    require ext_code.size(tokenList[idx])
                    call tokenList[idx].0xa9059cbb with:
                         gas gas_remaining wei
                        args owner, _188
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _215 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_215] == bool(mem[_215])
            else:
                if bool(bool(mem[_161 + 31 len 1] < 78)) or bool(bool(mem[_161 + 31 len 1] < 32)):
                    if False and 10^mem[_161 + 31 len 1] > 0:
                        revert with 'NH{q', 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _197 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _208 = mem[_197]
                    if mem[_197]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _208
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _208
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _246 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_246] == bool(mem[_246])
                else:
                    t = 10
                    u = 1
                    s = mem[_161 + 31 len 1]
                    while s > 1:
                        if t > -1 / t:
                            revert with 'NH{q', 17
                        if not bool(s):
                            t = t * t
                            u = u
                            s = uint255(s) * 0.5
                            continue 
                        t = t * t
                        u = t * u
                        s = uint255(s) * 0.5
                        continue 
                    if u > -1 / t:
                        revert with 'NH{q', 17
                    if False and t * u > 0:
                        revert with 'NH{q', 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _305 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _308 = mem[_305]
                    if mem[_305]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _308
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _308
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _317 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_317] == bool(mem[_317])
            if idx == -1:
                revert with 'NH{q', 17
            idx = idx + 1
            continue 
    else:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
        if msg.sender == owner:
            idx = 1
            while idx <= stor5:
                mem[0] = idx
                mem[32] = 3
                require ext_code.size(tokenList[idx])
                staticcall tokenList[idx].0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _162 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_162] == mem[_162 + 31 len 1]
                if not mem[_162 + 31 len 1]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _186 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _189 = mem[_186]
                    if mem[_186]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _189
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _189
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _216 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_216] == bool(mem[_216])
                else:
                    if bool(bool(mem[_162 + 31 len 1] < 78)) or bool(bool(mem[_162 + 31 len 1] < 32)):
                        if False and 10^mem[_162 + 31 len 1] > 0:
                            revert with 'NH{q', 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(tokenList[idx])
                        staticcall tokenList[idx].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _199 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _211 = mem[_199]
                        if mem[_199]:
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _211
                            require ext_code.size(tokenList[idx])
                            call tokenList[idx].0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _211
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _248 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_248] == bool(mem[_248])
                    else:
                        t = 10
                        u = 1
                        s = mem[_162 + 31 len 1]
                        while s > 1:
                            if t > -1 / t:
                                revert with 'NH{q', 17
                            if not bool(s):
                                t = t * t
                                u = u
                                s = uint255(s) * 0.5
                                continue 
                            t = t * t
                            u = t * u
                            s = uint255(s) * 0.5
                            continue 
                        if u > -1 / t:
                            revert with 'NH{q', 17
                        if False and t * u > 0:
                            revert with 'NH{q', 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(tokenList[idx])
                        staticcall tokenList[idx].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _309 = mem[_306]
                        if mem[_306]:
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _309
                            require ext_code.size(tokenList[idx])
                            call tokenList[idx].0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _309
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_318] == bool(mem[_318])
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                continue 
        else:
            if creatorAddress != msg.sender:
                revert with 0, 'Ownable: caller is not the owner'
            idx = 1
            while idx <= stor5:
                mem[0] = idx
                mem[32] = 3
                require ext_code.size(tokenList[idx])
                staticcall tokenList[idx].0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _163 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_163] == mem[_163 + 31 len 1]
                if not mem[_163 + 31 len 1]:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenList[idx])
                    staticcall tokenList[idx].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _190 = mem[_187]
                    if mem[_187]:
                        mem[mem[64] + 4] = owner
                        mem[mem[64] + 36] = _190
                        require ext_code.size(tokenList[idx])
                        call tokenList[idx].0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, _190
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _217 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_217] == bool(mem[_217])
                else:
                    if bool(bool(mem[_163 + 31 len 1] < 78)) or bool(bool(mem[_163 + 31 len 1] < 32)):
                        if False and 10^mem[_163 + 31 len 1] > 0:
                            revert with 'NH{q', 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(tokenList[idx])
                        staticcall tokenList[idx].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _201 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _214 = mem[_201]
                        if mem[_201]:
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _214
                            require ext_code.size(tokenList[idx])
                            call tokenList[idx].0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _214
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_250] == bool(mem[_250])
                    else:
                        t = 10
                        u = 1
                        s = mem[_163 + 31 len 1]
                        while s > 1:
                            if t > -1 / t:
                                revert with 'NH{q', 17
                            if not bool(s):
                                t = t * t
                                u = u
                                s = uint255(s) * 0.5
                                continue 
                            t = t * t
                            u = t * u
                            s = uint255(s) * 0.5
                            continue 
                        if u > -1 / t:
                            revert with 'NH{q', 17
                        if False and t * u > 0:
                            revert with 'NH{q', 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(tokenList[idx])
                        staticcall tokenList[idx].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _307 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _310 = mem[_307]
                        if mem[_307]:
                            mem[mem[64] + 4] = owner
                            mem[mem[64] + 36] = _310
                            require ext_code.size(tokenList[idx])
                            call tokenList[idx].0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, _310
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _319 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_319] == bool(mem[_319])
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                continue 
    if owner != msg.sender:
        if creatorAddress != msg.sender:
            revert with 0, 'Ownable: caller is not the owner'
    if eth.balance(this.address):
        call owner with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
}

function _fallback() payable {
    mem[64] = 128
    if calldata.size < 4:
        require not calldata.size
    if unknown_0x853828b6(?????) > uint32(call.func_hash) >> 224:
        if unknown_0x2354c7ae(?????) > uint32(call.func_hash) >> 224:
            if unknown_0x14870d2c(?????) <= uint32(call.func_hash) >> 224:
                if unknown_0x14870d2c(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    if msg.sender == owner:
                        idx = 1
                        while idx <= stor5:
                            mem[0] = idx
                            mem[32] = 3
                            require ext_code.size(tokenList[idx])
                            staticcall tokenList[idx].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1145 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1145] == mem[_1145 + 31 len 1]
                            if not mem[_1145 + 31 len 1]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(tokenList[idx])
                                staticcall tokenList[idx].0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1267 = mem[_1253]
                                if mem[_1253]:
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _1267
                                    require ext_code.size(tokenList[idx])
                                    call tokenList[idx].0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _1267
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1329 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_1329] == bool(mem[_1329])
                            else:
                                if bool(bool(mem[_1145 + 31 len 1] < 78)) or bool(bool(mem[_1145 + 31 len 1] < 32)):
                                    if False and 10^mem[_1145 + 31 len 1] > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1291 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1313 = mem[_1291]
                                    if mem[_1291]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1313
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1313
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1387 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1387] == bool(mem[_1387])
                                else:
                                    t = 10
                                    u = 1
                                    s = mem[_1145 + 31 len 1]
                                    while s > 1:
                                        if t > -1 / t:
                                            revert with 'NH{q', 17
                                        if not bool(s):
                                            t = t * t
                                            u = u
                                            s = uint255(s) * 0.5
                                            continue 
                                        t = t * t
                                        u = t * u
                                        s = uint255(s) * 0.5
                                        continue 
                                    if u > -1 / t:
                                        revert with 'NH{q', 17
                                    if False and t * u > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1909 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1917 = mem[_1909]
                                    if mem[_1909]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1917
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1917
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1935 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1935] == bool(mem[_1935])
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if creatorAddress != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        idx = 1
                        while idx <= stor5:
                            mem[0] = idx
                            mem[32] = 3
                            require ext_code.size(tokenList[idx])
                            staticcall tokenList[idx].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1146 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1146] == mem[_1146 + 31 len 1]
                            if not mem[_1146 + 31 len 1]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(tokenList[idx])
                                staticcall tokenList[idx].0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1254 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1268 = mem[_1254]
                                if mem[_1254]:
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _1268
                                    require ext_code.size(tokenList[idx])
                                    call tokenList[idx].0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _1268
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1330 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_1330] == bool(mem[_1330])
                            else:
                                if bool(bool(mem[_1146 + 31 len 1] < 78)) or bool(bool(mem[_1146 + 31 len 1] < 32)):
                                    if False and 10^mem[_1146 + 31 len 1] > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1293 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1316 = mem[_1293]
                                    if mem[_1293]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1316
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1316
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1389 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1389] == bool(mem[_1389])
                                else:
                                    t = 10
                                    u = 1
                                    s = mem[_1146 + 31 len 1]
                                    while s > 1:
                                        if t > -1 / t:
                                            revert with 'NH{q', 17
                                        if not bool(s):
                                            t = t * t
                                            u = u
                                            s = uint255(s) * 0.5
                                            continue 
                                        t = t * t
                                        u = t * u
                                        s = uint255(s) * 0.5
                                        continue 
                                    if u > -1 / t:
                                        revert with 'NH{q', 17
                                    if False and t * u > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1910 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1918 = mem[_1910]
                                    if mem[_1910]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1918
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1918
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1936 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1936] == bool(mem[_1936])
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                else:
                    if unknown_0x16a84344(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        return sub_16a84344Address
                    require unknown_0x1b52b9de(?????) == uint32(call.func_hash) >> 224
                    require not msg.value
                    if owner != msg.sender:
                        if creatorAddress != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                    if eth.balance(this.address):
                        call owner with:
                           value eth.balance(this.address) wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            else:
                if creator() == uint32(call.func_hash) >> 224:
                    require not msg.value
                    return creatorAddress
                if unknown_0x13764611(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    return sub_13764611Address
                require unknown_0x13af4035(?????) == uint32(call.func_hash) >> 224
                require not msg.value
                require calldata.size - 4 >= 32
                require arg1 == address(arg1)
                if owner != msg.sender:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                if stor0 > 65534:
                    revert with 'NH{q', 17
                stor0 = uint16(stor0 + 1)
                if stor0 >= 2:
                    stor0 = 0
                    owner = address(arg1)
        if unknown_0x4b8eb24c(?????) <= uint32(call.func_hash) >> 224:
            if unknown_0x4b8eb24c(?????) == uint32(call.func_hash) >> 224:
                require not msg.value
                require calldata.size - 4 >= 32
                require arg1 == address(arg1)
                if owner != msg.sender:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                if not sub_ba27f50b[address(arg1)]:
                    if stor5 > -2:
                        revert with 'NH{q', 17
                    stor5++
                    sub_ba27f50b[address(arg1)] = stor5
                    tokenList[stor5] = address(arg1)
            else:
                if unknown_0x5fbe4d1d(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    return tokenAddr
                require unknown_0x6088e93a(?????) == uint32(call.func_hash) >> 224
                require not msg.value
                require calldata.size - 4 >= 64
                require arg1 == address(arg1)
                if owner != msg.sender:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(address(arg1))
                call address(arg1).0x23b872dd with:
                     gas gas_remaining wei
                    args this.address, owner, arg2
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
        if unknown_0x2354c7ae(?????) == uint32(call.func_hash) >> 224:
            require not msg.value
            return sub_2354c7aeAddress
        if uint32(call.func_hash) >> 224 != unknown_0x30a01c4e(?????):
            require unknown_0x4229dbe3(?????) == uint32(call.func_hash) >> 224
            require not msg.value
            return eth.balance(this.address)
        require not msg.value
        require calldata.size - 4 >= 32
        require arg1 == address(arg1)
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        if not ext_call.return_data[31 len 1]:
            return ext_call.return_data[0]
        if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
            if not 10^ext_call.return_data[31 len 1]:
                revert with 'NH{q', 18
            return (ext_call.return_data[0] / 10^ext_call.return_data[31 len 1])
        s = 10
        t = 1
        idx = ext_call.return_data[31 len 1]
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = s * t
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not s * t:
            revert with 'NH{q', 18
        return (ext_call.return_data[0] / s * t)
    if unknown_0xb20e7344(?????) > uint32(call.func_hash) >> 224:
        if unknown_0x946b5793(?????) > uint32(call.func_hash) >> 224:
            if uint32(call.func_hash) >> 224 != unknown_0x853828b6(?????):
                if uint32(call.func_hash) >> 224 != unknown_0x8b09832d(?????):
                    require unknown_0x8da5cb5b(?????) == uint32(call.func_hash) >> 224
                    require not msg.value
                    return owner
                require not msg.value
                require calldata.size - 4 >= 32
                require arg1 == address(arg1)
                if owner != msg.sender:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                stor2[address(arg1)] = 1
            else:
                require not msg.value
                if msg.sender == owner:
                    idx = 1
                    while idx <= stor5:
                        mem[0] = idx
                        mem[32] = 3
                        require ext_code.size(tokenList[idx])
                        staticcall tokenList[idx].0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1147 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1147] == mem[_1147 + 31 len 1]
                        if not mem[_1147 + 31 len 1]:
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(tokenList[idx])
                            staticcall tokenList[idx].0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1255 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1269 = mem[_1255]
                            if mem[_1255]:
                                mem[mem[64] + 4] = owner
                                mem[mem[64] + 36] = _1269
                                require ext_code.size(tokenList[idx])
                                call tokenList[idx].0xa9059cbb with:
                                     gas gas_remaining wei
                                    args owner, _1269
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1331 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_1331] == bool(mem[_1331])
                        else:
                            if bool(bool(mem[_1147 + 31 len 1] < 78)) or bool(bool(mem[_1147 + 31 len 1] < 32)):
                                if False and 10^mem[_1147 + 31 len 1] > 0:
                                    revert with 'NH{q', 17
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(tokenList[idx])
                                staticcall tokenList[idx].0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1295 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1319 = mem[_1295]
                                if mem[_1295]:
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _1319
                                    require ext_code.size(tokenList[idx])
                                    call tokenList[idx].0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _1319
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1391 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_1391] == bool(mem[_1391])
                            else:
                                t = 10
                                u = 1
                                s = mem[_1147 + 31 len 1]
                                while s > 1:
                                    if t > -1 / t:
                                        revert with 'NH{q', 17
                                    if not bool(s):
                                        t = t * t
                                        u = u
                                        s = uint255(s) * 0.5
                                        continue 
                                    t = t * t
                                    u = t * u
                                    s = uint255(s) * 0.5
                                    continue 
                                if u > -1 / t:
                                    revert with 'NH{q', 17
                                if False and t * u > 0:
                                    revert with 'NH{q', 17
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(tokenList[idx])
                                staticcall tokenList[idx].0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1911 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1919 = mem[_1911]
                                if mem[_1911]:
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _1919
                                    require ext_code.size(tokenList[idx])
                                    call tokenList[idx].0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _1919
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1937 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_1937] == bool(mem[_1937])
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        continue 
                else:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                    if msg.sender == owner:
                        idx = 1
                        while idx <= stor5:
                            mem[0] = idx
                            mem[32] = 3
                            require ext_code.size(tokenList[idx])
                            staticcall tokenList[idx].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1148 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1148] == mem[_1148 + 31 len 1]
                            if not mem[_1148 + 31 len 1]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(tokenList[idx])
                                staticcall tokenList[idx].0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1256 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1270 = mem[_1256]
                                if mem[_1256]:
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _1270
                                    require ext_code.size(tokenList[idx])
                                    call tokenList[idx].0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _1270
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1332 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_1332] == bool(mem[_1332])
                            else:
                                if bool(bool(mem[_1148 + 31 len 1] < 78)) or bool(bool(mem[_1148 + 31 len 1] < 32)):
                                    if False and 10^mem[_1148 + 31 len 1] > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1297 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1322 = mem[_1297]
                                    if mem[_1297]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1322
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1322
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1393 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1393] == bool(mem[_1393])
                                else:
                                    t = 10
                                    u = 1
                                    s = mem[_1148 + 31 len 1]
                                    while s > 1:
                                        if t > -1 / t:
                                            revert with 'NH{q', 17
                                        if not bool(s):
                                            t = t * t
                                            u = u
                                            s = uint255(s) * 0.5
                                            continue 
                                        t = t * t
                                        u = t * u
                                        s = uint255(s) * 0.5
                                        continue 
                                    if u > -1 / t:
                                        revert with 'NH{q', 17
                                    if False and t * u > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1912 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1920 = mem[_1912]
                                    if mem[_1912]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1920
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1920
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1938 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1938] == bool(mem[_1938])
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                    else:
                        if creatorAddress != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        idx = 1
                        while idx <= stor5:
                            mem[0] = idx
                            mem[32] = 3
                            require ext_code.size(tokenList[idx])
                            staticcall tokenList[idx].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1149 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1149] == mem[_1149 + 31 len 1]
                            if not mem[_1149 + 31 len 1]:
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(tokenList[idx])
                                staticcall tokenList[idx].0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _1257 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _1271 = mem[_1257]
                                if mem[_1257]:
                                    mem[mem[64] + 4] = owner
                                    mem[mem[64] + 36] = _1271
                                    require ext_code.size(tokenList[idx])
                                    call tokenList[idx].0xa9059cbb with:
                                         gas gas_remaining wei
                                        args owner, _1271
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1333 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_1333] == bool(mem[_1333])
                            else:
                                if bool(bool(mem[_1149 + 31 len 1] < 78)) or bool(bool(mem[_1149 + 31 len 1] < 32)):
                                    if False and 10^mem[_1149 + 31 len 1] > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1299 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1325 = mem[_1299]
                                    if mem[_1299]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1325
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1325
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1395 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1395] == bool(mem[_1395])
                                else:
                                    t = 10
                                    u = 1
                                    s = mem[_1149 + 31 len 1]
                                    while s > 1:
                                        if t > -1 / t:
                                            revert with 'NH{q', 17
                                        if not bool(s):
                                            t = t * t
                                            u = u
                                            s = uint255(s) * 0.5
                                            continue 
                                        t = t * t
                                        u = t * u
                                        s = uint255(s) * 0.5
                                        continue 
                                    if u > -1 / t:
                                        revert with 'NH{q', 17
                                    if False and t * u > 0:
                                        revert with 'NH{q', 17
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(tokenList[idx])
                                    staticcall tokenList[idx].0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _1913 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _1921 = mem[_1913]
                                    if mem[_1913]:
                                        mem[mem[64] + 4] = owner
                                        mem[mem[64] + 36] = _1921
                                        require ext_code.size(tokenList[idx])
                                        call tokenList[idx].0xa9059cbb with:
                                             gas gas_remaining wei
                                            args owner, _1921
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _1939 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_1939] == bool(mem[_1939])
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            continue 
                if owner != msg.sender:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                if eth.balance(this.address):
                    call owner with:
                       value eth.balance(this.address) wei
                         gas 2300 * is_zero(value) wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            if unknown_0x946b5793(?????) == uint32(call.func_hash) >> 224:
                require not msg.value
                require calldata.size - 4 >= 96
                require arg1 == bool(arg1)
                require arg2 <= test266151307()
                require arg2 + 35 < calldata.size
                if arg2.length > test266151307():
                    revert with 'NH{q', 65
                if ceil32(ceil32(arg2.length)) + 129 < 128 or ceil32(ceil32(arg2.length)) + 129 > test266151307():
                    revert with 'NH{q', 65
                require arg2 + arg2.length + 36 <= calldata.size
                require arg3 <= test266151307()
                require calldata.size > arg3 + 35
                if arg3.length > test266151307():
                    revert with 'NH{q', 65
                if ceil32(ceil32(arg3.length)) + 130 < 129 or ceil32(ceil32(arg2.length)) + ceil32(ceil32(arg3.length)) + 130 > test266151307():
                    revert with 'NH{q', 65
                require arg3 + arg3.length + 36 <= calldata.size
                if arg1:
                if arg2.length:
                    revert with arg2[all]
                revert with 0, 
                            32,
                            arg3.length,
                            arg3[all],
                            Mask(8 * ceil32(arg3.length) - arg3.length, -(8 * ceil32(arg3.length) + -ceil32(ceil32(arg3.length)) + 27) + 256, 32) >> -(8 * ceil32(arg3.length) + -ceil32(ceil32(arg3.length)) + 27) + 256
            if uint32(call.func_hash) >> 224 != unknown_0x9e281a98(?????):
                require unknown_0x9ead7222(?????) == uint32(call.func_hash) >> 224
                require not msg.value
                require calldata.size - 4 >= 32
                return tokenList[arg1]
            require not msg.value
            require calldata.size - 4 >= 64
            require arg1 == address(arg1)
            if owner != msg.sender:
                if creatorAddress != msg.sender:
                    revert with 0, 'Ownable: caller is not the owner'
            require ext_code.size(address(arg1))
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
            if not ext_call.return_data[31 len 1]:
                if arg2 and 1 > -1 / arg2:
                    revert with 'NH{q', 17
                require ext_code.size(address(arg1))
                if arg2:
                    call address(arg1).0xa9059cbb with:
                         gas gas_remaining wei
                        args owner, arg2
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    staticcall address(arg1).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0]:
                        require ext_code.size(address(arg1))
                        call address(arg1).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                    if arg2 and 10^ext_call.return_data[31 len 1] > -1 / arg2:
                        revert with 'NH{q', 17
                    require ext_code.size(address(arg1))
                    if arg2 * 10^ext_call.return_data[31 len 1]:
                        call address(arg1).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, arg2 * 10^uint8(ext_call.return_data[0])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        staticcall address(arg1).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            require ext_code.size(address(arg1))
                            call address(arg1).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                else:
                    s = 10
                    t = 1
                    idx = ext_call.return_data[31 len 1]
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = s * t
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if arg2 and s * t > -1 / arg2:
                        revert with 'NH{q', 17
                    require ext_code.size(address(arg1))
                    if arg2 * s * t:
                        call address(arg1).0xa9059cbb with:
                             gas gas_remaining wei
                            args owner, arg2 * s * t
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    else:
                        staticcall address(arg1).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            require ext_code.size(address(arg1))
                            call address(arg1).0xa9059cbb with:
                                 gas gas_remaining wei
                                args owner, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if unknown_0xdad69c20(?????) <= uint32(call.func_hash) >> 224:
        if unknown_0xdad69c20(?????) == uint32(call.func_hash) >> 224:
            require not msg.value
            require calldata.size - 4 >= 32
            require arg1 == address(arg1)
            if owner != msg.sender:
                if creatorAddress != msg.sender:
                    revert with 0, 'Ownable: caller is not the owner'
            stor2[address(arg1)] = 0
        else:
            if uint32(call.func_hash) >> 224 != unknown_0xe551b351(?????):
                if uint32(call.func_hash) >> 224 != unknown_0xf43cf9e6(?????):
                    require unknown_0xfa0fca84(?????) == uint32(call.func_hash) >> 224
                    require not msg.value
                    require calldata.size - 4 >= 32
                    require arg1 == address(arg1)
                    return bool(stor2[arg1])
                require not msg.value
                require calldata.size - 4 >= 64
                require arg1 == address(arg1)
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if arg2 and 1 > -1 / arg2:
                        revert with 'NH{q', 17
                    require ext_code.size(address(arg1))
                    call address(arg1).0x23b872dd with:
                         gas gas_remaining wei
                        args msg.sender, this.address, arg2
                else:
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if arg2 and 10^ext_call.return_data[31 len 1] > -1 / arg2:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg1))
                        call address(arg1).0x23b872dd with:
                             gas gas_remaining wei
                            args msg.sender, this.address, arg2 * 10^uint8(ext_call.return_data[0])
                    else:
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if arg2 and s * t > -1 / arg2:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg1))
                        call address(arg1).0x23b872dd with:
                             gas gas_remaining wei
                            args msg.sender, this.address, arg2 * s * t
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                require not msg.value
                require calldata.size - 4 >= 96
                require arg1 == address(arg1)
                require arg2 == address(arg2)
                if owner != msg.sender:
                    if creatorAddress != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(address(arg1))
                staticcall address(arg1).0x313ce567 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                if not ext_call.return_data[31 len 1]:
                    if arg3 and 1 > -1 / arg3:
                        revert with 'NH{q', 17
                    require ext_code.size(address(arg1))
                    if arg3:
                        call address(arg1).0x23b872dd with:
                             gas gas_remaining wei
                            args address(arg2), this.address, arg3
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if not sub_ba27f50b[address(arg1)]:
                            if stor5 > -2:
                                revert with 'NH{q', 17
                            stor5++
                            sub_ba27f50b[address(arg1)] = stor5
                            tokenList[stor5] = address(arg1)
                    else:
                        staticcall address(arg1).0x70a08231 with:
                                gas gas_remaining wei
                               args address(arg2)
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0]:
                            require ext_code.size(address(arg1))
                            call address(arg1).0x23b872dd with:
                                 gas gas_remaining wei
                                args address(arg2), this.address, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if not sub_ba27f50b[address(arg1)]:
                                if stor5 > -2:
                                    revert with 'NH{q', 17
                                stor5++
                                sub_ba27f50b[address(arg1)] = stor5
                                tokenList[stor5] = address(arg1)
                else:
                    if bool(bool(ext_call.return_data[31 len 1] < 78)) or bool(bool(ext_call.return_data[31 len 1] < 32)):
                        if arg3 and 10^ext_call.return_data[31 len 1] > -1 / arg3:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg1))
                        if arg3 * 10^ext_call.return_data[31 len 1]:
                            call address(arg1).0x23b872dd with:
                                 gas gas_remaining wei
                                args address(arg2), this.address, arg3 * 10^uint8(ext_call.return_data[0])
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if not sub_ba27f50b[address(arg1)]:
                                if stor5 > -2:
                                    revert with 'NH{q', 17
                                stor5++
                                sub_ba27f50b[address(arg1)] = stor5
                                tokenList[stor5] = address(arg1)
                        else:
                            staticcall address(arg1).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(arg2)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                require ext_code.size(address(arg1))
                                call address(arg1).0x23b872dd with:
                                     gas gas_remaining wei
                                    args address(arg2), this.address, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not sub_ba27f50b[address(arg1)]:
                                    if stor5 > -2:
                                        revert with 'NH{q', 17
                                    stor5++
                                    sub_ba27f50b[address(arg1)] = stor5
                                    tokenList[stor5] = address(arg1)
                    else:
                        s = 10
                        t = 1
                        idx = ext_call.return_data[31 len 1]
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = s * t
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if arg3 and s * t > -1 / arg3:
                            revert with 'NH{q', 17
                        require ext_code.size(address(arg1))
                        if arg3 * s * t:
                            call address(arg1).0x23b872dd with:
                                 gas gas_remaining wei
                                args address(arg2), this.address, arg3 * s * t
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if not sub_ba27f50b[address(arg1)]:
                                if stor5 > -2:
                                    revert with 'NH{q', 17
                                stor5++
                                sub_ba27f50b[address(arg1)] = stor5
                                tokenList[stor5] = address(arg1)
                        else:
                            staticcall address(arg1).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(arg2)
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                require ext_code.size(address(arg1))
                                call address(arg1).0x23b872dd with:
                                     gas gas_remaining wei
                                    args address(arg2), this.address, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if not sub_ba27f50b[address(arg1)]:
                                    if stor5 > -2:
                                        revert with 'NH{q', 17
                                    stor5++
                                    sub_ba27f50b[address(arg1)] = stor5
                                    tokenList[stor5] = address(arg1)
    if uint32(call.func_hash) >> 224 != unknown_0xb20e7344(?????):
        if uint32(call.func_hash) >> 224 != unknown_0xb99152d0(?????):
            require unknown_0xba27f50b(?????) == uint32(call.func_hash) >> 224
            require not msg.value
            require calldata.size - 4 >= 32
            require arg1 == address(arg1)
            return sub_ba27f50b[arg1]
        require not msg.value
        require calldata.size - 4 >= 32
        require arg1 == address(arg1)
        require ext_code.size(address(arg1))
        staticcall address(arg1).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        return ext_call.return_data[0]
    require not msg.value
    require calldata.size - 4 >= 32
    mem[32] = 2
    if stor2[msg.sender]:
        mem[128] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[132] = arg1
        mem[164] = 64
        mem[196] = stor10.length
        mem[0] = 10
        idx = 0
        s = 228
        t = 0
        while idx < stor10.length:
            mem[s] = stor10[t].field_0
            idx = idx + 1
            s = s + 32
            t = t + 1
            continue 
        require ext_code.size(sub_2354c7aeAddress)
        staticcall sub_2354c7aeAddress.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args arg1, Array(len=stor10.length, data=mem[228 len 32 * stor10.length])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[128 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 128
        require return_data.size >= 32
        _1165 = mem[128 len 4], Mask(224, 32, arg1) >> 32
        require mem[128 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
        require mem[128 len 4], Mask(224, 32, arg1) >> 32 + 159 < return_data.size + 128
        _1174 = mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]
        if mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128] > test266151307():
            revert with 'NH{q', 65
        if ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 129 > test266151307():
            revert with 'NH{q', 65
        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 129
        mem[ceil32(return_data.size) + 128] = mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]
        require return_data.size >= _1165 + (32 * _1174) + 32
        mem[ceil32(return_data.size) + 160 len 32 * _1174] = mem[_1165 + 160 len 32 * _1174]
        if 1 >= _1174:
            revert with 'NH{q', 50
        _1881 = mem[ceil32(return_data.size) + 192]
        _1882 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 64
        mem[mem[64] + 68] = stor11.length
        mem[0] = 11
        idx = 0
        s = mem[64] + 100
        t = 0
        while idx < stor11.length:
            mem[s] = stor[t + sha3(mem[0])]
            idx = idx + 1
            s = s + 32
            t = t + 1
            continue 
        require ext_code.size(sub_16a84344Address)
        staticcall sub_16a84344Address.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _1882 + (32 * stor11.length) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2347 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2350 = mem[_2347]
        require mem[_2347] <= test266151307()
        require _2347 + mem[_2347] + 31 < _2347 + return_data.size
        _2353 = mem[_2347 + mem[_2347]]
        if mem[_2347 + mem[_2347]] > test266151307():
            revert with 'NH{q', 65
        if ceil32(32 * mem[_2347 + mem[_2347]]) + 1 < 0 or _2347 + ceil32(return_data.size) + ceil32(32 * mem[_2347 + mem[_2347]]) + 1 > test266151307():
            revert with 'NH{q', 65
        mem[64] = _2347 + ceil32(return_data.size) + ceil32(32 * mem[_2347 + mem[_2347]]) + 1
        mem[_2347 + ceil32(return_data.size)] = _2353
        require return_data.size >= _2350 + (32 * _2353) + 32
        mem[_2347 + ceil32(return_data.size) + 32 len 32 * _2353] = mem[_2347 + _2350 + 32 len 32 * _2353]
        if 1 >= _2353:
            revert with 'NH{q', 50
        if _1881 > mem[_2347 + ceil32(return_data.size) + 64]:
            _2768 = mem[64]
            mem[64] = mem[64] + (32 * stor10.length) + 32
            mem[_2768] = stor10.length
            if not stor10.length:
                _2775 = mem[64]
                mem[64] = mem[64] + (32 * stor11.length) + 32
                mem[_2775] = stor11.length
                if not stor11.length:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(sub_13764611Address)
                    staticcall sub_13764611Address.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2804 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2810 = mem[_2804]
                    if 0 >= stor11.length:
                        revert with 'NH{q', 50
                    _2823 = mem[_2775 + 32]
                    if 1 >= stor11.length:
                        revert with 'NH{q', 50
                    if 0 >= stor11.length:
                        revert with 'NH{q', 50
                    mem[_2775 + 32] = mem[_2775 + 76 len 20]
                    if 1 >= stor11.length:
                        revert with 'NH{q', 50
                    mem[_2775 + 64] = address(_2823)
                    _2852 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = stor10.length
                    idx = 0
                    s = mem[64] + 196
                    t = _2768 + 32
                    while idx < stor10.length:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_2852 + 100] = this.address
                    mem[_2852 + 132] = test266151307()
                    require ext_code.size(sub_2354c7aeAddress)
                    call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2852 + (32 * stor10.length) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenAddr)
                    staticcall tokenAddr.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3182 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3188 = mem[_3182]
                    _3194 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _3188
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    _3200 = mem[_2775]
                    mem[mem[64] + 164] = mem[_2775]
                    idx = 0
                    s = mem[64] + 196
                    t = _2775 + 32
                    while idx < _3200:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_3194 + 100] = this.address
                    mem[_3194 + 132] = test266151307()
                    require ext_code.size(sub_16a84344Address)
                    call sub_16a84344Address.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _3194 + (32 * _3200) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(sub_13764611Address)
                    staticcall sub_13764611Address.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3532 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3570 = mem[_3532]
                    _3616 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3616] = 26
                    mem[_3616 + 32] = 'SafeMath: division by zero'
                    if not _3570 / 10^18:
                        _3711 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3711] = 1
                        mem[_3711 + 32] = '0'
                        _3736 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3736] = 26
                        mem[_3736 + 32] = 'SafeMath: division by zero'
                        if not _2810 / 10^18:
                            _3825 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_3825] = 1
                            mem[_3825 + 32] = '0'
                            _3860 = mem[64]
                            mem[mem[64]] = 3
                            mem[64] = mem[64] + 64
                            mem[_3860 + 32 len 3] = call.data[calldata.size len 3]
                            idx = 0
                            s = 0
                            while idx < 1:
                                if idx >= mem[_3711]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_3860]:
                                    revert with 'NH{q', 50
                                mem[s + _3860 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if 1 >= mem[_3860]:
                                revert with 'NH{q', 50
                            mem[_3860 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _6004 = mem[_3825]
                            idx = 0
                            s = 2
                            while idx < _6004:
                                if idx >= mem[_3825]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_3860]:
                                    revert with 'NH{q', 50
                                mem[s + _3860 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3825')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3825')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _6004 = mem[_3825]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _6089 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _6134 = mem[_3860]
                            mem[mem[64] + 36] = mem[_3860]
                            mem[mem[64] + 68 len ceil32(_6134)] = mem[_3860 + 32 len ceil32(_6134)]
                            if ceil32(_6134) <= _6134:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_6134) + 32]
                            mem[mem[64] + _6134 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_6134) + _6089 + -mem[64] + 68
                        s = 0
                        idx = _2810 / 10^18
                        while idx:
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            idx = idx / 10
                            continue 
                        if s > test266151307():
                            revert with 'NH{q', 65
                        _4484 = mem[64]
                        mem[mem[64]] = s
                        mem[64] = mem[64] + ceil32(s) + 32
                        if not s:
                            t = s
                            idx = _2810 / 10^18
                            while idx:
                                if 48 > !(idx % 10):
                                    revert with 'NH{q', 17
                                if not t:
                                    revert with 'NH{q', 17
                                if t - 1 >= mem[_4484]:
                                    revert with 'NH{q', 50
                                mem[t + _4484 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                t = t - 1
                                idx = idx / 10
                                continue 
                            _6084 = mem[_4484]
                            _6085 = mem[_3711]
                            if mem[_3711] > !mem[_4484]:
                                revert with 'NH{q', 17
                            if 1 > !(mem[_3711] + mem[_4484]):
                                revert with 'NH{q', 17
                            if mem[_3711] + mem[_4484] + 1 > test266151307():
                                revert with 'NH{q', 65
                            _6288 = mem[64]
                            mem[mem[64]] = mem[_3711] + mem[_4484] + 1
                            mem[64] = mem[64] + floor32(_6085 + _6084 + 32) + 32
                            if not _6085 + _6084 + 1:
                                _7775 = mem[_3711]
                                idx = 0
                                s = 0
                                while idx < _7775:
                                    if idx >= mem[_3711]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6288]:
                                        revert with 'NH{q', 50
                                    mem[s + _6288 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _7775 = mem[_3711]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _7775 == -1:
                                    revert with 'NH{q', 17
                                if _7775 >= mem[_6288]:
                                    revert with 'NH{q', 50
                                mem[_7775 + _6288 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                                _11501 = mem[_4484]
                                idx = 0
                                s = _7775 + 1
                                while idx < _11501:
                                    if idx >= mem[_4484]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6288]:
                                        revert with 'NH{q', 50
                                    mem[s + _6288 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _11501 = mem[_4484]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _3570 > _2810:
                                _11757 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                _11923 = mem[_6288]
                                mem[mem[64] + 36] = mem[_6288]
                                mem[mem[64] + 68 len ceil32(_11923)] = mem[_6288 + 32 len ceil32(_11923)]
                                var150001 = ceil32(_11923)
                                if ceil32(_11923) <= _11923:
                                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11923) + 32]
                                mem[mem[64] + _11923 + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(_11923) + _11757 + -mem[64] + 68
                            mem[_6288 + 32 len _6085 + _6084 + 1] = call.data[calldata.size len _6085 + _6084 + 1]
                            _7776 = mem[_3711]
                            idx = 0
                            s = 0
                            while idx < _7776:
                                if idx >= mem[_3711]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6288]:
                                    revert with 'NH{q', 50
                                mem[s + _6288 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7776 = mem[_3711]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7776 == -1:
                                revert with 'NH{q', 17
                            if _7776 >= mem[_6288]:
                                revert with 'NH{q', 50
                            mem[_7776 + _6288 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11502 = mem[_4484]
                            idx = 0
                            s = _7776 + 1
                            while idx < _11502:
                                if idx >= mem[_4484]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6288]:
                                    revert with 'NH{q', 50
                                mem[s + _6288 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11502 = mem[_4484]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _11758 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11924 = mem[_6288]
                            mem[mem[64] + 36] = mem[_6288]
                            mem[mem[64] + 68 len ceil32(_11924)] = mem[_6288 + 32 len ceil32(_11924)]
                            var151001 = ceil32(_11924)
                            if ceil32(_11924) <= _11924:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11924) + 32]
                            mem[mem[64] + _11924 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11924) + _11758 + -mem[64] + 68
                        mem[_4484 + 32 len s] = call.data[calldata.size len s]
                        t = s
                        idx = _2810 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4484]:
                                revert with 'NH{q', 50
                            mem[t + _4484 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6086 = mem[_4484]
                        _6087 = mem[_3711]
                        if mem[_3711] > !mem[_4484]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_3711] + mem[_4484]):
                            revert with 'NH{q', 17
                        if mem[_3711] + mem[_4484] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _6290 = mem[64]
                        mem[mem[64]] = mem[_3711] + mem[_4484] + 1
                        mem[64] = mem[64] + floor32(_6087 + _6086 + 32) + 32
                        if not _6087 + _6086 + 1:
                            _7777 = mem[_3711]
                            idx = 0
                            s = 0
                            while idx < _7777:
                                if idx >= mem[_3711]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6290]:
                                    revert with 'NH{q', 50
                                mem[s + _6290 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7777 = mem[_3711]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7777 == -1:
                                revert with 'NH{q', 17
                            if _7777 >= mem[_6290]:
                                revert with 'NH{q', 50
                            mem[_7777 + _6290 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11503 = mem[_4484]
                            idx = 0
                            s = _7777 + 1
                            while idx < _11503:
                                if idx >= mem[_4484]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6290]:
                                    revert with 'NH{q', 50
                                mem[s + _6290 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11503 = mem[_4484]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _11759 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11925 = mem[_6290]
                            mem[mem[64] + 36] = mem[_6290]
                            mem[mem[64] + 68 len ceil32(_11925)] = mem[_6290 + 32 len ceil32(_11925)]
                            var151001 = ceil32(_11925)
                            if ceil32(_11925) <= _11925:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11925) + 32]
                            mem[mem[64] + _11925 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11925) + _11759 + -mem[64] + 68
                        mem[_6290 + 32 len _6087 + _6086 + 1] = call.data[calldata.size len _6087 + _6086 + 1]
                        _7778 = mem[_3711]
                        idx = 0
                        s = 0
                        while idx < _7778:
                            if idx >= mem[_3711]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6290]:
                                revert with 'NH{q', 50
                            mem[s + _6290 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3711')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7778 = mem[_3711]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7778 == -1:
                            revert with 'NH{q', 17
                        if _7778 >= mem[_6290]:
                            revert with 'NH{q', 50
                        mem[_7778 + _6290 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11504 = mem[_4484]
                        idx = 0
                        s = _7778 + 1
                        while idx < _11504:
                            if idx >= mem[_4484]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6290]:
                                revert with 'NH{q', 50
                            mem[s + _6290 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4484')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11504 = mem[_4484]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3570 > _2810:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11926 = mem[_6290]
                        mem[mem[64] + 36] = mem[_6290]
                        mem[mem[64] + 68 len ceil32(_11926)] = mem[_6290 + 32 len ceil32(_11926)]
                        var152001 = ceil32(_11926)
                        if ceil32(_11926) > _11926:
                            mem[mem[64] + _11926 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11926) + 32]
                    s = 0
                    idx = _3570 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _4483 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3570 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4483]:
                                revert with 'NH{q', 50
                            mem[t + _4483 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6082 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6082] = 26
                        mem[_6082 + 32] = 'SafeMath: division by zero'
                        if not _2810 / 10^18:
                            _6356 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6356] = 1
                            mem[_6356 + 32] = '0'
                            _6428 = mem[_4483]
                            if mem[_4483] > !1:
                                revert with 'NH{q', 17
                            if 1 > !(mem[_4483] + 1):
                                revert with 'NH{q', 17
                            if mem[_4483] + 2 > test266151307():
                                revert with 'NH{q', 65
                            _6640 = mem[64]
                            mem[mem[64]] = mem[_4483] + 2
                            mem[64] = mem[64] + floor32(_6428 + 33) + 32
                            if not _6428 + 2:
                                _7771 = mem[_4483]
                                idx = 0
                                s = 0
                                while idx < _7771:
                                    if idx >= mem[_4483]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6640]:
                                        revert with 'NH{q', 50
                                    mem[s + _6640 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _7771 = mem[_4483]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _7771 == -1:
                                    revert with 'NH{q', 17
                                if _7771 >= mem[_6640]:
                                    revert with 'NH{q', 50
                                mem[_7771 + _6640 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                                _11497 = mem[_6356]
                                idx = 0
                                s = _7771 + 1
                                while idx < _11497:
                                    if idx >= mem[_6356]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6640]:
                                        revert with 'NH{q', 50
                                    mem[s + _6640 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6356')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6356')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _11497 = mem[_6356]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _3570 > _2810:
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                _11919 = mem[_6640]
                                mem[mem[64] + 36] = mem[_6640]
                                mem[mem[64] + 68 len ceil32(_11919)] = mem[_6640 + 32 len ceil32(_11919)]
                                var150001 = ceil32(_11919)
                                if ceil32(_11919) > _11919:
                                    mem[mem[64] + _11919 + 68] = 0
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11919) + 32]
                            mem[_6640 + 32 len _6428 + 2] = call.data[calldata.size len _6428 + 2]
                            _7772 = mem[_4483]
                            idx = 0
                            s = 0
                            while idx < _7772:
                                if idx >= mem[_4483]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6640]:
                                    revert with 'NH{q', 50
                                mem[s + _6640 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7772 = mem[_4483]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7772 == -1:
                                revert with 'NH{q', 17
                            if _7772 >= mem[_6640]:
                                revert with 'NH{q', 50
                            mem[_7772 + _6640 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11498 = mem[_6356]
                            idx = 0
                            s = _7772 + 1
                            while idx < _11498:
                                if idx >= mem[_6356]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6640]:
                                    revert with 'NH{q', 50
                                mem[s + _6640 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6356')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6356')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11498 = mem[_6356]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _11750 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11920 = mem[_6640]
                            mem[mem[64] + 36] = mem[_6640]
                            mem[mem[64] + 68 len ceil32(_11920)] = mem[_6640 + 32 len ceil32(_11920)]
                            var151001 = ceil32(_11920)
                            if ceil32(_11920) <= _11920:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11920) + 32]
                            mem[mem[64] + _11920 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11920) + _11750 + -mem[64] + 68
                        s = 0
                        idx = _2810 / 10^18
                        while idx:
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            idx = idx / 10
                            continue 
                        if s > test266151307():
                            revert with 'NH{q', 65
                        _7940 = mem[64]
                        mem[mem[64]] = s
                        mem[64] = mem[64] + ceil32(s) + 32
                        if not s:
                            t = s
                            idx = _2810 / 10^18
                            while idx:
                                if 48 > !(idx % 10):
                                    revert with 'NH{q', 17
                                if not t:
                                    revert with 'NH{q', 17
                                if t - 1 >= mem[_7940]:
                                    revert with 'NH{q', 50
                                mem[t + _7940 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                t = t - 1
                                idx = idx / 10
                                continue 
                            _11745 = mem[_7940]
                            _11746 = mem[_4483]
                            if mem[_4483] > !mem[_7940]:
                                revert with 'NH{q', 17
                            if 1 > !(mem[_4483] + mem[_7940]):
                                revert with 'NH{q', 17
                            if mem[_4483] + mem[_7940] + 1 > test266151307():
                                revert with 'NH{q', 65
                            _12310 = mem[64]
                            mem[mem[64]] = mem[_4483] + mem[_7940] + 1
                            mem[64] = mem[64] + floor32(_11746 + _11745 + 32) + 32
                            if not _11746 + _11745 + 1:
                                _14757 = mem[_4483]
                                idx = 0
                                s = 0
                                while idx < _14757:
                                    if idx >= mem[_4483]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_12310]:
                                        revert with 'NH{q', 50
                                    mem[s + _12310 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _14757 = mem[_4483]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _14757 == -1:
                                    revert with 'NH{q', 17
                                if _14757 >= mem[_12310]:
                                    revert with 'NH{q', 50
                                mem[_14757 + _12310 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                                _19521 = mem[_7940]
                                idx = 0
                                s = _14757 + 1
                                while idx < _19521:
                                    if idx >= mem[_7940]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_12310]:
                                        revert with 'NH{q', 50
                                    mem[s + _12310 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _19521 = mem[_7940]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _3570 > _2810:
                                _20011 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                _20277 = mem[_12310]
                                mem[mem[64] + 36] = mem[_12310]
                                mem[mem[64] + 68 len ceil32(_20277)] = mem[_12310 + 32 len ceil32(_20277)]
                                var158001 = ceil32(_20277)
                                if ceil32(_20277) <= _20277:
                                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20277) + 32]
                                mem[mem[64] + _20277 + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(_20277) + _20011 + -mem[64] + 68
                            mem[_12310 + 32 len _11746 + _11745 + 1] = call.data[calldata.size len _11746 + _11745 + 1]
                            _14758 = mem[_4483]
                            idx = 0
                            s = 0
                            while idx < _14758:
                                if idx >= mem[_4483]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12310]:
                                    revert with 'NH{q', 50
                                mem[s + _12310 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14758 = mem[_4483]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14758 == -1:
                                revert with 'NH{q', 17
                            if _14758 >= mem[_12310]:
                                revert with 'NH{q', 50
                            mem[_14758 + _12310 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19522 = mem[_7940]
                            idx = 0
                            s = _14758 + 1
                            while idx < _19522:
                                if idx >= mem[_7940]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12310]:
                                    revert with 'NH{q', 50
                                mem[s + _12310 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19522 = mem[_7940]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _20012 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20278 = mem[_12310]
                            mem[mem[64] + 36] = mem[_12310]
                            mem[mem[64] + 68 len ceil32(_20278)] = mem[_12310 + 32 len ceil32(_20278)]
                            var159001 = ceil32(_20278)
                            if ceil32(_20278) <= _20278:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20278) + 32]
                            mem[mem[64] + _20278 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20278) + _20012 + -mem[64] + 68
                        mem[_7940 + 32 len s] = call.data[calldata.size len s]
                        t = s
                        idx = _2810 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7940]:
                                revert with 'NH{q', 50
                            mem[t + _7940 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11747 = mem[_7940]
                        _11748 = mem[_4483]
                        if mem[_4483] > !mem[_7940]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4483] + mem[_7940]):
                            revert with 'NH{q', 17
                        if mem[_4483] + mem[_7940] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12312 = mem[64]
                        mem[mem[64]] = mem[_4483] + mem[_7940] + 1
                        mem[64] = mem[64] + floor32(_11748 + _11747 + 32) + 32
                        if not _11748 + _11747 + 1:
                            _14759 = mem[_4483]
                            idx = 0
                            s = 0
                            while idx < _14759:
                                if idx >= mem[_4483]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12312]:
                                    revert with 'NH{q', 50
                                mem[s + _12312 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14759 = mem[_4483]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14759 == -1:
                                revert with 'NH{q', 17
                            if _14759 >= mem[_12312]:
                                revert with 'NH{q', 50
                            mem[_14759 + _12312 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19523 = mem[_7940]
                            idx = 0
                            s = _14759 + 1
                            while idx < _19523:
                                if idx >= mem[_7940]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12312]:
                                    revert with 'NH{q', 50
                                mem[s + _12312 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19523 = mem[_7940]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _20013 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20279 = mem[_12312]
                            mem[mem[64] + 36] = mem[_12312]
                            mem[mem[64] + 68 len ceil32(_20279)] = mem[_12312 + 32 len ceil32(_20279)]
                            var159001 = ceil32(_20279)
                            if ceil32(_20279) <= _20279:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20279) + 32]
                            mem[mem[64] + _20279 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20279) + _20013 + -mem[64] + 68
                        mem[_12312 + 32 len _11748 + _11747 + 1] = call.data[calldata.size len _11748 + _11747 + 1]
                        _14760 = mem[_4483]
                        idx = 0
                        s = 0
                        while idx < _14760:
                            if idx >= mem[_4483]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12312]:
                                revert with 'NH{q', 50
                            mem[s + _12312 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14760 = mem[_4483]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14760 == -1:
                            revert with 'NH{q', 17
                        if _14760 >= mem[_12312]:
                            revert with 'NH{q', 50
                        mem[_14760 + _12312 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19524 = mem[_7940]
                        idx = 0
                        s = _14760 + 1
                        while idx < _19524:
                            if idx >= mem[_7940]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12312]:
                                revert with 'NH{q', 50
                            mem[s + _12312 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7940')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19524 = mem[_7940]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3570 > _2810:
                        _20014 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20280 = mem[_12312]
                        mem[mem[64] + 36] = mem[_12312]
                        mem[mem[64] + 68 len ceil32(_20280)] = mem[_12312 + 32 len ceil32(_20280)]
                        var160001 = ceil32(_20280)
                        if ceil32(_20280) <= _20280:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20280) + 32]
                        mem[mem[64] + _20280 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20280) + _20014 + -mem[64] + 68
                    mem[_4483 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3570 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4483]:
                            revert with 'NH{q', 50
                        mem[t + _4483 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6083 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6083] = 26
                    mem[_6083 + 32] = 'SafeMath: division by zero'
                    if not _2810 / 10^18:
                        _6357 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6357] = 1
                        mem[_6357 + 32] = '0'
                        _6430 = mem[_4483]
                        if mem[_4483] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4483] + 1):
                            revert with 'NH{q', 17
                        if mem[_4483] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _6641 = mem[64]
                        mem[mem[64]] = mem[_4483] + 2
                        mem[64] = mem[64] + floor32(_6430 + 33) + 32
                        if not _6430 + 2:
                            _7773 = mem[_4483]
                            idx = 0
                            s = 0
                            while idx < _7773:
                                if idx >= mem[_4483]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6641]:
                                    revert with 'NH{q', 50
                                mem[s + _6641 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7773 = mem[_4483]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7773 == -1:
                                revert with 'NH{q', 17
                            if _7773 >= mem[_6641]:
                                revert with 'NH{q', 50
                            mem[_7773 + _6641 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11499 = mem[_6357]
                            idx = 0
                            s = _7773 + 1
                            while idx < _11499:
                                if idx >= mem[_6357]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6641]:
                                    revert with 'NH{q', 50
                                mem[s + _6641 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6357')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6357')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11499 = mem[_6357]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _11755 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11921 = mem[_6641]
                            mem[mem[64] + 36] = mem[_6641]
                            mem[mem[64] + 68 len ceil32(_11921)] = mem[_6641 + 32 len ceil32(_11921)]
                            var151001 = ceil32(_11921)
                            if ceil32(_11921) <= _11921:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11921) + 32]
                            mem[mem[64] + _11921 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11921) + _11755 + -mem[64] + 68
                        mem[_6641 + 32 len _6430 + 2] = call.data[calldata.size len _6430 + 2]
                        _7774 = mem[_4483]
                        idx = 0
                        s = 0
                        while idx < _7774:
                            if idx >= mem[_4483]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6641]:
                                revert with 'NH{q', 50
                            mem[s + _6641 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7774 = mem[_4483]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7774 == -1:
                            revert with 'NH{q', 17
                        if _7774 >= mem[_6641]:
                            revert with 'NH{q', 50
                        mem[_7774 + _6641 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11500 = mem[_6357]
                        idx = 0
                        s = _7774 + 1
                        while idx < _11500:
                            if idx >= mem[_6357]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6641]:
                                revert with 'NH{q', 50
                            mem[s + _6641 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6357')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6357')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11500 = mem[_6357]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3570 > _2810:
                        _11756 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11922 = mem[_6641]
                        mem[mem[64] + 36] = mem[_6641]
                        mem[mem[64] + 68 len ceil32(_11922)] = mem[_6641 + 32 len ceil32(_11922)]
                        var152001 = ceil32(_11922)
                        if ceil32(_11922) <= _11922:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11922) + 32]
                        mem[mem[64] + _11922 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11922) + _11756 + -mem[64] + 68
                    s = 0
                    idx = _2810 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7943 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2810 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7943]:
                                revert with 'NH{q', 50
                            mem[t + _7943 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11751 = mem[_7943]
                        _11752 = mem[_4483]
                        if mem[_4483] > !mem[_7943]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4483] + mem[_7943]):
                            revert with 'NH{q', 17
                        if mem[_4483] + mem[_7943] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12314 = mem[64]
                        mem[mem[64]] = mem[_4483] + mem[_7943] + 1
                        mem[64] = mem[64] + floor32(_11752 + _11751 + 32) + 32
                        if not _11752 + _11751 + 1:
                            _14761 = mem[_4483]
                            idx = 0
                            s = 0
                            while idx < _14761:
                                if idx >= mem[_4483]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12314]:
                                    revert with 'NH{q', 50
                                mem[s + _12314 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14761 = mem[_4483]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14761 == -1:
                                revert with 'NH{q', 17
                            if _14761 >= mem[_12314]:
                                revert with 'NH{q', 50
                            mem[_14761 + _12314 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19525 = mem[_7943]
                            idx = 0
                            s = _14761 + 1
                            while idx < _19525:
                                if idx >= mem[_7943]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12314]:
                                    revert with 'NH{q', 50
                                mem[s + _12314 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19525 = mem[_7943]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3570 > _2810:
                            _20015 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20281 = mem[_12314]
                            mem[mem[64] + 36] = mem[_12314]
                            mem[mem[64] + 68 len ceil32(_20281)] = mem[_12314 + 32 len ceil32(_20281)]
                            var159001 = ceil32(_20281)
                            if ceil32(_20281) <= _20281:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20281) + 32]
                            mem[mem[64] + _20281 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20281) + _20015 + -mem[64] + 68
                        mem[_12314 + 32 len _11752 + _11751 + 1] = call.data[calldata.size len _11752 + _11751 + 1]
                        _14762 = mem[_4483]
                        idx = 0
                        s = 0
                        while idx < _14762:
                            if idx >= mem[_4483]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12314]:
                                revert with 'NH{q', 50
                            mem[s + _12314 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14762 = mem[_4483]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14762 == -1:
                            revert with 'NH{q', 17
                        if _14762 >= mem[_12314]:
                            revert with 'NH{q', 50
                        mem[_14762 + _12314 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19526 = mem[_7943]
                        idx = 0
                        s = _14762 + 1
                        while idx < _19526:
                            if idx >= mem[_7943]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12314]:
                                revert with 'NH{q', 50
                            mem[s + _12314 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19526 = mem[_7943]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3570 > _2810:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20282 = mem[_12314]
                        mem[mem[64] + 36] = mem[_12314]
                        mem[mem[64] + 68 len ceil32(_20282)] = mem[_12314 + 32 len ceil32(_20282)]
                        var160001 = ceil32(_20282)
                        if ceil32(_20282) > _20282:
                            mem[mem[64] + _20282 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20282) + 32]
                    mem[_7943 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2810 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7943]:
                            revert with 'NH{q', 50
                        mem[t + _7943 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11753 = mem[_7943]
                    _11754 = mem[_4483]
                    if mem[_4483] > !mem[_7943]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4483] + mem[_7943]):
                        revert with 'NH{q', 17
                    if mem[_4483] + mem[_7943] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12316 = mem[64]
                    mem[mem[64]] = mem[_4483] + mem[_7943] + 1
                    mem[64] = mem[64] + floor32(_11754 + _11753 + 32) + 32
                    if not _11754 + _11753 + 1:
                        _14763 = mem[_4483]
                        idx = 0
                        s = 0
                        while idx < _14763:
                            if idx >= mem[_4483]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12316]:
                                revert with 'NH{q', 50
                            mem[s + _12316 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14763 = mem[_4483]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14763 == -1:
                            revert with 'NH{q', 17
                        if _14763 >= mem[_12316]:
                            revert with 'NH{q', 50
                        mem[_14763 + _12316 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19527 = mem[_7943]
                        idx = 0
                        s = _14763 + 1
                        while idx < _19527:
                            if idx >= mem[_7943]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12316]:
                                revert with 'NH{q', 50
                            mem[s + _12316 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19527 = mem[_7943]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3570 > _2810:
                        _20017 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20283 = mem[_12316]
                        mem[mem[64] + 36] = mem[_12316]
                        mem[mem[64] + 68 len ceil32(_20283)] = mem[_12316 + 32 len ceil32(_20283)]
                        var160001 = ceil32(_20283)
                        if ceil32(_20283) <= _20283:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20283) + 32]
                        mem[mem[64] + _20283 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20283) + _20017 + -mem[64] + 68
                    mem[_12316 + 32 len _11754 + _11753 + 1] = call.data[calldata.size len _11754 + _11753 + 1]
                    _14764 = mem[_4483]
                    idx = 0
                    s = 0
                    while idx < _14764:
                        if idx >= mem[_4483]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12316]:
                            revert with 'NH{q', 50
                        mem[s + _12316 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4483')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14764 = mem[_4483]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14764 == -1:
                        revert with 'NH{q', 17
                    if _14764 >= mem[_12316]:
                        revert with 'NH{q', 50
                    mem[_14764 + _12316 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19528 = mem[_7943]
                    idx = 0
                    s = _14764 + 1
                    while idx < _19528:
                        if idx >= mem[_7943]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12316]:
                            revert with 'NH{q', 50
                        mem[s + _12316 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7943')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19528 = mem[_7943]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3570 > _2810:
                    _20018 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20284 = mem[_12316]
                    mem[mem[64] + 36] = mem[_12316]
                    mem[mem[64] + 68 len ceil32(_20284)] = mem[_12316 + 32 len ceil32(_20284)]
                    var161001 = ceil32(_20284)
                    if ceil32(_20284) <= _20284:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20284) + 32]
                    mem[mem[64] + _20284 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20284) + _20018 + -mem[64] + 68
                mem[0] = 11
                mem[_2775 + 32] = address(stor11.field_0)
                idx = _2775 + 32
                s = 0
                while _2775 + (32 * stor11.length) > idx:
                    mem[idx + 32] = stor11[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3500 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3524 = mem[_3500]
                if 0 >= stor11.length:
                    revert with 'NH{q', 50
                _3550 = mem[_2775 + 32]
                if 1 >= stor11.length:
                    revert with 'NH{q', 50
                if 0 >= stor11.length:
                    revert with 'NH{q', 50
                mem[_2775 + 32] = mem[_2775 + 76 len 20]
                if 1 >= stor11.length:
                    revert with 'NH{q', 50
                mem[_2775 + 64] = address(_3550)
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _3633 = mem[_2768]
                mem[mem[64] + 164] = mem[_2768]
                idx = 0
                s = mem[64] + 196
                t = _2768 + 32
                while idx < _3633:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args arg1, 0, 160, address(this.address), test266151307(), mem[mem[64] + 164 len (32 * _3633) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4567 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4627 = mem[_4567]
                _4663 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _4627
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _4687 = mem[_2775]
                mem[mem[64] + 164] = mem[_2775]
                idx = 0
                s = mem[64] + 196
                t = _2775 + 32
                while idx < _4687:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_4663 + 100] = this.address
                mem[_4663 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _4663 + (32 * _4687) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6188 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6231 = mem[_6188]
                _6292 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6292] = 26
                mem[_6292 + 32] = 'SafeMath: division by zero'
                if not _6231 / 10^18:
                    _6570 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6570] = 1
                    mem[_6570 + 32] = '0'
                    _6646 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6646] = 26
                    mem[_6646 + 32] = 'SafeMath: division by zero'
                    if not _3524 / 10^18:
                        _6995 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6995] = 1
                        mem[_6995 + 32] = '0'
                        _7209 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_7209 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_6570]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7209]:
                                revert with 'NH{q', 50
                            mem[s + _7209 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_7209]:
                            revert with 'NH{q', 50
                        mem[_7209 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11506 = mem[_6995]
                        idx = 0
                        s = 2
                        while idx < _11506:
                            if idx >= mem[_6995]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7209]:
                                revert with 'NH{q', 50
                            mem[s + _7209 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6995')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6995')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11506 = mem[_6995]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _11768 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11928 = mem[_7209]
                        mem[mem[64] + 36] = mem[_7209]
                        mem[mem[64] + 68 len ceil32(_11928)] = mem[_7209 + 32 len ceil32(_11928)]
                        var147001 = ceil32(_11928)
                        if ceil32(_11928) <= _11928:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11928) + 32]
                        mem[mem[64] + _11928 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11928) + _11768 + -mem[64] + 68
                    s = 0
                    idx = _3524 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7951 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3524 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7951]:
                                revert with 'NH{q', 50
                            mem[t + _7951 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11763 = mem[_7951]
                        _11764 = mem[_6570]
                        if mem[_6570] > !mem[_7951]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_6570] + mem[_7951]):
                            revert with 'NH{q', 17
                        if mem[_6570] + mem[_7951] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12320 = mem[64]
                        mem[mem[64]] = mem[_6570] + mem[_7951] + 1
                        mem[64] = mem[64] + floor32(_11764 + _11763 + 32) + 32
                        if not _11764 + _11763 + 1:
                            _14769 = mem[_6570]
                            idx = 0
                            s = 0
                            while idx < _14769:
                                if idx >= mem[_6570]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12320]:
                                    revert with 'NH{q', 50
                                mem[s + _12320 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14769 = mem[_6570]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14769 == -1:
                                revert with 'NH{q', 17
                            if _14769 >= mem[_12320]:
                                revert with 'NH{q', 50
                            mem[_14769 + _12320 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19533 = mem[_7951]
                            idx = 0
                            s = _14769 + 1
                            while idx < _19533:
                                if idx >= mem[_7951]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12320]:
                                    revert with 'NH{q', 50
                                mem[s + _12320 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19533 = mem[_7951]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6231 > _3524:
                            _20031 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20289 = mem[_12320]
                            mem[mem[64] + 36] = mem[_12320]
                            mem[mem[64] + 68 len ceil32(_20289)] = mem[_12320 + 32 len ceil32(_20289)]
                            var154001 = ceil32(_20289)
                            if ceil32(_20289) <= _20289:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20289) + 32]
                            mem[mem[64] + _20289 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20289) + _20031 + -mem[64] + 68
                        mem[_12320 + 32 len _11764 + _11763 + 1] = call.data[calldata.size len _11764 + _11763 + 1]
                        _14770 = mem[_6570]
                        idx = 0
                        s = 0
                        while idx < _14770:
                            if idx >= mem[_6570]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12320]:
                                revert with 'NH{q', 50
                            mem[s + _12320 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14770 = mem[_6570]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14770 == -1:
                            revert with 'NH{q', 17
                        if _14770 >= mem[_12320]:
                            revert with 'NH{q', 50
                        mem[_14770 + _12320 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19534 = mem[_7951]
                        idx = 0
                        s = _14770 + 1
                        while idx < _19534:
                            if idx >= mem[_7951]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12320]:
                                revert with 'NH{q', 50
                            mem[s + _12320 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19534 = mem[_7951]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _20032 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20290 = mem[_12320]
                        mem[mem[64] + 36] = mem[_12320]
                        mem[mem[64] + 68 len ceil32(_20290)] = mem[_12320 + 32 len ceil32(_20290)]
                        var155001 = ceil32(_20290)
                        if ceil32(_20290) <= _20290:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20290) + 32]
                        mem[mem[64] + _20290 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20290) + _20032 + -mem[64] + 68
                    mem[_7951 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3524 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7951]:
                            revert with 'NH{q', 50
                        mem[t + _7951 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11765 = mem[_7951]
                    _11766 = mem[_6570]
                    if mem[_6570] > !mem[_7951]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6570] + mem[_7951]):
                        revert with 'NH{q', 17
                    if mem[_6570] + mem[_7951] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12322 = mem[64]
                    mem[mem[64]] = mem[_6570] + mem[_7951] + 1
                    mem[64] = mem[64] + floor32(_11766 + _11765 + 32) + 32
                    if not _11766 + _11765 + 1:
                        _14771 = mem[_6570]
                        idx = 0
                        s = 0
                        while idx < _14771:
                            if idx >= mem[_6570]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12322]:
                                revert with 'NH{q', 50
                            mem[s + _12322 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14771 = mem[_6570]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14771 == -1:
                            revert with 'NH{q', 17
                        if _14771 >= mem[_12322]:
                            revert with 'NH{q', 50
                        mem[_14771 + _12322 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19535 = mem[_7951]
                        idx = 0
                        s = _14771 + 1
                        while idx < _19535:
                            if idx >= mem[_7951]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12322]:
                                revert with 'NH{q', 50
                            mem[s + _12322 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19535 = mem[_7951]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _20033 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20291 = mem[_12322]
                        mem[mem[64] + 36] = mem[_12322]
                        mem[mem[64] + 68 len ceil32(_20291)] = mem[_12322 + 32 len ceil32(_20291)]
                        var155001 = ceil32(_20291)
                        if ceil32(_20291) <= _20291:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20291) + 32]
                        mem[mem[64] + _20291 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20291) + _20033 + -mem[64] + 68
                    mem[_12322 + 32 len _11766 + _11765 + 1] = call.data[calldata.size len _11766 + _11765 + 1]
                    _14772 = mem[_6570]
                    idx = 0
                    s = 0
                    while idx < _14772:
                        if idx >= mem[_6570]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12322]:
                            revert with 'NH{q', 50
                        mem[s + _12322 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6570')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14772 = mem[_6570]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14772 == -1:
                        revert with 'NH{q', 17
                    if _14772 >= mem[_12322]:
                        revert with 'NH{q', 50
                    mem[_14772 + _12322 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19536 = mem[_7951]
                    idx = 0
                    s = _14772 + 1
                    while idx < _19536:
                        if idx >= mem[_7951]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12322]:
                            revert with 'NH{q', 50
                        mem[s + _12322 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7951')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19536 = mem[_7951]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6231 > _3524:
                    _20034 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20292 = mem[_12322]
                    mem[mem[64] + 36] = mem[_12322]
                    mem[mem[64] + 68 len ceil32(_20292)] = mem[_12322 + 32 len ceil32(_20292)]
                    var156001 = ceil32(_20292)
                    if ceil32(_20292) <= _20292:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20292) + 32]
                    mem[mem[64] + _20292 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20292) + _20034 + -mem[64] + 68
                s = 0
                idx = _6231 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7950 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6231 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7950]:
                            revert with 'NH{q', 50
                        mem[t + _7950 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11761 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_11761] = 26
                    mem[_11761 + 32] = 'SafeMath: division by zero'
                    if not _3524 / 10^18:
                        _12491 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12491] = 1
                        mem[_12491 + 32] = '0'
                        _12700 = mem[_7950]
                        if mem[_7950] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7950] + 1):
                            revert with 'NH{q', 17
                        if mem[_7950] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _13338 = mem[64]
                        mem[mem[64]] = mem[_7950] + 2
                        mem[64] = mem[64] + floor32(_12700 + 33) + 32
                        if not _12700 + 2:
                            _14765 = mem[_7950]
                            idx = 0
                            s = 0
                            while idx < _14765:
                                if idx >= mem[_7950]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13338]:
                                    revert with 'NH{q', 50
                                mem[s + _13338 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14765 = mem[_7950]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14765 == -1:
                                revert with 'NH{q', 17
                            if _14765 >= mem[_13338]:
                                revert with 'NH{q', 50
                            mem[_14765 + _13338 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19529 = mem[_12491]
                            idx = 0
                            s = _14765 + 1
                            while idx < _19529:
                                if idx >= mem[_12491]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13338]:
                                    revert with 'NH{q', 50
                                mem[s + _13338 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12491')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12491')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19529 = mem[_12491]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6231 > _3524:
                            _20023 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20285 = mem[_13338]
                            mem[mem[64] + 36] = mem[_13338]
                            mem[mem[64] + 68 len ceil32(_20285)] = mem[_13338 + 32 len ceil32(_20285)]
                            var154001 = ceil32(_20285)
                            if ceil32(_20285) <= _20285:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20285) + 32]
                            mem[mem[64] + _20285 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20285) + _20023 + -mem[64] + 68
                        mem[_13338 + 32 len _12700 + 2] = call.data[calldata.size len _12700 + 2]
                        _14766 = mem[_7950]
                        idx = 0
                        s = 0
                        while idx < _14766:
                            if idx >= mem[_7950]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13338]:
                                revert with 'NH{q', 50
                            mem[s + _13338 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14766 = mem[_7950]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14766 == -1:
                            revert with 'NH{q', 17
                        if _14766 >= mem[_13338]:
                            revert with 'NH{q', 50
                        mem[_14766 + _13338 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19530 = mem[_12491]
                        idx = 0
                        s = _14766 + 1
                        while idx < _19530:
                            if idx >= mem[_12491]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13338]:
                                revert with 'NH{q', 50
                            mem[s + _13338 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12491')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12491')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19530 = mem[_12491]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20286 = mem[_13338]
                        mem[mem[64] + 36] = mem[_13338]
                        mem[mem[64] + 68 len ceil32(_20286)] = mem[_13338 + 32 len ceil32(_20286)]
                        var155001 = ceil32(_20286)
                        if ceil32(_20286) > _20286:
                            mem[mem[64] + _20286 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20286) + 32]
                    s = 0
                    idx = _3524 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _15155 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3524 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_15155]:
                                revert with 'NH{q', 50
                            mem[t + _15155 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _20019 = mem[_15155]
                        _20020 = mem[_7950]
                        if mem[_7950] > !mem[_15155]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7950] + mem[_15155]):
                            revert with 'NH{q', 17
                        if mem[_7950] + mem[_15155] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _21053 = mem[64]
                        mem[mem[64]] = mem[_7950] + mem[_15155] + 1
                        mem[64] = mem[64] + floor32(_20020 + _20019 + 32) + 32
                        if not _20020 + _20019 + 1:
                            _23251 = mem[_7950]
                            idx = 0
                            s = 0
                            while idx < _23251:
                                if idx >= mem[_7950]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21053]:
                                    revert with 'NH{q', 50
                                mem[s + _21053 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _23251 = mem[_7950]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _23251 == -1:
                                revert with 'NH{q', 17
                            if _23251 >= mem[_21053]:
                                revert with 'NH{q', 50
                            mem[_23251 + _21053 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _26515 = mem[_15155]
                            idx = 0
                            s = _23251 + 1
                            while idx < _26515:
                                if idx >= mem[_15155]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21053]:
                                    revert with 'NH{q', 50
                                mem[s + _21053 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _26515 = mem[_15155]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6231 > _3524:
                            _26955 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _27139 = mem[_21053]
                            mem[mem[64] + 36] = mem[_21053]
                            mem[mem[64] + 68 len ceil32(_27139)] = mem[_21053 + 32 len ceil32(_27139)]
                            var162001 = ceil32(_27139)
                            if ceil32(_27139) <= _27139:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27139) + 32]
                            mem[mem[64] + _27139 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_27139) + _26955 + -mem[64] + 68
                        mem[_21053 + 32 len _20020 + _20019 + 1] = call.data[calldata.size len _20020 + _20019 + 1]
                        _23252 = mem[_7950]
                        idx = 0
                        s = 0
                        while idx < _23252:
                            if idx >= mem[_7950]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21053]:
                                revert with 'NH{q', 50
                            mem[s + _21053 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23252 = mem[_7950]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23252 == -1:
                            revert with 'NH{q', 17
                        if _23252 >= mem[_21053]:
                            revert with 'NH{q', 50
                        mem[_23252 + _21053 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26516 = mem[_15155]
                        idx = 0
                        s = _23252 + 1
                        while idx < _26516:
                            if idx >= mem[_15155]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21053]:
                                revert with 'NH{q', 50
                            mem[s + _21053 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26516 = mem[_15155]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _26956 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27140 = mem[_21053]
                        mem[mem[64] + 36] = mem[_21053]
                        mem[mem[64] + 68 len ceil32(_27140)] = mem[_21053 + 32 len ceil32(_27140)]
                        var163001 = ceil32(_27140)
                        if ceil32(_27140) <= _27140:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27140) + 32]
                        mem[mem[64] + _27140 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27140) + _26956 + -mem[64] + 68
                    mem[_15155 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3524 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15155]:
                            revert with 'NH{q', 50
                        mem[t + _15155 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20021 = mem[_15155]
                    _20022 = mem[_7950]
                    if mem[_7950] > !mem[_15155]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7950] + mem[_15155]):
                        revert with 'NH{q', 17
                    if mem[_7950] + mem[_15155] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21055 = mem[64]
                    mem[mem[64]] = mem[_7950] + mem[_15155] + 1
                    mem[64] = mem[64] + floor32(_20022 + _20021 + 32) + 32
                    if not _20022 + _20021 + 1:
                        _23253 = mem[_7950]
                        idx = 0
                        s = 0
                        while idx < _23253:
                            if idx >= mem[_7950]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21055]:
                                revert with 'NH{q', 50
                            mem[s + _21055 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23253 = mem[_7950]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23253 == -1:
                            revert with 'NH{q', 17
                        if _23253 >= mem[_21055]:
                            revert with 'NH{q', 50
                        mem[_23253 + _21055 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26517 = mem[_15155]
                        idx = 0
                        s = _23253 + 1
                        while idx < _26517:
                            if idx >= mem[_15155]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21055]:
                                revert with 'NH{q', 50
                            mem[s + _21055 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26517 = mem[_15155]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _26957 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27141 = mem[_21055]
                        mem[mem[64] + 36] = mem[_21055]
                        mem[mem[64] + 68 len ceil32(_27141)] = mem[_21055 + 32 len ceil32(_27141)]
                        var163001 = ceil32(_27141)
                        if ceil32(_27141) <= _27141:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27141) + 32]
                        mem[mem[64] + _27141 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27141) + _26957 + -mem[64] + 68
                    mem[_21055 + 32 len _20022 + _20021 + 1] = call.data[calldata.size len _20022 + _20021 + 1]
                    _23254 = mem[_7950]
                    idx = 0
                    s = 0
                    while idx < _23254:
                        if idx >= mem[_7950]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21055]:
                            revert with 'NH{q', 50
                        mem[s + _21055 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23254 = mem[_7950]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23254 == -1:
                        revert with 'NH{q', 17
                    if _23254 >= mem[_21055]:
                        revert with 'NH{q', 50
                    mem[_23254 + _21055 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26518 = mem[_15155]
                    idx = 0
                    s = _23254 + 1
                    while idx < _26518:
                        if idx >= mem[_15155]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21055]:
                            revert with 'NH{q', 50
                        mem[s + _21055 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15155')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26518 = mem[_15155]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6231 > _3524:
                    _26958 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27142 = mem[_21055]
                    mem[mem[64] + 36] = mem[_21055]
                    mem[mem[64] + 68 len ceil32(_27142)] = mem[_21055 + 32 len ceil32(_27142)]
                    var164001 = ceil32(_27142)
                    if ceil32(_27142) <= _27142:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27142) + 32]
                    mem[mem[64] + _27142 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27142) + _26958 + -mem[64] + 68
                mem[_7950 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6231 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7950]:
                        revert with 'NH{q', 50
                    mem[t + _7950 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11762 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11762] = 26
                mem[_11762 + 32] = 'SafeMath: division by zero'
                if not _3524 / 10^18:
                    _12492 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12492] = 1
                    mem[_12492 + 32] = '0'
                    _12702 = mem[_7950]
                    if mem[_7950] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7950] + 1):
                        revert with 'NH{q', 17
                    if mem[_7950] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13339 = mem[64]
                    mem[mem[64]] = mem[_7950] + 2
                    mem[64] = mem[64] + floor32(_12702 + 33) + 32
                    if not _12702 + 2:
                        _14767 = mem[_7950]
                        idx = 0
                        s = 0
                        while idx < _14767:
                            if idx >= mem[_7950]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13339]:
                                revert with 'NH{q', 50
                            mem[s + _13339 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14767 = mem[_7950]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14767 == -1:
                            revert with 'NH{q', 17
                        if _14767 >= mem[_13339]:
                            revert with 'NH{q', 50
                        mem[_14767 + _13339 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19531 = mem[_12492]
                        idx = 0
                        s = _14767 + 1
                        while idx < _19531:
                            if idx >= mem[_12492]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13339]:
                                revert with 'NH{q', 50
                            mem[s + _13339 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12492')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12492')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19531 = mem[_12492]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _20029 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20287 = mem[_13339]
                        mem[mem[64] + 36] = mem[_13339]
                        mem[mem[64] + 68 len ceil32(_20287)] = mem[_13339 + 32 len ceil32(_20287)]
                        var155001 = ceil32(_20287)
                        if ceil32(_20287) <= _20287:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20287) + 32]
                        mem[mem[64] + _20287 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20287) + _20029 + -mem[64] + 68
                    mem[_13339 + 32 len _12702 + 2] = call.data[calldata.size len _12702 + 2]
                    _14768 = mem[_7950]
                    idx = 0
                    s = 0
                    while idx < _14768:
                        if idx >= mem[_7950]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13339]:
                            revert with 'NH{q', 50
                        mem[s + _13339 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14768 = mem[_7950]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14768 == -1:
                        revert with 'NH{q', 17
                    if _14768 >= mem[_13339]:
                        revert with 'NH{q', 50
                    mem[_14768 + _13339 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19532 = mem[_12492]
                    idx = 0
                    s = _14768 + 1
                    while idx < _19532:
                        if idx >= mem[_12492]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13339]:
                            revert with 'NH{q', 50
                        mem[s + _13339 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12492')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12492')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19532 = mem[_12492]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6231 > _3524:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20288 = mem[_13339]
                    mem[mem[64] + 36] = mem[_13339]
                    mem[mem[64] + 68 len ceil32(_20288)] = mem[_13339 + 32 len ceil32(_20288)]
                    var156001 = ceil32(_20288)
                    if ceil32(_20288) > _20288:
                        mem[mem[64] + _20288 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20288) + 32]
                s = 0
                idx = _3524 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15158 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3524 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15158]:
                            revert with 'NH{q', 50
                        mem[t + _15158 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20025 = mem[_15158]
                    _20026 = mem[_7950]
                    if mem[_7950] > !mem[_15158]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7950] + mem[_15158]):
                        revert with 'NH{q', 17
                    if mem[_7950] + mem[_15158] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21057 = mem[64]
                    mem[mem[64]] = mem[_7950] + mem[_15158] + 1
                    mem[64] = mem[64] + floor32(_20026 + _20025 + 32) + 32
                    if not _20026 + _20025 + 1:
                        _23255 = mem[_7950]
                        idx = 0
                        s = 0
                        while idx < _23255:
                            if idx >= mem[_7950]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21057]:
                                revert with 'NH{q', 50
                            mem[s + _21057 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23255 = mem[_7950]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23255 == -1:
                            revert with 'NH{q', 17
                        if _23255 >= mem[_21057]:
                            revert with 'NH{q', 50
                        mem[_23255 + _21057 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26519 = mem[_15158]
                        idx = 0
                        s = _23255 + 1
                        while idx < _26519:
                            if idx >= mem[_15158]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21057]:
                                revert with 'NH{q', 50
                            mem[s + _21057 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26519 = mem[_15158]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6231 > _3524:
                        _26959 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27143 = mem[_21057]
                        mem[mem[64] + 36] = mem[_21057]
                        mem[mem[64] + 68 len ceil32(_27143)] = mem[_21057 + 32 len ceil32(_27143)]
                        var163001 = ceil32(_27143)
                        if ceil32(_27143) <= _27143:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27143) + 32]
                        mem[mem[64] + _27143 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27143) + _26959 + -mem[64] + 68
                    mem[_21057 + 32 len _20026 + _20025 + 1] = call.data[calldata.size len _20026 + _20025 + 1]
                    _23256 = mem[_7950]
                    idx = 0
                    s = 0
                    while idx < _23256:
                        if idx >= mem[_7950]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21057]:
                            revert with 'NH{q', 50
                        mem[s + _21057 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23256 = mem[_7950]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23256 == -1:
                        revert with 'NH{q', 17
                    if _23256 >= mem[_21057]:
                        revert with 'NH{q', 50
                    mem[_23256 + _21057 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26520 = mem[_15158]
                    idx = 0
                    s = _23256 + 1
                    while idx < _26520:
                        if idx >= mem[_15158]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21057]:
                            revert with 'NH{q', 50
                        mem[s + _21057 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26520 = mem[_15158]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6231 > _3524:
                    _26960 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27144 = mem[_21057]
                    mem[mem[64] + 36] = mem[_21057]
                    mem[mem[64] + 68 len ceil32(_27144)] = mem[_21057 + 32 len ceil32(_27144)]
                    var164001 = ceil32(_27144)
                    if ceil32(_27144) <= _27144:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27144) + 32]
                    mem[mem[64] + _27144 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27144) + _26960 + -mem[64] + 68
                mem[_15158 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3524 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15158]:
                        revert with 'NH{q', 50
                    mem[t + _15158 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20027 = mem[_15158]
                _20028 = mem[_7950]
                if mem[_7950] > !mem[_15158]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7950] + mem[_15158]):
                    revert with 'NH{q', 17
                if mem[_7950] + mem[_15158] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21059 = mem[64]
                mem[mem[64]] = mem[_7950] + mem[_15158] + 1
                mem[64] = mem[64] + floor32(_20028 + _20027 + 32) + 32
                if not _20028 + _20027 + 1:
                    _23257 = mem[_7950]
                    idx = 0
                    s = 0
                    while idx < _23257:
                        if idx >= mem[_7950]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21059]:
                            revert with 'NH{q', 50
                        mem[s + _21059 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23257 = mem[_7950]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23257 == -1:
                        revert with 'NH{q', 17
                    if _23257 >= mem[_21059]:
                        revert with 'NH{q', 50
                    mem[_23257 + _21059 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26521 = mem[_15158]
                    idx = 0
                    s = _23257 + 1
                    while idx < _26521:
                        if idx >= mem[_15158]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21059]:
                            revert with 'NH{q', 50
                        mem[s + _21059 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26521 = mem[_15158]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6231 > _3524:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27145 = mem[_21059]
                    mem[mem[64] + 36] = mem[_21059]
                    mem[mem[64] + 68 len ceil32(_27145)] = mem[_21059 + 32 len ceil32(_27145)]
                    var164001 = ceil32(_27145)
                    if ceil32(_27145) > _27145:
                        mem[mem[64] + _27145 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27145) + 32]
                mem[_21059 + 32 len _20028 + _20027 + 1] = call.data[calldata.size len _20028 + _20027 + 1]
                _23258 = mem[_7950]
                idx = 0
                s = 0
                while idx < _23258:
                    if idx >= mem[_7950]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21059]:
                        revert with 'NH{q', 50
                    mem[s + _21059 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7950')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23258 = mem[_7950]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23258 == -1:
                    revert with 'NH{q', 17
                if _23258 >= mem[_21059]:
                    revert with 'NH{q', 50
                mem[_23258 + _21059 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26522 = mem[_15158]
                idx = 0
                s = _23258 + 1
                while idx < _26522:
                    if idx >= mem[_15158]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21059]:
                        revert with 'NH{q', 50
                    mem[s + _21059 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15158')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26522 = mem[_15158]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6231 > _3524:
                _26962 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27146 = mem[_21059]
                mem[mem[64] + 36] = mem[_21059]
                mem[mem[64] + 68 len ceil32(_27146)] = mem[_21059 + 32 len ceil32(_27146)]
                var165001 = ceil32(_27146)
                if ceil32(_27146) <= _27146:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27146) + 32]
                mem[mem[64] + _27146 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27146) + _26962 + -mem[64] + 68
            mem[0] = 10
            mem[_2768 + 32] = address(stor10.field_0)
            idx = _2768 + 32
            s = 0
            while _2768 + (32 * stor10.length) > idx:
                mem[idx + 32] = stor10[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            _3452 = mem[64]
            mem[64] = mem[64] + (32 * stor11.length) + 32
            mem[_3452] = stor11.length
            if not stor11.length:
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3510 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3534 = mem[_3510]
                if 0 >= stor11.length:
                    revert with 'NH{q', 50
                _3573 = mem[_3452 + 32]
                if 1 >= stor11.length:
                    revert with 'NH{q', 50
                if 0 >= stor11.length:
                    revert with 'NH{q', 50
                mem[_3452 + 32] = mem[_3452 + 76 len 20]
                if 1 >= stor11.length:
                    revert with 'NH{q', 50
                mem[_3452 + 64] = address(_3573)
                _3634 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = stor10.length
                idx = 0
                s = mem[64] + 196
                t = _2768 + 32
                while idx < stor10.length:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_3634 + 100] = this.address
                mem[_3634 + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3634 + (32 * stor10.length) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4568 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4628 = mem[_4568]
                _4664 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _4628
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _4688 = mem[_3452]
                mem[mem[64] + 164] = mem[_3452]
                idx = 0
                s = mem[64] + 196
                t = _3452 + 32
                while idx < _4688:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_4664 + 100] = this.address
                mem[_4664 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _4664 + (32 * _4688) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6189 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6232 = mem[_6189]
                _6293 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6293] = 26
                mem[_6293 + 32] = 'SafeMath: division by zero'
                if not _6232 / 10^18:
                    _6571 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6571] = 1
                    mem[_6571 + 32] = '0'
                    _6647 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6647] = 26
                    mem[_6647 + 32] = 'SafeMath: division by zero'
                    if not _3534 / 10^18:
                        _6996 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6996] = 1
                        mem[_6996 + 32] = '0'
                        _7210 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_7210 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_6571]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7210]:
                                revert with 'NH{q', 50
                            mem[s + _7210 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_7210]:
                            revert with 'NH{q', 50
                        mem[_7210 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11508 = mem[_6996]
                        idx = 0
                        s = 2
                        while idx < _11508:
                            if idx >= mem[_6996]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7210]:
                                revert with 'NH{q', 50
                            mem[s + _7210 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6996')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6996')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11508 = mem[_6996]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        _11776 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11930 = mem[_7210]
                        mem[mem[64] + 36] = mem[_7210]
                        mem[mem[64] + 68 len ceil32(_11930)] = mem[_7210 + 32 len ceil32(_11930)]
                        var147001 = ceil32(_11930)
                        if ceil32(_11930) <= _11930:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11930) + 32]
                        mem[mem[64] + _11930 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11930) + _11776 + -mem[64] + 68
                    s = 0
                    idx = _3534 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7955 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3534 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7955]:
                                revert with 'NH{q', 50
                            mem[t + _7955 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11771 = mem[_7955]
                        _11772 = mem[_6571]
                        if mem[_6571] > !mem[_7955]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_6571] + mem[_7955]):
                            revert with 'NH{q', 17
                        if mem[_6571] + mem[_7955] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12326 = mem[64]
                        mem[mem[64]] = mem[_6571] + mem[_7955] + 1
                        mem[64] = mem[64] + floor32(_11772 + _11771 + 32) + 32
                        if not _11772 + _11771 + 1:
                            _14777 = mem[_6571]
                            idx = 0
                            s = 0
                            while idx < _14777:
                                if idx >= mem[_6571]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12326]:
                                    revert with 'NH{q', 50
                                mem[s + _12326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14777 = mem[_6571]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14777 == -1:
                                revert with 'NH{q', 17
                            if _14777 >= mem[_12326]:
                                revert with 'NH{q', 50
                            mem[_14777 + _12326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19541 = mem[_7955]
                            idx = 0
                            s = _14777 + 1
                            while idx < _19541:
                                if idx >= mem[_7955]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12326]:
                                    revert with 'NH{q', 50
                                mem[s + _12326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19541 = mem[_7955]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6232 > _3534:
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20297 = mem[_12326]
                            mem[mem[64] + 36] = mem[_12326]
                            mem[mem[64] + 68 len ceil32(_20297)] = mem[_12326 + 32 len ceil32(_20297)]
                            var154001 = ceil32(_20297)
                            if ceil32(_20297) > _20297:
                                mem[mem[64] + _20297 + 68] = 0
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20297) + 32]
                        mem[_12326 + 32 len _11772 + _11771 + 1] = call.data[calldata.size len _11772 + _11771 + 1]
                        _14778 = mem[_6571]
                        idx = 0
                        s = 0
                        while idx < _14778:
                            if idx >= mem[_6571]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12326]:
                                revert with 'NH{q', 50
                            mem[s + _12326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14778 = mem[_6571]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14778 == -1:
                            revert with 'NH{q', 17
                        if _14778 >= mem[_12326]:
                            revert with 'NH{q', 50
                        mem[_14778 + _12326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19542 = mem[_7955]
                        idx = 0
                        s = _14778 + 1
                        while idx < _19542:
                            if idx >= mem[_7955]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12326]:
                                revert with 'NH{q', 50
                            mem[s + _12326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19542 = mem[_7955]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        _20048 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20298 = mem[_12326]
                        mem[mem[64] + 36] = mem[_12326]
                        mem[mem[64] + 68 len ceil32(_20298)] = mem[_12326 + 32 len ceil32(_20298)]
                        var155001 = ceil32(_20298)
                        if ceil32(_20298) <= _20298:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20298) + 32]
                        mem[mem[64] + _20298 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20298) + _20048 + -mem[64] + 68
                    mem[_7955 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3534 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7955]:
                            revert with 'NH{q', 50
                        mem[t + _7955 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11773 = mem[_7955]
                    _11774 = mem[_6571]
                    if mem[_6571] > !mem[_7955]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6571] + mem[_7955]):
                        revert with 'NH{q', 17
                    if mem[_6571] + mem[_7955] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12328 = mem[64]
                    mem[mem[64]] = mem[_6571] + mem[_7955] + 1
                    mem[64] = mem[64] + floor32(_11774 + _11773 + 32) + 32
                    if not _11774 + _11773 + 1:
                        _14779 = mem[_6571]
                        idx = 0
                        s = 0
                        while idx < _14779:
                            if idx >= mem[_6571]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12328]:
                                revert with 'NH{q', 50
                            mem[s + _12328 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14779 = mem[_6571]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14779 == -1:
                            revert with 'NH{q', 17
                        if _14779 >= mem[_12328]:
                            revert with 'NH{q', 50
                        mem[_14779 + _12328 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19543 = mem[_7955]
                        idx = 0
                        s = _14779 + 1
                        while idx < _19543:
                            if idx >= mem[_7955]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12328]:
                                revert with 'NH{q', 50
                            mem[s + _12328 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19543 = mem[_7955]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        _20049 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20299 = mem[_12328]
                        mem[mem[64] + 36] = mem[_12328]
                        mem[mem[64] + 68 len ceil32(_20299)] = mem[_12328 + 32 len ceil32(_20299)]
                        var155001 = ceil32(_20299)
                        if ceil32(_20299) <= _20299:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20299) + 32]
                        mem[mem[64] + _20299 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20299) + _20049 + -mem[64] + 68
                    mem[_12328 + 32 len _11774 + _11773 + 1] = call.data[calldata.size len _11774 + _11773 + 1]
                    _14780 = mem[_6571]
                    idx = 0
                    s = 0
                    while idx < _14780:
                        if idx >= mem[_6571]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12328]:
                            revert with 'NH{q', 50
                        mem[s + _12328 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6571')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14780 = mem[_6571]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14780 == -1:
                        revert with 'NH{q', 17
                    if _14780 >= mem[_12328]:
                        revert with 'NH{q', 50
                    mem[_14780 + _12328 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19544 = mem[_7955]
                    idx = 0
                    s = _14780 + 1
                    while idx < _19544:
                        if idx >= mem[_7955]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12328]:
                            revert with 'NH{q', 50
                        mem[s + _12328 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7955')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19544 = mem[_7955]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6232 > _3534:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20300 = mem[_12328]
                    mem[mem[64] + 36] = mem[_12328]
                    mem[mem[64] + 68 len ceil32(_20300)] = mem[_12328 + 32 len ceil32(_20300)]
                    var156001 = ceil32(_20300)
                    if ceil32(_20300) > _20300:
                        mem[mem[64] + _20300 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20300) + 32]
                s = 0
                idx = _6232 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7954 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6232 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7954]:
                            revert with 'NH{q', 50
                        mem[t + _7954 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11769 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_11769] = 26
                    mem[_11769 + 32] = 'SafeMath: division by zero'
                    if not _3534 / 10^18:
                        _12497 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12497] = 1
                        mem[_12497 + 32] = '0'
                        _12706 = mem[_7954]
                        if mem[_7954] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7954] + 1):
                            revert with 'NH{q', 17
                        if mem[_7954] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _13344 = mem[64]
                        mem[mem[64]] = mem[_7954] + 2
                        mem[64] = mem[64] + floor32(_12706 + 33) + 32
                        if not _12706 + 2:
                            _14773 = mem[_7954]
                            idx = 0
                            s = 0
                            while idx < _14773:
                                if idx >= mem[_7954]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13344]:
                                    revert with 'NH{q', 50
                                mem[s + _13344 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14773 = mem[_7954]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14773 == -1:
                                revert with 'NH{q', 17
                            if _14773 >= mem[_13344]:
                                revert with 'NH{q', 50
                            mem[_14773 + _13344 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19537 = mem[_12497]
                            idx = 0
                            s = _14773 + 1
                            while idx < _19537:
                                if idx >= mem[_12497]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13344]:
                                    revert with 'NH{q', 50
                                mem[s + _13344 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12497')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12497')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19537 = mem[_12497]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6232 > _3534:
                            _20039 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20293 = mem[_13344]
                            mem[mem[64] + 36] = mem[_13344]
                            mem[mem[64] + 68 len ceil32(_20293)] = mem[_13344 + 32 len ceil32(_20293)]
                            var154001 = ceil32(_20293)
                            if ceil32(_20293) <= _20293:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20293) + 32]
                            mem[mem[64] + _20293 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20293) + _20039 + -mem[64] + 68
                        mem[_13344 + 32 len _12706 + 2] = call.data[calldata.size len _12706 + 2]
                        _14774 = mem[_7954]
                        idx = 0
                        s = 0
                        while idx < _14774:
                            if idx >= mem[_7954]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13344]:
                                revert with 'NH{q', 50
                            mem[s + _13344 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14774 = mem[_7954]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14774 == -1:
                            revert with 'NH{q', 17
                        if _14774 >= mem[_13344]:
                            revert with 'NH{q', 50
                        mem[_14774 + _13344 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19538 = mem[_12497]
                        idx = 0
                        s = _14774 + 1
                        while idx < _19538:
                            if idx >= mem[_12497]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13344]:
                                revert with 'NH{q', 50
                            mem[s + _13344 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12497')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12497')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19538 = mem[_12497]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20294 = mem[_13344]
                        mem[mem[64] + 36] = mem[_13344]
                        mem[mem[64] + 68 len ceil32(_20294)] = mem[_13344 + 32 len ceil32(_20294)]
                        var155001 = ceil32(_20294)
                        if ceil32(_20294) > _20294:
                            mem[mem[64] + _20294 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20294) + 32]
                    s = 0
                    idx = _3534 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _15165 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3534 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_15165]:
                                revert with 'NH{q', 50
                            mem[t + _15165 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _20035 = mem[_15165]
                        _20036 = mem[_7954]
                        if mem[_7954] > !mem[_15165]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7954] + mem[_15165]):
                            revert with 'NH{q', 17
                        if mem[_7954] + mem[_15165] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _21061 = mem[64]
                        mem[mem[64]] = mem[_7954] + mem[_15165] + 1
                        mem[64] = mem[64] + floor32(_20036 + _20035 + 32) + 32
                        if not _20036 + _20035 + 1:
                            _23259 = mem[_7954]
                            idx = 0
                            s = 0
                            while idx < _23259:
                                if idx >= mem[_7954]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21061]:
                                    revert with 'NH{q', 50
                                mem[s + _21061 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _23259 = mem[_7954]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _23259 == -1:
                                revert with 'NH{q', 17
                            if _23259 >= mem[_21061]:
                                revert with 'NH{q', 50
                            mem[_23259 + _21061 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _26523 = mem[_15165]
                            idx = 0
                            s = _23259 + 1
                            while idx < _26523:
                                if idx >= mem[_15165]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21061]:
                                    revert with 'NH{q', 50
                                mem[s + _21061 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _26523 = mem[_15165]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6232 > _3534:
                            _26963 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _27147 = mem[_21061]
                            mem[mem[64] + 36] = mem[_21061]
                            mem[mem[64] + 68 len ceil32(_27147)] = mem[_21061 + 32 len ceil32(_27147)]
                            var162001 = ceil32(_27147)
                            if ceil32(_27147) <= _27147:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27147) + 32]
                            mem[mem[64] + _27147 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_27147) + _26963 + -mem[64] + 68
                        mem[_21061 + 32 len _20036 + _20035 + 1] = call.data[calldata.size len _20036 + _20035 + 1]
                        _23260 = mem[_7954]
                        idx = 0
                        s = 0
                        while idx < _23260:
                            if idx >= mem[_7954]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21061]:
                                revert with 'NH{q', 50
                            mem[s + _21061 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23260 = mem[_7954]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23260 == -1:
                            revert with 'NH{q', 17
                        if _23260 >= mem[_21061]:
                            revert with 'NH{q', 50
                        mem[_23260 + _21061 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26524 = mem[_15165]
                        idx = 0
                        s = _23260 + 1
                        while idx < _26524:
                            if idx >= mem[_15165]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21061]:
                                revert with 'NH{q', 50
                            mem[s + _21061 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26524 = mem[_15165]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        _26964 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27148 = mem[_21061]
                        mem[mem[64] + 36] = mem[_21061]
                        mem[mem[64] + 68 len ceil32(_27148)] = mem[_21061 + 32 len ceil32(_27148)]
                        var163001 = ceil32(_27148)
                        if ceil32(_27148) <= _27148:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27148) + 32]
                        mem[mem[64] + _27148 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27148) + _26964 + -mem[64] + 68
                    mem[_15165 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3534 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15165]:
                            revert with 'NH{q', 50
                        mem[t + _15165 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20037 = mem[_15165]
                    _20038 = mem[_7954]
                    if mem[_7954] > !mem[_15165]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7954] + mem[_15165]):
                        revert with 'NH{q', 17
                    if mem[_7954] + mem[_15165] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21063 = mem[64]
                    mem[mem[64]] = mem[_7954] + mem[_15165] + 1
                    mem[64] = mem[64] + floor32(_20038 + _20037 + 32) + 32
                    if not _20038 + _20037 + 1:
                        _23261 = mem[_7954]
                        idx = 0
                        s = 0
                        while idx < _23261:
                            if idx >= mem[_7954]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21063]:
                                revert with 'NH{q', 50
                            mem[s + _21063 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23261 = mem[_7954]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23261 == -1:
                            revert with 'NH{q', 17
                        if _23261 >= mem[_21063]:
                            revert with 'NH{q', 50
                        mem[_23261 + _21063 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26525 = mem[_15165]
                        idx = 0
                        s = _23261 + 1
                        while idx < _26525:
                            if idx >= mem[_15165]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21063]:
                                revert with 'NH{q', 50
                            mem[s + _21063 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26525 = mem[_15165]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27149 = mem[_21063]
                        mem[mem[64] + 36] = mem[_21063]
                        mem[mem[64] + 68 len ceil32(_27149)] = mem[_21063 + 32 len ceil32(_27149)]
                        var163001 = ceil32(_27149)
                        if ceil32(_27149) > _27149:
                            mem[mem[64] + _27149 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27149) + 32]
                    mem[_21063 + 32 len _20038 + _20037 + 1] = call.data[calldata.size len _20038 + _20037 + 1]
                    _23262 = mem[_7954]
                    idx = 0
                    s = 0
                    while idx < _23262:
                        if idx >= mem[_7954]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21063]:
                            revert with 'NH{q', 50
                        mem[s + _21063 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23262 = mem[_7954]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23262 == -1:
                        revert with 'NH{q', 17
                    if _23262 >= mem[_21063]:
                        revert with 'NH{q', 50
                    mem[_23262 + _21063 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26526 = mem[_15165]
                    idx = 0
                    s = _23262 + 1
                    while idx < _26526:
                        if idx >= mem[_15165]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21063]:
                            revert with 'NH{q', 50
                        mem[s + _21063 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15165')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26526 = mem[_15165]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6232 > _3534:
                    _26966 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27150 = mem[_21063]
                    mem[mem[64] + 36] = mem[_21063]
                    mem[mem[64] + 68 len ceil32(_27150)] = mem[_21063 + 32 len ceil32(_27150)]
                    var164001 = ceil32(_27150)
                    if ceil32(_27150) <= _27150:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27150) + 32]
                    mem[mem[64] + _27150 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27150) + _26966 + -mem[64] + 68
                mem[_7954 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6232 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7954]:
                        revert with 'NH{q', 50
                    mem[t + _7954 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11770 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11770] = 26
                mem[_11770 + 32] = 'SafeMath: division by zero'
                if not _3534 / 10^18:
                    _12498 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12498] = 1
                    mem[_12498 + 32] = '0'
                    _12708 = mem[_7954]
                    if mem[_7954] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7954] + 1):
                        revert with 'NH{q', 17
                    if mem[_7954] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13345 = mem[64]
                    mem[mem[64]] = mem[_7954] + 2
                    mem[64] = mem[64] + floor32(_12708 + 33) + 32
                    if not _12708 + 2:
                        _14775 = mem[_7954]
                        idx = 0
                        s = 0
                        while idx < _14775:
                            if idx >= mem[_7954]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13345]:
                                revert with 'NH{q', 50
                            mem[s + _13345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14775 = mem[_7954]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14775 == -1:
                            revert with 'NH{q', 17
                        if _14775 >= mem[_13345]:
                            revert with 'NH{q', 50
                        mem[_14775 + _13345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19539 = mem[_12498]
                        idx = 0
                        s = _14775 + 1
                        while idx < _19539:
                            if idx >= mem[_12498]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13345]:
                                revert with 'NH{q', 50
                            mem[s + _13345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12498')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12498')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19539 = mem[_12498]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        _20045 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20295 = mem[_13345]
                        mem[mem[64] + 36] = mem[_13345]
                        mem[mem[64] + 68 len ceil32(_20295)] = mem[_13345 + 32 len ceil32(_20295)]
                        var155001 = ceil32(_20295)
                        if ceil32(_20295) <= _20295:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20295) + 32]
                        mem[mem[64] + _20295 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20295) + _20045 + -mem[64] + 68
                    mem[_13345 + 32 len _12708 + 2] = call.data[calldata.size len _12708 + 2]
                    _14776 = mem[_7954]
                    idx = 0
                    s = 0
                    while idx < _14776:
                        if idx >= mem[_7954]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13345]:
                            revert with 'NH{q', 50
                        mem[s + _13345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14776 = mem[_7954]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14776 == -1:
                        revert with 'NH{q', 17
                    if _14776 >= mem[_13345]:
                        revert with 'NH{q', 50
                    mem[_14776 + _13345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19540 = mem[_12498]
                    idx = 0
                    s = _14776 + 1
                    while idx < _19540:
                        if idx >= mem[_12498]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13345]:
                            revert with 'NH{q', 50
                        mem[s + _13345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12498')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12498')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19540 = mem[_12498]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6232 > _3534:
                    _20046 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20296 = mem[_13345]
                    mem[mem[64] + 36] = mem[_13345]
                    mem[mem[64] + 68 len ceil32(_20296)] = mem[_13345 + 32 len ceil32(_20296)]
                    var156001 = ceil32(_20296)
                    if ceil32(_20296) <= _20296:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20296) + 32]
                    mem[mem[64] + _20296 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20296) + _20046 + -mem[64] + 68
                s = 0
                idx = _3534 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15168 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3534 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15168]:
                            revert with 'NH{q', 50
                        mem[t + _15168 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20041 = mem[_15168]
                    _20042 = mem[_7954]
                    if mem[_7954] > !mem[_15168]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7954] + mem[_15168]):
                        revert with 'NH{q', 17
                    if mem[_7954] + mem[_15168] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21065 = mem[64]
                    mem[mem[64]] = mem[_7954] + mem[_15168] + 1
                    mem[64] = mem[64] + floor32(_20042 + _20041 + 32) + 32
                    if not _20042 + _20041 + 1:
                        _23263 = mem[_7954]
                        idx = 0
                        s = 0
                        while idx < _23263:
                            if idx >= mem[_7954]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21065]:
                                revert with 'NH{q', 50
                            mem[s + _21065 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23263 = mem[_7954]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23263 == -1:
                            revert with 'NH{q', 17
                        if _23263 >= mem[_21065]:
                            revert with 'NH{q', 50
                        mem[_23263 + _21065 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26527 = mem[_15168]
                        idx = 0
                        s = _23263 + 1
                        while idx < _26527:
                            if idx >= mem[_15168]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21065]:
                                revert with 'NH{q', 50
                            mem[s + _21065 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26527 = mem[_15168]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6232 > _3534:
                        _26967 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27151 = mem[_21065]
                        mem[mem[64] + 36] = mem[_21065]
                        mem[mem[64] + 68 len ceil32(_27151)] = mem[_21065 + 32 len ceil32(_27151)]
                        var163001 = ceil32(_27151)
                        if ceil32(_27151) <= _27151:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27151) + 32]
                        mem[mem[64] + _27151 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27151) + _26967 + -mem[64] + 68
                    mem[_21065 + 32 len _20042 + _20041 + 1] = call.data[calldata.size len _20042 + _20041 + 1]
                    _23264 = mem[_7954]
                    idx = 0
                    s = 0
                    while idx < _23264:
                        if idx >= mem[_7954]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21065]:
                            revert with 'NH{q', 50
                        mem[s + _21065 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23264 = mem[_7954]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23264 == -1:
                        revert with 'NH{q', 17
                    if _23264 >= mem[_21065]:
                        revert with 'NH{q', 50
                    mem[_23264 + _21065 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26528 = mem[_15168]
                    idx = 0
                    s = _23264 + 1
                    while idx < _26528:
                        if idx >= mem[_15168]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21065]:
                            revert with 'NH{q', 50
                        mem[s + _21065 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26528 = mem[_15168]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6232 > _3534:
                    _26968 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27152 = mem[_21065]
                    mem[mem[64] + 36] = mem[_21065]
                    mem[mem[64] + 68 len ceil32(_27152)] = mem[_21065 + 32 len ceil32(_27152)]
                    var164001 = ceil32(_27152)
                    if ceil32(_27152) <= _27152:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27152) + 32]
                    mem[mem[64] + _27152 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27152) + _26968 + -mem[64] + 68
                mem[_15168 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3534 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15168]:
                        revert with 'NH{q', 50
                    mem[t + _15168 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20043 = mem[_15168]
                _20044 = mem[_7954]
                if mem[_7954] > !mem[_15168]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7954] + mem[_15168]):
                    revert with 'NH{q', 17
                if mem[_7954] + mem[_15168] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21067 = mem[64]
                mem[mem[64]] = mem[_7954] + mem[_15168] + 1
                mem[64] = mem[64] + floor32(_20044 + _20043 + 32) + 32
                if not _20044 + _20043 + 1:
                    _23265 = mem[_7954]
                    idx = 0
                    s = 0
                    while idx < _23265:
                        if idx >= mem[_7954]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21067]:
                            revert with 'NH{q', 50
                        mem[s + _21067 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23265 = mem[_7954]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23265 == -1:
                        revert with 'NH{q', 17
                    if _23265 >= mem[_21067]:
                        revert with 'NH{q', 50
                    mem[_23265 + _21067 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26529 = mem[_15168]
                    idx = 0
                    s = _23265 + 1
                    while idx < _26529:
                        if idx >= mem[_15168]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21067]:
                            revert with 'NH{q', 50
                        mem[s + _21067 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26529 = mem[_15168]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6232 > _3534:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27153 = mem[_21067]
                    mem[mem[64] + 36] = mem[_21067]
                    mem[mem[64] + 68 len ceil32(_27153)] = mem[_21067 + 32 len ceil32(_27153)]
                    var164001 = ceil32(_27153)
                    if ceil32(_27153) > _27153:
                        mem[mem[64] + _27153 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27153) + 32]
                mem[_21067 + 32 len _20044 + _20043 + 1] = call.data[calldata.size len _20044 + _20043 + 1]
                _23266 = mem[_7954]
                idx = 0
                s = 0
                while idx < _23266:
                    if idx >= mem[_7954]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21067]:
                        revert with 'NH{q', 50
                    mem[s + _21067 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7954')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23266 = mem[_7954]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23266 == -1:
                    revert with 'NH{q', 17
                if _23266 >= mem[_21067]:
                    revert with 'NH{q', 50
                mem[_23266 + _21067 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26530 = mem[_15168]
                idx = 0
                s = _23266 + 1
                while idx < _26530:
                    if idx >= mem[_15168]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21067]:
                        revert with 'NH{q', 50
                    mem[s + _21067 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15168')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26530 = mem[_15168]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6232 > _3534:
                _26970 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27154 = mem[_21067]
                mem[mem[64] + 36] = mem[_21067]
                mem[mem[64] + 68 len ceil32(_27154)] = mem[_21067 + 32 len ceil32(_27154)]
                var165001 = ceil32(_27154)
                if ceil32(_27154) <= _27154:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27154) + 32]
                mem[mem[64] + _27154 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27154) + _26970 + -mem[64] + 68
            mem[0] = 11
            mem[_3452 + 32] = address(stor11.field_0)
            idx = _3452 + 32
            s = 0
            while _3452 + (32 * stor11.length) > idx:
                mem[idx + 32] = stor11[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6090 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6168 = mem[_6090]
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            _6213 = mem[_3452 + 32]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            mem[_3452 + 32] = mem[_3452 + 76 len 20]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            mem[_3452 + 64] = address(_6213)
            _6294 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _6332 = mem[_2768]
            mem[mem[64] + 164] = mem[_2768]
            idx = 0
            s = mem[64] + 196
            t = _2768 + 32
            while idx < _6332:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_6294 + 100] = this.address
            mem[_6294 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _6294 + (32 * _6332) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8240 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8470 = mem[_8240]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _8470
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _8666 = mem[_3452]
            mem[mem[64] + 164] = mem[_3452]
            idx = 0
            s = mem[64] + 196
            t = _3452 + 32
            while idx < _8666:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args _8470, 0, 160, address(this.address), test266151307(), mem[mem[64] + 164 len (32 * _8666) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12086 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _12164 = mem[_12086]
            _12330 = mem[64]
            mem[64] = mem[64] + 64
            mem[_12330] = 26
            mem[_12330 + 32] = 'SafeMath: division by zero'
            if not _12164 / 10^18:
                _13144 = mem[64]
                mem[64] = mem[64] + 64
                mem[_13144] = 1
                mem[_13144 + 32] = '0'
                _13350 = mem[64]
                mem[64] = mem[64] + 64
                mem[_13350] = 26
                mem[_13350 + 32] = 'SafeMath: division by zero'
                if not _6168 / 10^18:
                    _14196 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_14196] = 1
                    mem[_14196 + 32] = '0'
                    _14558 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_14558 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_13144]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_14558]:
                            revert with 'NH{q', 50
                        mem[s + _14558 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_14558]:
                        revert with 'NH{q', 50
                    mem[_14558 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19546 = mem[_14196]
                    idx = 0
                    s = 2
                    while idx < _19546:
                        if idx >= mem[_14196]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_14558]:
                            revert with 'NH{q', 50
                        mem[s + _14558 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14196')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14196')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19546 = mem[_14196]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    _20058 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20302 = mem[_14558]
                    mem[mem[64] + 36] = mem[_14558]
                    mem[mem[64] + 68 len ceil32(_20302)] = mem[_14558 + 32 len ceil32(_20302)]
                    var151001 = ceil32(_20302)
                    if ceil32(_20302) <= _20302:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20302) + 32]
                    mem[mem[64] + _20302 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20302) + _20058 + -mem[64] + 68
                s = 0
                idx = _6168 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15176 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6168 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15176]:
                            revert with 'NH{q', 50
                        mem[t + _15176 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20053 = mem[_15176]
                    _20054 = mem[_13144]
                    if mem[_13144] > !mem[_15176]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_13144] + mem[_15176]):
                        revert with 'NH{q', 17
                    if mem[_13144] + mem[_15176] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21071 = mem[64]
                    mem[mem[64]] = mem[_13144] + mem[_15176] + 1
                    mem[64] = mem[64] + floor32(_20054 + _20053 + 32) + 32
                    if not _20054 + _20053 + 1:
                        _23271 = mem[_13144]
                        idx = 0
                        s = 0
                        while idx < _23271:
                            if idx >= mem[_13144]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21071]:
                                revert with 'NH{q', 50
                            mem[s + _21071 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23271 = mem[_13144]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23271 == -1:
                            revert with 'NH{q', 17
                        if _23271 >= mem[_21071]:
                            revert with 'NH{q', 50
                        mem[_23271 + _21071 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26535 = mem[_15176]
                        idx = 0
                        s = _23271 + 1
                        while idx < _26535:
                            if idx >= mem[_15176]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21071]:
                                revert with 'NH{q', 50
                            mem[s + _21071 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26535 = mem[_15176]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _12164 > _6168:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27159 = mem[_21071]
                        mem[mem[64] + 36] = mem[_21071]
                        mem[mem[64] + 68 len ceil32(_27159)] = mem[_21071 + 32 len ceil32(_27159)]
                        var158001 = ceil32(_27159)
                        if ceil32(_27159) > _27159:
                            mem[mem[64] + _27159 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27159) + 32]
                    mem[_21071 + 32 len _20054 + _20053 + 1] = call.data[calldata.size len _20054 + _20053 + 1]
                    _23272 = mem[_13144]
                    idx = 0
                    s = 0
                    while idx < _23272:
                        if idx >= mem[_13144]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21071]:
                            revert with 'NH{q', 50
                        mem[s + _21071 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23272 = mem[_13144]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23272 == -1:
                        revert with 'NH{q', 17
                    if _23272 >= mem[_21071]:
                        revert with 'NH{q', 50
                    mem[_23272 + _21071 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26536 = mem[_15176]
                    idx = 0
                    s = _23272 + 1
                    while idx < _26536:
                        if idx >= mem[_15176]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21071]:
                            revert with 'NH{q', 50
                        mem[s + _21071 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26536 = mem[_15176]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    _26984 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27160 = mem[_21071]
                    mem[mem[64] + 36] = mem[_21071]
                    mem[mem[64] + 68 len ceil32(_27160)] = mem[_21071 + 32 len ceil32(_27160)]
                    var159001 = ceil32(_27160)
                    if ceil32(_27160) <= _27160:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27160) + 32]
                    mem[mem[64] + _27160 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27160) + _26984 + -mem[64] + 68
                mem[_15176 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6168 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15176]:
                        revert with 'NH{q', 50
                    mem[t + _15176 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20055 = mem[_15176]
                _20056 = mem[_13144]
                if mem[_13144] > !mem[_15176]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_13144] + mem[_15176]):
                    revert with 'NH{q', 17
                if mem[_13144] + mem[_15176] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21073 = mem[64]
                mem[mem[64]] = mem[_13144] + mem[_15176] + 1
                mem[64] = mem[64] + floor32(_20056 + _20055 + 32) + 32
                if not _20056 + _20055 + 1:
                    _23273 = mem[_13144]
                    idx = 0
                    s = 0
                    while idx < _23273:
                        if idx >= mem[_13144]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21073]:
                            revert with 'NH{q', 50
                        mem[s + _21073 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23273 = mem[_13144]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23273 == -1:
                        revert with 'NH{q', 17
                    if _23273 >= mem[_21073]:
                        revert with 'NH{q', 50
                    mem[_23273 + _21073 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26537 = mem[_15176]
                    idx = 0
                    s = _23273 + 1
                    while idx < _26537:
                        if idx >= mem[_15176]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21073]:
                            revert with 'NH{q', 50
                        mem[s + _21073 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26537 = mem[_15176]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    _26985 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27161 = mem[_21073]
                    mem[mem[64] + 36] = mem[_21073]
                    mem[mem[64] + 68 len ceil32(_27161)] = mem[_21073 + 32 len ceil32(_27161)]
                    var159001 = ceil32(_27161)
                    if ceil32(_27161) <= _27161:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27161) + 32]
                    mem[mem[64] + _27161 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27161) + _26985 + -mem[64] + 68
                mem[_21073 + 32 len _20056 + _20055 + 1] = call.data[calldata.size len _20056 + _20055 + 1]
                _23274 = mem[_13144]
                idx = 0
                s = 0
                while idx < _23274:
                    if idx >= mem[_13144]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21073]:
                        revert with 'NH{q', 50
                    mem[s + _21073 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13144')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23274 = mem[_13144]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23274 == -1:
                    revert with 'NH{q', 17
                if _23274 >= mem[_21073]:
                    revert with 'NH{q', 50
                mem[_23274 + _21073 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26538 = mem[_15176]
                idx = 0
                s = _23274 + 1
                while idx < _26538:
                    if idx >= mem[_15176]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21073]:
                        revert with 'NH{q', 50
                    mem[s + _21073 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15176')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26538 = mem[_15176]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12164 > _6168:
                _26986 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27162 = mem[_21073]
                mem[mem[64] + 36] = mem[_21073]
                mem[mem[64] + 68 len ceil32(_27162)] = mem[_21073 + 32 len ceil32(_27162)]
                var160001 = ceil32(_27162)
                if ceil32(_27162) <= _27162:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27162) + 32]
                mem[mem[64] + _27162 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27162) + _26986 + -mem[64] + 68
            s = 0
            idx = _12164 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15175 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _12164 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15175]:
                        revert with 'NH{q', 50
                    mem[t + _15175 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20051 = mem[64]
                mem[64] = mem[64] + 64
                mem[_20051] = 26
                mem[_20051 + 32] = 'SafeMath: division by zero'
                if not _6168 / 10^18:
                    _21261 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_21261] = 1
                    mem[_21261 + 32] = '0'
                    _21498 = mem[_15175]
                    if mem[_15175] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_15175] + 1):
                        revert with 'NH{q', 17
                    if mem[_15175] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _22257 = mem[64]
                    mem[mem[64]] = mem[_15175] + 2
                    mem[64] = mem[64] + floor32(_21498 + 33) + 32
                    if not _21498 + 2:
                        _23267 = mem[_15175]
                        idx = 0
                        s = 0
                        while idx < _23267:
                            if idx >= mem[_15175]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_22257]:
                                revert with 'NH{q', 50
                            mem[s + _22257 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23267 = mem[_15175]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23267 == -1:
                            revert with 'NH{q', 17
                        if _23267 >= mem[_22257]:
                            revert with 'NH{q', 50
                        mem[_23267 + _22257 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26531 = mem[_21261]
                        idx = 0
                        s = _23267 + 1
                        while idx < _26531:
                            if idx >= mem[_21261]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_22257]:
                                revert with 'NH{q', 50
                            mem[s + _22257 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21261')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21261')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26531 = mem[_21261]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _12164 > _6168:
                        _26975 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27155 = mem[_22257]
                        mem[mem[64] + 36] = mem[_22257]
                        mem[mem[64] + 68 len ceil32(_27155)] = mem[_22257 + 32 len ceil32(_27155)]
                        var158001 = ceil32(_27155)
                        if ceil32(_27155) <= _27155:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27155) + 32]
                        mem[mem[64] + _27155 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27155) + _26975 + -mem[64] + 68
                    mem[_22257 + 32 len _21498 + 2] = call.data[calldata.size len _21498 + 2]
                    _23268 = mem[_15175]
                    idx = 0
                    s = 0
                    while idx < _23268:
                        if idx >= mem[_15175]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22257]:
                            revert with 'NH{q', 50
                        mem[s + _22257 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23268 = mem[_15175]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23268 == -1:
                        revert with 'NH{q', 17
                    if _23268 >= mem[_22257]:
                        revert with 'NH{q', 50
                    mem[_23268 + _22257 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26532 = mem[_21261]
                    idx = 0
                    s = _23268 + 1
                    while idx < _26532:
                        if idx >= mem[_21261]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22257]:
                            revert with 'NH{q', 50
                        mem[s + _22257 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21261')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21261')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26532 = mem[_21261]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27156 = mem[_22257]
                    mem[mem[64] + 36] = mem[_22257]
                    mem[mem[64] + 68 len ceil32(_27156)] = mem[_22257 + 32 len ceil32(_27156)]
                    var159001 = ceil32(_27156)
                    if ceil32(_27156) > _27156:
                        mem[mem[64] + _27156 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27156) + 32]
                s = 0
                idx = _6168 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _23713 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6168 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_23713]:
                            revert with 'NH{q', 50
                        mem[t + _23713 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _26971 = mem[_23713]
                    _26972 = mem[_15175]
                    if mem[_15175] > !mem[_23713]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_15175] + mem[_23713]):
                        revert with 'NH{q', 17
                    if mem[_15175] + mem[_23713] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _27843 = mem[64]
                    mem[mem[64]] = mem[_15175] + mem[_23713] + 1
                    mem[64] = mem[64] + floor32(_26972 + _26971 + 32) + 32
                    if not _26972 + _26971 + 1:
                        _28563 = mem[_15175]
                        idx = 0
                        s = 0
                        while idx < _28563:
                            if idx >= mem[_15175]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_27843]:
                                revert with 'NH{q', 50
                            mem[s + _27843 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _28563 = mem[_15175]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _28563 == -1:
                            revert with 'NH{q', 17
                        if _28563 >= mem[_27843]:
                            revert with 'NH{q', 50
                        mem[_28563 + _27843 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _29667 = mem[_23713]
                        idx = 0
                        s = _28563 + 1
                        while idx < _29667:
                            if idx >= mem[_23713]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_27843]:
                                revert with 'NH{q', 50
                            mem[s + _27843 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _29667 = mem[_23713]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _12164 > _6168:
                        _29811 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _29859 = mem[_27843]
                        mem[mem[64] + 36] = mem[_27843]
                        mem[mem[64] + 68 len ceil32(_29859)] = mem[_27843 + 32 len ceil32(_29859)]
                        var166001 = ceil32(_29859)
                        if ceil32(_29859) <= _29859:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29859) + 32]
                        mem[mem[64] + _29859 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_29859) + _29811 + -mem[64] + 68
                    mem[_27843 + 32 len _26972 + _26971 + 1] = call.data[calldata.size len _26972 + _26971 + 1]
                    _28564 = mem[_15175]
                    idx = 0
                    s = 0
                    while idx < _28564:
                        if idx >= mem[_15175]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27843]:
                            revert with 'NH{q', 50
                        mem[s + _27843 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28564 = mem[_15175]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28564 == -1:
                        revert with 'NH{q', 17
                    if _28564 >= mem[_27843]:
                        revert with 'NH{q', 50
                    mem[_28564 + _27843 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29668 = mem[_23713]
                    idx = 0
                    s = _28564 + 1
                    while idx < _29668:
                        if idx >= mem[_23713]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27843]:
                            revert with 'NH{q', 50
                        mem[s + _27843 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29668 = mem[_23713]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    _29812 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29860 = mem[_27843]
                    mem[mem[64] + 36] = mem[_27843]
                    mem[mem[64] + 68 len ceil32(_29860)] = mem[_27843 + 32 len ceil32(_29860)]
                    var167001 = ceil32(_29860)
                    if ceil32(_29860) <= _29860:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29860) + 32]
                    mem[mem[64] + _29860 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29860) + _29812 + -mem[64] + 68
                mem[_23713 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6168 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23713]:
                        revert with 'NH{q', 50
                    mem[t + _23713 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _26973 = mem[_23713]
                _26974 = mem[_15175]
                if mem[_15175] > !mem[_23713]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15175] + mem[_23713]):
                    revert with 'NH{q', 17
                if mem[_15175] + mem[_23713] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27845 = mem[64]
                mem[mem[64]] = mem[_15175] + mem[_23713] + 1
                mem[64] = mem[64] + floor32(_26974 + _26973 + 32) + 32
                if not _26974 + _26973 + 1:
                    _28565 = mem[_15175]
                    idx = 0
                    s = 0
                    while idx < _28565:
                        if idx >= mem[_15175]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27845]:
                            revert with 'NH{q', 50
                        mem[s + _27845 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28565 = mem[_15175]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28565 == -1:
                        revert with 'NH{q', 17
                    if _28565 >= mem[_27845]:
                        revert with 'NH{q', 50
                    mem[_28565 + _27845 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29669 = mem[_23713]
                    idx = 0
                    s = _28565 + 1
                    while idx < _29669:
                        if idx >= mem[_23713]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27845]:
                            revert with 'NH{q', 50
                        mem[s + _27845 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29669 = mem[_23713]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    _29813 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29861 = mem[_27845]
                    mem[mem[64] + 36] = mem[_27845]
                    mem[mem[64] + 68 len ceil32(_29861)] = mem[_27845 + 32 len ceil32(_29861)]
                    var167001 = ceil32(_29861)
                    if ceil32(_29861) <= _29861:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29861) + 32]
                    mem[mem[64] + _29861 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29861) + _29813 + -mem[64] + 68
                mem[_27845 + 32 len _26974 + _26973 + 1] = call.data[calldata.size len _26974 + _26973 + 1]
                _28566 = mem[_15175]
                idx = 0
                s = 0
                while idx < _28566:
                    if idx >= mem[_15175]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27845]:
                        revert with 'NH{q', 50
                    mem[s + _27845 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28566 = mem[_15175]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28566 == -1:
                    revert with 'NH{q', 17
                if _28566 >= mem[_27845]:
                    revert with 'NH{q', 50
                mem[_28566 + _27845 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29670 = mem[_23713]
                idx = 0
                s = _28566 + 1
                while idx < _29670:
                    if idx >= mem[_23713]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27845]:
                        revert with 'NH{q', 50
                    mem[s + _27845 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23713')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29670 = mem[_23713]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12164 > _6168:
                _29814 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29862 = mem[_27845]
                mem[mem[64] + 36] = mem[_27845]
                mem[mem[64] + 68 len ceil32(_29862)] = mem[_27845 + 32 len ceil32(_29862)]
                var168001 = ceil32(_29862)
                if ceil32(_29862) <= _29862:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29862) + 32]
                mem[mem[64] + _29862 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29862) + _29814 + -mem[64] + 68
            mem[_15175 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _12164 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15175]:
                    revert with 'NH{q', 50
                mem[t + _15175 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20052 = mem[64]
            mem[64] = mem[64] + 64
            mem[_20052] = 26
            mem[_20052 + 32] = 'SafeMath: division by zero'
            if not _6168 / 10^18:
                _21262 = mem[64]
                mem[64] = mem[64] + 64
                mem[_21262] = 1
                mem[_21262 + 32] = '0'
                _21500 = mem[_15175]
                if mem[_15175] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15175] + 1):
                    revert with 'NH{q', 17
                if mem[_15175] + 2 > test266151307():
                    revert with 'NH{q', 65
                _22258 = mem[64]
                mem[mem[64]] = mem[_15175] + 2
                mem[64] = mem[64] + floor32(_21500 + 33) + 32
                if not _21500 + 2:
                    _23269 = mem[_15175]
                    idx = 0
                    s = 0
                    while idx < _23269:
                        if idx >= mem[_15175]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22258]:
                            revert with 'NH{q', 50
                        mem[s + _22258 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23269 = mem[_15175]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23269 == -1:
                        revert with 'NH{q', 17
                    if _23269 >= mem[_22258]:
                        revert with 'NH{q', 50
                    mem[_23269 + _22258 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26533 = mem[_21262]
                    idx = 0
                    s = _23269 + 1
                    while idx < _26533:
                        if idx >= mem[_21262]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22258]:
                            revert with 'NH{q', 50
                        mem[s + _22258 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21262')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21262')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26533 = mem[_21262]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    _26981 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27157 = mem[_22258]
                    mem[mem[64] + 36] = mem[_22258]
                    mem[mem[64] + 68 len ceil32(_27157)] = mem[_22258 + 32 len ceil32(_27157)]
                    var159001 = ceil32(_27157)
                    if ceil32(_27157) <= _27157:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27157) + 32]
                    mem[mem[64] + _27157 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27157) + _26981 + -mem[64] + 68
                mem[_22258 + 32 len _21500 + 2] = call.data[calldata.size len _21500 + 2]
                _23270 = mem[_15175]
                idx = 0
                s = 0
                while idx < _23270:
                    if idx >= mem[_15175]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22258]:
                        revert with 'NH{q', 50
                    mem[s + _22258 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23270 = mem[_15175]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23270 == -1:
                    revert with 'NH{q', 17
                if _23270 >= mem[_22258]:
                    revert with 'NH{q', 50
                mem[_23270 + _22258 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26534 = mem[_21262]
                idx = 0
                s = _23270 + 1
                while idx < _26534:
                    if idx >= mem[_21262]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22258]:
                        revert with 'NH{q', 50
                    mem[s + _22258 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21262')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21262')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26534 = mem[_21262]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12164 > _6168:
                _26982 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27158 = mem[_22258]
                mem[mem[64] + 36] = mem[_22258]
                mem[mem[64] + 68 len ceil32(_27158)] = mem[_22258 + 32 len ceil32(_27158)]
                var160001 = ceil32(_27158)
                if ceil32(_27158) <= _27158:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27158) + 32]
                mem[mem[64] + _27158 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27158) + _26982 + -mem[64] + 68
            s = 0
            idx = _6168 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _23716 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6168 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23716]:
                        revert with 'NH{q', 50
                    mem[t + _23716 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _26977 = mem[_23716]
                _26978 = mem[_15175]
                if mem[_15175] > !mem[_23716]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15175] + mem[_23716]):
                    revert with 'NH{q', 17
                if mem[_15175] + mem[_23716] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27847 = mem[64]
                mem[mem[64]] = mem[_15175] + mem[_23716] + 1
                mem[64] = mem[64] + floor32(_26978 + _26977 + 32) + 32
                if not _26978 + _26977 + 1:
                    _28567 = mem[_15175]
                    idx = 0
                    s = 0
                    while idx < _28567:
                        if idx >= mem[_15175]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27847]:
                            revert with 'NH{q', 50
                        mem[s + _27847 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28567 = mem[_15175]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28567 == -1:
                        revert with 'NH{q', 17
                    if _28567 >= mem[_27847]:
                        revert with 'NH{q', 50
                    mem[_28567 + _27847 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29671 = mem[_23716]
                    idx = 0
                    s = _28567 + 1
                    while idx < _29671:
                        if idx >= mem[_23716]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27847]:
                            revert with 'NH{q', 50
                        mem[s + _27847 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29671 = mem[_23716]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12164 > _6168:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29863 = mem[_27847]
                    mem[mem[64] + 36] = mem[_27847]
                    mem[mem[64] + 68 len ceil32(_29863)] = mem[_27847 + 32 len ceil32(_29863)]
                    var167001 = ceil32(_29863)
                    if ceil32(_29863) > _29863:
                        mem[mem[64] + _29863 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29863) + 32]
                mem[_27847 + 32 len _26978 + _26977 + 1] = call.data[calldata.size len _26978 + _26977 + 1]
                _28568 = mem[_15175]
                idx = 0
                s = 0
                while idx < _28568:
                    if idx >= mem[_15175]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27847]:
                        revert with 'NH{q', 50
                    mem[s + _27847 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28568 = mem[_15175]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28568 == -1:
                    revert with 'NH{q', 17
                if _28568 >= mem[_27847]:
                    revert with 'NH{q', 50
                mem[_28568 + _27847 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29672 = mem[_23716]
                idx = 0
                s = _28568 + 1
                while idx < _29672:
                    if idx >= mem[_23716]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27847]:
                        revert with 'NH{q', 50
                    mem[s + _27847 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29672 = mem[_23716]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12164 > _6168:
                _29816 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29864 = mem[_27847]
                mem[mem[64] + 36] = mem[_27847]
                mem[mem[64] + 68 len ceil32(_29864)] = mem[_27847 + 32 len ceil32(_29864)]
                var168001 = ceil32(_29864)
                if ceil32(_29864) <= _29864:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29864) + 32]
                mem[mem[64] + _29864 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29864) + _29816 + -mem[64] + 68
            mem[_23716 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6168 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23716]:
                    revert with 'NH{q', 50
                mem[t + _23716 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _26979 = mem[_23716]
            _26980 = mem[_15175]
            if mem[_15175] > !mem[_23716]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15175] + mem[_23716]):
                revert with 'NH{q', 17
            if mem[_15175] + mem[_23716] + 1 > test266151307():
                revert with 'NH{q', 65
            _27849 = mem[64]
            mem[mem[64]] = mem[_15175] + mem[_23716] + 1
            mem[64] = mem[64] + floor32(_26980 + _26979 + 32) + 32
            if not _26980 + _26979 + 1:
                _28569 = mem[_15175]
                idx = 0
                s = 0
                while idx < _28569:
                    if idx >= mem[_15175]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27849]:
                        revert with 'NH{q', 50
                    mem[s + _27849 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28569 = mem[_15175]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28569 == -1:
                    revert with 'NH{q', 17
                if _28569 >= mem[_27849]:
                    revert with 'NH{q', 50
                mem[_28569 + _27849 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29673 = mem[_23716]
                idx = 0
                s = _28569 + 1
                while idx < _29673:
                    if idx >= mem[_23716]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27849]:
                        revert with 'NH{q', 50
                    mem[s + _27849 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29673 = mem[_23716]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12164 > _6168:
                _29817 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29865 = mem[_27849]
                mem[mem[64] + 36] = mem[_27849]
                mem[mem[64] + 68 len ceil32(_29865)] = mem[_27849 + 32 len ceil32(_29865)]
                var168001 = ceil32(_29865)
                if ceil32(_29865) <= _29865:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29865) + 32]
                mem[mem[64] + _29865 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29865) + _29817 + -mem[64] + 68
            mem[_27849 + 32 len _26980 + _26979 + 1] = call.data[calldata.size len _26980 + _26979 + 1]
            _28570 = mem[_15175]
            idx = 0
            s = 0
            while idx < _28570:
                if idx >= mem[_15175]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27849]:
                    revert with 'NH{q', 50
                mem[s + _27849 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15175')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28570 = mem[_15175]
                idx = idx + 1
                s = s + 1
                continue 
            if _28570 == -1:
                revert with 'NH{q', 17
            if _28570 >= mem[_27849]:
                revert with 'NH{q', 50
            mem[_28570 + _27849 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29674 = mem[_23716]
            idx = 0
            s = _28570 + 1
            while idx < _29674:
                if idx >= mem[_23716]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27849]:
                    revert with 'NH{q', 50
                mem[s + _27849 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23716')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29674 = mem[_23716]
                idx = idx + 1
                s = s + 1
                continue 
            if _12164 > _6168:
            _29818 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29866 = mem[_27849]
            mem[mem[64] + 36] = mem[_27849]
            mem[mem[64] + 68 len ceil32(_29866)] = mem[_27849 + 32 len ceil32(_29866)]
            var169001 = ceil32(_29866)
            if ceil32(_29866) <= _29866:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29866) + 32]
            mem[mem[64] + _29866 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29866) + _29818 + -mem[64] + 68
        _2767 = mem[64]
        mem[64] = mem[64] + (32 * stor11.length) + 32
        mem[_2767] = stor11.length
        if not stor11.length:
            _2773 = mem[64]
            mem[64] = mem[64] + (32 * stor10.length) + 32
            mem[_2773] = stor10.length
            if not stor10.length:
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2803 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2809 = mem[_2803]
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                _2821 = mem[_2773 + 32]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_2773 + 32] = mem[_2773 + 76 len 20]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_2773 + 64] = address(_2821)
                _2851 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = stor11.length
                idx = 0
                s = mem[64] + 196
                t = _2767 + 32
                while idx < stor11.length:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_2851 + 100] = this.address
                mem[_2851 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _2851 + (32 * stor11.length) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3181 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3187 = mem[_3181]
                _3193 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3187
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _3199 = mem[_2773]
                mem[mem[64] + 164] = mem[_2773]
                idx = 0
                s = mem[64] + 196
                t = _2773 + 32
                while idx < _3199:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_3193 + 100] = this.address
                mem[_3193 + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3193 + (32 * _3199) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3529 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3565 = mem[_3529]
                _3613 = mem[64]
                mem[64] = mem[64] + 64
                mem[_3613] = 26
                mem[_3613 + 32] = 'SafeMath: division by zero'
                if not _3565 / 10^18:
                    _3709 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3709] = 1
                    mem[_3709 + 32] = '0'
                    _3733 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3733] = 26
                    mem[_3733 + 32] = 'SafeMath: division by zero'
                    if not _2809 / 10^18:
                        _3823 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3823] = 1
                        mem[_3823 + 32] = '0'
                        _3859 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_3859 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_3709]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_3859]:
                                revert with 'NH{q', 50
                            mem[s + _3859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_3859]:
                            revert with 'NH{q', 50
                        mem[_3859 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _6002 = mem[_3823]
                        idx = 0
                        s = 2
                        while idx < _6002:
                            if idx >= mem[_3823]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_3859]:
                                revert with 'NH{q', 50
                            mem[s + _3859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3823')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3823')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _6002 = mem[_3823]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _6080 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _6128 = mem[_3859]
                        mem[mem[64] + 36] = mem[_3859]
                        mem[mem[64] + 68 len ceil32(_6128)] = mem[_3859 + 32 len ceil32(_6128)]
                        if ceil32(_6128) <= _6128:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_6128) + 32]
                        mem[mem[64] + _6128 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_6128) + _6080 + -mem[64] + 68
                    s = 0
                    idx = _2809 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _4478 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2809 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4478]:
                                revert with 'NH{q', 50
                            mem[t + _4478 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6075 = mem[_4478]
                        _6076 = mem[_3709]
                        if mem[_3709] > !mem[_4478]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_3709] + mem[_4478]):
                            revert with 'NH{q', 17
                        if mem[_3709] + mem[_4478] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _6279 = mem[64]
                        mem[mem[64]] = mem[_3709] + mem[_4478] + 1
                        mem[64] = mem[64] + floor32(_6076 + _6075 + 32) + 32
                        if not _6076 + _6075 + 1:
                            _7763 = mem[_3709]
                            idx = 0
                            s = 0
                            while idx < _7763:
                                if idx >= mem[_3709]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6279]:
                                    revert with 'NH{q', 50
                                mem[s + _6279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7763 = mem[_3709]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7763 == -1:
                                revert with 'NH{q', 17
                            if _7763 >= mem[_6279]:
                                revert with 'NH{q', 50
                            mem[_7763 + _6279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11489 = mem[_4478]
                            idx = 0
                            s = _7763 + 1
                            while idx < _11489:
                                if idx >= mem[_4478]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6279]:
                                    revert with 'NH{q', 50
                                mem[s + _6279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11489 = mem[_4478]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3565 > _2809:
                            _11725 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11909 = mem[_6279]
                            mem[mem[64] + 36] = mem[_6279]
                            mem[mem[64] + 68 len ceil32(_11909)] = mem[_6279 + 32 len ceil32(_11909)]
                            var150001 = ceil32(_11909)
                            if ceil32(_11909) <= _11909:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11909) + 32]
                            mem[mem[64] + _11909 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11909) + _11725 + -mem[64] + 68
                        mem[_6279 + 32 len _6076 + _6075 + 1] = call.data[calldata.size len _6076 + _6075 + 1]
                        _7764 = mem[_3709]
                        idx = 0
                        s = 0
                        while idx < _7764:
                            if idx >= mem[_3709]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6279]:
                                revert with 'NH{q', 50
                            mem[s + _6279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7764 = mem[_3709]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7764 == -1:
                            revert with 'NH{q', 17
                        if _7764 >= mem[_6279]:
                            revert with 'NH{q', 50
                        mem[_7764 + _6279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11490 = mem[_4478]
                        idx = 0
                        s = _7764 + 1
                        while idx < _11490:
                            if idx >= mem[_4478]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6279]:
                                revert with 'NH{q', 50
                            mem[s + _6279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11490 = mem[_4478]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _11726 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11910 = mem[_6279]
                        mem[mem[64] + 36] = mem[_6279]
                        mem[mem[64] + 68 len ceil32(_11910)] = mem[_6279 + 32 len ceil32(_11910)]
                        var151001 = ceil32(_11910)
                        if ceil32(_11910) <= _11910:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11910) + 32]
                        mem[mem[64] + _11910 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11910) + _11726 + -mem[64] + 68
                    mem[_4478 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2809 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4478]:
                            revert with 'NH{q', 50
                        mem[t + _4478 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6077 = mem[_4478]
                    _6078 = mem[_3709]
                    if mem[_3709] > !mem[_4478]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_3709] + mem[_4478]):
                        revert with 'NH{q', 17
                    if mem[_3709] + mem[_4478] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _6281 = mem[64]
                    mem[mem[64]] = mem[_3709] + mem[_4478] + 1
                    mem[64] = mem[64] + floor32(_6078 + _6077 + 32) + 32
                    if not _6078 + _6077 + 1:
                        _7765 = mem[_3709]
                        idx = 0
                        s = 0
                        while idx < _7765:
                            if idx >= mem[_3709]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6281]:
                                revert with 'NH{q', 50
                            mem[s + _6281 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7765 = mem[_3709]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7765 == -1:
                            revert with 'NH{q', 17
                        if _7765 >= mem[_6281]:
                            revert with 'NH{q', 50
                        mem[_7765 + _6281 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11491 = mem[_4478]
                        idx = 0
                        s = _7765 + 1
                        while idx < _11491:
                            if idx >= mem[_4478]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6281]:
                                revert with 'NH{q', 50
                            mem[s + _6281 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11491 = mem[_4478]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _11727 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11911 = mem[_6281]
                        mem[mem[64] + 36] = mem[_6281]
                        mem[mem[64] + 68 len ceil32(_11911)] = mem[_6281 + 32 len ceil32(_11911)]
                        var151001 = ceil32(_11911)
                        if ceil32(_11911) <= _11911:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11911) + 32]
                        mem[mem[64] + _11911 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11911) + _11727 + -mem[64] + 68
                    mem[_6281 + 32 len _6078 + _6077 + 1] = call.data[calldata.size len _6078 + _6077 + 1]
                    _7766 = mem[_3709]
                    idx = 0
                    s = 0
                    while idx < _7766:
                        if idx >= mem[_3709]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6281]:
                            revert with 'NH{q', 50
                        mem[s + _6281 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3709')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7766 = mem[_3709]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7766 == -1:
                        revert with 'NH{q', 17
                    if _7766 >= mem[_6281]:
                        revert with 'NH{q', 50
                    mem[_7766 + _6281 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11492 = mem[_4478]
                    idx = 0
                    s = _7766 + 1
                    while idx < _11492:
                        if idx >= mem[_4478]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6281]:
                            revert with 'NH{q', 50
                        mem[s + _6281 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4478')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11492 = mem[_4478]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3565 > _2809:
                    _11728 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11912 = mem[_6281]
                    mem[mem[64] + 36] = mem[_6281]
                    mem[mem[64] + 68 len ceil32(_11912)] = mem[_6281 + 32 len ceil32(_11912)]
                    var152001 = ceil32(_11912)
                    if ceil32(_11912) <= _11912:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11912) + 32]
                    mem[mem[64] + _11912 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11912) + _11728 + -mem[64] + 68
                s = 0
                idx = _3565 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _4477 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3565 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4477]:
                            revert with 'NH{q', 50
                        mem[t + _4477 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6073 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6073] = 26
                    mem[_6073 + 32] = 'SafeMath: division by zero'
                    if not _2809 / 10^18:
                        _6349 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6349] = 1
                        mem[_6349 + 32] = '0'
                        _6422 = mem[_4477]
                        if mem[_4477] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4477] + 1):
                            revert with 'NH{q', 17
                        if mem[_4477] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _6631 = mem[64]
                        mem[mem[64]] = mem[_4477] + 2
                        mem[64] = mem[64] + floor32(_6422 + 33) + 32
                        if not _6422 + 2:
                            _7759 = mem[_4477]
                            idx = 0
                            s = 0
                            while idx < _7759:
                                if idx >= mem[_4477]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6631]:
                                    revert with 'NH{q', 50
                                mem[s + _6631 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7759 = mem[_4477]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7759 == -1:
                                revert with 'NH{q', 17
                            if _7759 >= mem[_6631]:
                                revert with 'NH{q', 50
                            mem[_7759 + _6631 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11485 = mem[_6349]
                            idx = 0
                            s = _7759 + 1
                            while idx < _11485:
                                if idx >= mem[_6349]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6631]:
                                    revert with 'NH{q', 50
                                mem[s + _6631 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6349')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6349')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11485 = mem[_6349]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3565 > _2809:
                            _11717 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11905 = mem[_6631]
                            mem[mem[64] + 36] = mem[_6631]
                            mem[mem[64] + 68 len ceil32(_11905)] = mem[_6631 + 32 len ceil32(_11905)]
                            var150001 = ceil32(_11905)
                            if ceil32(_11905) <= _11905:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11905) + 32]
                            mem[mem[64] + _11905 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11905) + _11717 + -mem[64] + 68
                        mem[_6631 + 32 len _6422 + 2] = call.data[calldata.size len _6422 + 2]
                        _7760 = mem[_4477]
                        idx = 0
                        s = 0
                        while idx < _7760:
                            if idx >= mem[_4477]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6631]:
                                revert with 'NH{q', 50
                            mem[s + _6631 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7760 = mem[_4477]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7760 == -1:
                            revert with 'NH{q', 17
                        if _7760 >= mem[_6631]:
                            revert with 'NH{q', 50
                        mem[_7760 + _6631 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11486 = mem[_6349]
                        idx = 0
                        s = _7760 + 1
                        while idx < _11486:
                            if idx >= mem[_6349]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6631]:
                                revert with 'NH{q', 50
                            mem[s + _6631 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6349')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6349')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11486 = mem[_6349]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _11718 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11906 = mem[_6631]
                        mem[mem[64] + 36] = mem[_6631]
                        mem[mem[64] + 68 len ceil32(_11906)] = mem[_6631 + 32 len ceil32(_11906)]
                        var151001 = ceil32(_11906)
                        if ceil32(_11906) <= _11906:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11906) + 32]
                        mem[mem[64] + _11906 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11906) + _11718 + -mem[64] + 68
                    s = 0
                    idx = _2809 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7921 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2809 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7921]:
                                revert with 'NH{q', 50
                            mem[t + _7921 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11713 = mem[_7921]
                        _11714 = mem[_4477]
                        if mem[_4477] > !mem[_7921]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4477] + mem[_7921]):
                            revert with 'NH{q', 17
                        if mem[_4477] + mem[_7921] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12289 = mem[64]
                        mem[mem[64]] = mem[_4477] + mem[_7921] + 1
                        mem[64] = mem[64] + floor32(_11714 + _11713 + 32) + 32
                        if not _11714 + _11713 + 1:
                            _14731 = mem[_4477]
                            idx = 0
                            s = 0
                            while idx < _14731:
                                if idx >= mem[_4477]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12289]:
                                    revert with 'NH{q', 50
                                mem[s + _12289 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14731 = mem[_4477]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14731 == -1:
                                revert with 'NH{q', 17
                            if _14731 >= mem[_12289]:
                                revert with 'NH{q', 50
                            mem[_14731 + _12289 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19495 = mem[_7921]
                            idx = 0
                            s = _14731 + 1
                            while idx < _19495:
                                if idx >= mem[_7921]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12289]:
                                    revert with 'NH{q', 50
                                mem[s + _12289 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19495 = mem[_7921]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3565 > _2809:
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20251 = mem[_12289]
                            mem[mem[64] + 36] = mem[_12289]
                            mem[mem[64] + 68 len ceil32(_20251)] = mem[_12289 + 32 len ceil32(_20251)]
                            var158001 = ceil32(_20251)
                            if ceil32(_20251) > _20251:
                                mem[mem[64] + _20251 + 68] = 0
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20251) + 32]
                        mem[_12289 + 32 len _11714 + _11713 + 1] = call.data[calldata.size len _11714 + _11713 + 1]
                        _14732 = mem[_4477]
                        idx = 0
                        s = 0
                        while idx < _14732:
                            if idx >= mem[_4477]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12289]:
                                revert with 'NH{q', 50
                            mem[s + _12289 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14732 = mem[_4477]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14732 == -1:
                            revert with 'NH{q', 17
                        if _14732 >= mem[_12289]:
                            revert with 'NH{q', 50
                        mem[_14732 + _12289 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19496 = mem[_7921]
                        idx = 0
                        s = _14732 + 1
                        while idx < _19496:
                            if idx >= mem[_7921]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12289]:
                                revert with 'NH{q', 50
                            mem[s + _12289 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19496 = mem[_7921]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _19964 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20252 = mem[_12289]
                        mem[mem[64] + 36] = mem[_12289]
                        mem[mem[64] + 68 len ceil32(_20252)] = mem[_12289 + 32 len ceil32(_20252)]
                        var159001 = ceil32(_20252)
                        if ceil32(_20252) <= _20252:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20252) + 32]
                        mem[mem[64] + _20252 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20252) + _19964 + -mem[64] + 68
                    mem[_7921 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2809 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7921]:
                            revert with 'NH{q', 50
                        mem[t + _7921 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11715 = mem[_7921]
                    _11716 = mem[_4477]
                    if mem[_4477] > !mem[_7921]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4477] + mem[_7921]):
                        revert with 'NH{q', 17
                    if mem[_4477] + mem[_7921] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12291 = mem[64]
                    mem[mem[64]] = mem[_4477] + mem[_7921] + 1
                    mem[64] = mem[64] + floor32(_11716 + _11715 + 32) + 32
                    if not _11716 + _11715 + 1:
                        _14733 = mem[_4477]
                        idx = 0
                        s = 0
                        while idx < _14733:
                            if idx >= mem[_4477]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12291]:
                                revert with 'NH{q', 50
                            mem[s + _12291 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14733 = mem[_4477]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14733 == -1:
                            revert with 'NH{q', 17
                        if _14733 >= mem[_12291]:
                            revert with 'NH{q', 50
                        mem[_14733 + _12291 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19497 = mem[_7921]
                        idx = 0
                        s = _14733 + 1
                        while idx < _19497:
                            if idx >= mem[_7921]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12291]:
                                revert with 'NH{q', 50
                            mem[s + _12291 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19497 = mem[_7921]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20253 = mem[_12291]
                        mem[mem[64] + 36] = mem[_12291]
                        mem[mem[64] + 68 len ceil32(_20253)] = mem[_12291 + 32 len ceil32(_20253)]
                        var159001 = ceil32(_20253)
                        if ceil32(_20253) > _20253:
                            mem[mem[64] + _20253 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20253) + 32]
                    mem[_12291 + 32 len _11716 + _11715 + 1] = call.data[calldata.size len _11716 + _11715 + 1]
                    _14734 = mem[_4477]
                    idx = 0
                    s = 0
                    while idx < _14734:
                        if idx >= mem[_4477]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12291]:
                            revert with 'NH{q', 50
                        mem[s + _12291 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14734 = mem[_4477]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14734 == -1:
                        revert with 'NH{q', 17
                    if _14734 >= mem[_12291]:
                        revert with 'NH{q', 50
                    mem[_14734 + _12291 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19498 = mem[_7921]
                    idx = 0
                    s = _14734 + 1
                    while idx < _19498:
                        if idx >= mem[_7921]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12291]:
                            revert with 'NH{q', 50
                        mem[s + _12291 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7921')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19498 = mem[_7921]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3565 > _2809:
                    _19966 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20254 = mem[_12291]
                    mem[mem[64] + 36] = mem[_12291]
                    mem[mem[64] + 68 len ceil32(_20254)] = mem[_12291 + 32 len ceil32(_20254)]
                    var160001 = ceil32(_20254)
                    if ceil32(_20254) <= _20254:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20254) + 32]
                    mem[mem[64] + _20254 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20254) + _19966 + -mem[64] + 68
                mem[_4477 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3565 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_4477]:
                        revert with 'NH{q', 50
                    mem[t + _4477 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _6074 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6074] = 26
                mem[_6074 + 32] = 'SafeMath: division by zero'
                if not _2809 / 10^18:
                    _6350 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6350] = 1
                    mem[_6350 + 32] = '0'
                    _6424 = mem[_4477]
                    if mem[_4477] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4477] + 1):
                        revert with 'NH{q', 17
                    if mem[_4477] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _6632 = mem[64]
                    mem[mem[64]] = mem[_4477] + 2
                    mem[64] = mem[64] + floor32(_6424 + 33) + 32
                    if not _6424 + 2:
                        _7761 = mem[_4477]
                        idx = 0
                        s = 0
                        while idx < _7761:
                            if idx >= mem[_4477]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6632]:
                                revert with 'NH{q', 50
                            mem[s + _6632 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7761 = mem[_4477]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7761 == -1:
                            revert with 'NH{q', 17
                        if _7761 >= mem[_6632]:
                            revert with 'NH{q', 50
                        mem[_7761 + _6632 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11487 = mem[_6350]
                        idx = 0
                        s = _7761 + 1
                        while idx < _11487:
                            if idx >= mem[_6350]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6632]:
                                revert with 'NH{q', 50
                            mem[s + _6632 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6350')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6350')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11487 = mem[_6350]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _11723 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11907 = mem[_6632]
                        mem[mem[64] + 36] = mem[_6632]
                        mem[mem[64] + 68 len ceil32(_11907)] = mem[_6632 + 32 len ceil32(_11907)]
                        var151001 = ceil32(_11907)
                        if ceil32(_11907) <= _11907:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11907) + 32]
                        mem[mem[64] + _11907 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11907) + _11723 + -mem[64] + 68
                    mem[_6632 + 32 len _6424 + 2] = call.data[calldata.size len _6424 + 2]
                    _7762 = mem[_4477]
                    idx = 0
                    s = 0
                    while idx < _7762:
                        if idx >= mem[_4477]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6632]:
                            revert with 'NH{q', 50
                        mem[s + _6632 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7762 = mem[_4477]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7762 == -1:
                        revert with 'NH{q', 17
                    if _7762 >= mem[_6632]:
                        revert with 'NH{q', 50
                    mem[_7762 + _6632 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11488 = mem[_6350]
                    idx = 0
                    s = _7762 + 1
                    while idx < _11488:
                        if idx >= mem[_6350]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6632]:
                            revert with 'NH{q', 50
                        mem[s + _6632 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6350')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6350')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11488 = mem[_6350]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3565 > _2809:
                    _11724 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11908 = mem[_6632]
                    mem[mem[64] + 36] = mem[_6632]
                    mem[mem[64] + 68 len ceil32(_11908)] = mem[_6632 + 32 len ceil32(_11908)]
                    var152001 = ceil32(_11908)
                    if ceil32(_11908) <= _11908:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11908) + 32]
                    mem[mem[64] + _11908 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11908) + _11724 + -mem[64] + 68
                s = 0
                idx = _2809 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7924 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _2809 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7924]:
                            revert with 'NH{q', 50
                        mem[t + _7924 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11719 = mem[_7924]
                    _11720 = mem[_4477]
                    if mem[_4477] > !mem[_7924]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4477] + mem[_7924]):
                        revert with 'NH{q', 17
                    if mem[_4477] + mem[_7924] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12293 = mem[64]
                    mem[mem[64]] = mem[_4477] + mem[_7924] + 1
                    mem[64] = mem[64] + floor32(_11720 + _11719 + 32) + 32
                    if not _11720 + _11719 + 1:
                        _14735 = mem[_4477]
                        idx = 0
                        s = 0
                        while idx < _14735:
                            if idx >= mem[_4477]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12293]:
                                revert with 'NH{q', 50
                            mem[s + _12293 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14735 = mem[_4477]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14735 == -1:
                            revert with 'NH{q', 17
                        if _14735 >= mem[_12293]:
                            revert with 'NH{q', 50
                        mem[_14735 + _12293 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19499 = mem[_7924]
                        idx = 0
                        s = _14735 + 1
                        while idx < _19499:
                            if idx >= mem[_7924]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12293]:
                                revert with 'NH{q', 50
                            mem[s + _12293 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19499 = mem[_7924]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3565 > _2809:
                        _19967 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20255 = mem[_12293]
                        mem[mem[64] + 36] = mem[_12293]
                        mem[mem[64] + 68 len ceil32(_20255)] = mem[_12293 + 32 len ceil32(_20255)]
                        var159001 = ceil32(_20255)
                        if ceil32(_20255) <= _20255:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20255) + 32]
                        mem[mem[64] + _20255 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20255) + _19967 + -mem[64] + 68
                    mem[_12293 + 32 len _11720 + _11719 + 1] = call.data[calldata.size len _11720 + _11719 + 1]
                    _14736 = mem[_4477]
                    idx = 0
                    s = 0
                    while idx < _14736:
                        if idx >= mem[_4477]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12293]:
                            revert with 'NH{q', 50
                        mem[s + _12293 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14736 = mem[_4477]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14736 == -1:
                        revert with 'NH{q', 17
                    if _14736 >= mem[_12293]:
                        revert with 'NH{q', 50
                    mem[_14736 + _12293 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19500 = mem[_7924]
                    idx = 0
                    s = _14736 + 1
                    while idx < _19500:
                        if idx >= mem[_7924]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12293]:
                            revert with 'NH{q', 50
                        mem[s + _12293 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19500 = mem[_7924]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3565 > _2809:
                    _19968 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20256 = mem[_12293]
                    mem[mem[64] + 36] = mem[_12293]
                    mem[mem[64] + 68 len ceil32(_20256)] = mem[_12293 + 32 len ceil32(_20256)]
                    var160001 = ceil32(_20256)
                    if ceil32(_20256) <= _20256:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20256) + 32]
                    mem[mem[64] + _20256 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20256) + _19968 + -mem[64] + 68
                mem[_7924 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _2809 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7924]:
                        revert with 'NH{q', 50
                    mem[t + _7924 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11721 = mem[_7924]
                _11722 = mem[_4477]
                if mem[_4477] > !mem[_7924]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_4477] + mem[_7924]):
                    revert with 'NH{q', 17
                if mem[_4477] + mem[_7924] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12295 = mem[64]
                mem[mem[64]] = mem[_4477] + mem[_7924] + 1
                mem[64] = mem[64] + floor32(_11722 + _11721 + 32) + 32
                if not _11722 + _11721 + 1:
                    _14737 = mem[_4477]
                    idx = 0
                    s = 0
                    while idx < _14737:
                        if idx >= mem[_4477]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12295]:
                            revert with 'NH{q', 50
                        mem[s + _12295 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14737 = mem[_4477]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14737 == -1:
                        revert with 'NH{q', 17
                    if _14737 >= mem[_12295]:
                        revert with 'NH{q', 50
                    mem[_14737 + _12295 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19501 = mem[_7924]
                    idx = 0
                    s = _14737 + 1
                    while idx < _19501:
                        if idx >= mem[_7924]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12295]:
                            revert with 'NH{q', 50
                        mem[s + _12295 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19501 = mem[_7924]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3565 > _2809:
                    _19969 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20257 = mem[_12295]
                    mem[mem[64] + 36] = mem[_12295]
                    mem[mem[64] + 68 len ceil32(_20257)] = mem[_12295 + 32 len ceil32(_20257)]
                    var160001 = ceil32(_20257)
                    if ceil32(_20257) <= _20257:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20257) + 32]
                    mem[mem[64] + _20257 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20257) + _19969 + -mem[64] + 68
                mem[_12295 + 32 len _11722 + _11721 + 1] = call.data[calldata.size len _11722 + _11721 + 1]
                _14738 = mem[_4477]
                idx = 0
                s = 0
                while idx < _14738:
                    if idx >= mem[_4477]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12295]:
                        revert with 'NH{q', 50
                    mem[s + _12295 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4477')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14738 = mem[_4477]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14738 == -1:
                    revert with 'NH{q', 17
                if _14738 >= mem[_12295]:
                    revert with 'NH{q', 50
                mem[_14738 + _12295 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19502 = mem[_7924]
                idx = 0
                s = _14738 + 1
                while idx < _19502:
                    if idx >= mem[_7924]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12295]:
                        revert with 'NH{q', 50
                    mem[s + _12295 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7924')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19502 = mem[_7924]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3565 > _2809:
                _19970 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20258 = mem[_12295]
                mem[mem[64] + 36] = mem[_12295]
                mem[mem[64] + 68 len ceil32(_20258)] = mem[_12295 + 32 len ceil32(_20258)]
                var161001 = ceil32(_20258)
                if ceil32(_20258) <= _20258:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20258) + 32]
                mem[mem[64] + _20258 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20258) + _19970 + -mem[64] + 68
            mem[0] = 10
            mem[_2773 + 32] = address(stor10.field_0)
            idx = _2773 + 32
            s = 0
            while _2773 + (32 * stor10.length) > idx:
                mem[idx + 32] = stor10[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3499 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3523 = mem[_3499]
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            _3547 = mem[_2773 + 32]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            mem[_2773 + 32] = mem[_2773 + 76 len 20]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            mem[_2773 + 64] = address(_3547)
            _3614 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _3631 = mem[_2767]
            mem[mem[64] + 164] = mem[_2767]
            idx = 0
            s = mem[64] + 196
            t = _2767 + 32
            while idx < _3631:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3614 + 100] = this.address
            mem[_3614 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3614 + (32 * _3631) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4563 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4620 = mem[_4563]
            _4659 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _4620
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _4683 = mem[_2773]
            mem[mem[64] + 164] = mem[_2773]
            idx = 0
            s = mem[64] + 196
            t = _2773 + 32
            while idx < _4683:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4659 + 100] = this.address
            mem[_4659 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _4659 + (32 * _4683) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6183 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6225 = mem[_6183]
            _6283 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6283] = 26
            mem[_6283 + 32] = 'SafeMath: division by zero'
            if not _6225 / 10^18:
                _6563 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6563] = 1
                mem[_6563 + 32] = '0'
                _6637 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6637] = 26
                mem[_6637 + 32] = 'SafeMath: division by zero'
                if not _3523 / 10^18:
                    _6989 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6989] = 1
                    mem[_6989 + 32] = '0'
                    _7207 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_7207 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_6563]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7207]:
                            revert with 'NH{q', 50
                        mem[s + _7207 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_7207]:
                        revert with 'NH{q', 50
                    mem[_7207 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11494 = mem[_6989]
                    idx = 0
                    s = 2
                    while idx < _11494:
                        if idx >= mem[_6989]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7207]:
                            revert with 'NH{q', 50
                        mem[s + _7207 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6989')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6989')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11494 = mem[_6989]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    _11736 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11914 = mem[_7207]
                    mem[mem[64] + 36] = mem[_7207]
                    mem[mem[64] + 68 len ceil32(_11914)] = mem[_7207 + 32 len ceil32(_11914)]
                    var147001 = ceil32(_11914)
                    if ceil32(_11914) <= _11914:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11914) + 32]
                    mem[mem[64] + _11914 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11914) + _11736 + -mem[64] + 68
                s = 0
                idx = _3523 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7932 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3523 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7932]:
                            revert with 'NH{q', 50
                        mem[t + _7932 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11731 = mem[_7932]
                    _11732 = mem[_6563]
                    if mem[_6563] > !mem[_7932]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6563] + mem[_7932]):
                        revert with 'NH{q', 17
                    if mem[_6563] + mem[_7932] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12299 = mem[64]
                    mem[mem[64]] = mem[_6563] + mem[_7932] + 1
                    mem[64] = mem[64] + floor32(_11732 + _11731 + 32) + 32
                    if not _11732 + _11731 + 1:
                        _14743 = mem[_6563]
                        idx = 0
                        s = 0
                        while idx < _14743:
                            if idx >= mem[_6563]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12299]:
                                revert with 'NH{q', 50
                            mem[s + _12299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14743 = mem[_6563]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14743 == -1:
                            revert with 'NH{q', 17
                        if _14743 >= mem[_12299]:
                            revert with 'NH{q', 50
                        mem[_14743 + _12299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19507 = mem[_7932]
                        idx = 0
                        s = _14743 + 1
                        while idx < _19507:
                            if idx >= mem[_7932]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12299]:
                                revert with 'NH{q', 50
                            mem[s + _12299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19507 = mem[_7932]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6225 > _3523:
                        _19983 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20263 = mem[_12299]
                        mem[mem[64] + 36] = mem[_12299]
                        mem[mem[64] + 68 len ceil32(_20263)] = mem[_12299 + 32 len ceil32(_20263)]
                        var154001 = ceil32(_20263)
                        if ceil32(_20263) <= _20263:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20263) + 32]
                        mem[mem[64] + _20263 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20263) + _19983 + -mem[64] + 68
                    mem[_12299 + 32 len _11732 + _11731 + 1] = call.data[calldata.size len _11732 + _11731 + 1]
                    _14744 = mem[_6563]
                    idx = 0
                    s = 0
                    while idx < _14744:
                        if idx >= mem[_6563]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12299]:
                            revert with 'NH{q', 50
                        mem[s + _12299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14744 = mem[_6563]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14744 == -1:
                        revert with 'NH{q', 17
                    if _14744 >= mem[_12299]:
                        revert with 'NH{q', 50
                    mem[_14744 + _12299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19508 = mem[_7932]
                    idx = 0
                    s = _14744 + 1
                    while idx < _19508:
                        if idx >= mem[_7932]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12299]:
                            revert with 'NH{q', 50
                        mem[s + _12299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19508 = mem[_7932]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    _19984 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20264 = mem[_12299]
                    mem[mem[64] + 36] = mem[_12299]
                    mem[mem[64] + 68 len ceil32(_20264)] = mem[_12299 + 32 len ceil32(_20264)]
                    var155001 = ceil32(_20264)
                    if ceil32(_20264) <= _20264:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20264) + 32]
                    mem[mem[64] + _20264 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20264) + _19984 + -mem[64] + 68
                mem[_7932 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3523 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7932]:
                        revert with 'NH{q', 50
                    mem[t + _7932 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11733 = mem[_7932]
                _11734 = mem[_6563]
                if mem[_6563] > !mem[_7932]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6563] + mem[_7932]):
                    revert with 'NH{q', 17
                if mem[_6563] + mem[_7932] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12301 = mem[64]
                mem[mem[64]] = mem[_6563] + mem[_7932] + 1
                mem[64] = mem[64] + floor32(_11734 + _11733 + 32) + 32
                if not _11734 + _11733 + 1:
                    _14745 = mem[_6563]
                    idx = 0
                    s = 0
                    while idx < _14745:
                        if idx >= mem[_6563]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12301]:
                            revert with 'NH{q', 50
                        mem[s + _12301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14745 = mem[_6563]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14745 == -1:
                        revert with 'NH{q', 17
                    if _14745 >= mem[_12301]:
                        revert with 'NH{q', 50
                    mem[_14745 + _12301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19509 = mem[_7932]
                    idx = 0
                    s = _14745 + 1
                    while idx < _19509:
                        if idx >= mem[_7932]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12301]:
                            revert with 'NH{q', 50
                        mem[s + _12301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19509 = mem[_7932]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    _19985 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20265 = mem[_12301]
                    mem[mem[64] + 36] = mem[_12301]
                    mem[mem[64] + 68 len ceil32(_20265)] = mem[_12301 + 32 len ceil32(_20265)]
                    var155001 = ceil32(_20265)
                    if ceil32(_20265) <= _20265:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20265) + 32]
                    mem[mem[64] + _20265 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20265) + _19985 + -mem[64] + 68
                mem[_12301 + 32 len _11734 + _11733 + 1] = call.data[calldata.size len _11734 + _11733 + 1]
                _14746 = mem[_6563]
                idx = 0
                s = 0
                while idx < _14746:
                    if idx >= mem[_6563]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12301]:
                        revert with 'NH{q', 50
                    mem[s + _12301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6563')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14746 = mem[_6563]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14746 == -1:
                    revert with 'NH{q', 17
                if _14746 >= mem[_12301]:
                    revert with 'NH{q', 50
                mem[_14746 + _12301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19510 = mem[_7932]
                idx = 0
                s = _14746 + 1
                while idx < _19510:
                    if idx >= mem[_7932]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12301]:
                        revert with 'NH{q', 50
                    mem[s + _12301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7932')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19510 = mem[_7932]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6225 > _3523:
                _19986 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20266 = mem[_12301]
                mem[mem[64] + 36] = mem[_12301]
                mem[mem[64] + 68 len ceil32(_20266)] = mem[_12301 + 32 len ceil32(_20266)]
                var156001 = ceil32(_20266)
                if ceil32(_20266) <= _20266:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20266) + 32]
                mem[mem[64] + _20266 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20266) + _19986 + -mem[64] + 68
            s = 0
            idx = _6225 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _7931 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6225 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7931]:
                        revert with 'NH{q', 50
                    mem[t + _7931 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11729 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11729] = 26
                mem[_11729 + 32] = 'SafeMath: division by zero'
                if not _3523 / 10^18:
                    _12471 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12471] = 1
                    mem[_12471 + 32] = '0'
                    _12684 = mem[_7931]
                    if mem[_7931] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7931] + 1):
                        revert with 'NH{q', 17
                    if mem[_7931] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13317 = mem[64]
                    mem[mem[64]] = mem[_7931] + 2
                    mem[64] = mem[64] + floor32(_12684 + 33) + 32
                    if not _12684 + 2:
                        _14739 = mem[_7931]
                        idx = 0
                        s = 0
                        while idx < _14739:
                            if idx >= mem[_7931]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13317]:
                                revert with 'NH{q', 50
                            mem[s + _13317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14739 = mem[_7931]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14739 == -1:
                            revert with 'NH{q', 17
                        if _14739 >= mem[_13317]:
                            revert with 'NH{q', 50
                        mem[_14739 + _13317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19503 = mem[_12471]
                        idx = 0
                        s = _14739 + 1
                        while idx < _19503:
                            if idx >= mem[_12471]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13317]:
                                revert with 'NH{q', 50
                            mem[s + _13317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12471')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12471')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19503 = mem[_12471]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6225 > _3523:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20259 = mem[_13317]
                        mem[mem[64] + 36] = mem[_13317]
                        mem[mem[64] + 68 len ceil32(_20259)] = mem[_13317 + 32 len ceil32(_20259)]
                        var154001 = ceil32(_20259)
                        if ceil32(_20259) > _20259:
                            mem[mem[64] + _20259 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20259) + 32]
                    mem[_13317 + 32 len _12684 + 2] = call.data[calldata.size len _12684 + 2]
                    _14740 = mem[_7931]
                    idx = 0
                    s = 0
                    while idx < _14740:
                        if idx >= mem[_7931]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13317]:
                            revert with 'NH{q', 50
                        mem[s + _13317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14740 = mem[_7931]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14740 == -1:
                        revert with 'NH{q', 17
                    if _14740 >= mem[_13317]:
                        revert with 'NH{q', 50
                    mem[_14740 + _13317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19504 = mem[_12471]
                    idx = 0
                    s = _14740 + 1
                    while idx < _19504:
                        if idx >= mem[_12471]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13317]:
                            revert with 'NH{q', 50
                        mem[s + _13317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12471')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12471')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19504 = mem[_12471]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    _19976 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20260 = mem[_13317]
                    mem[mem[64] + 36] = mem[_13317]
                    mem[mem[64] + 68 len ceil32(_20260)] = mem[_13317 + 32 len ceil32(_20260)]
                    var155001 = ceil32(_20260)
                    if ceil32(_20260) <= _20260:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20260) + 32]
                    mem[mem[64] + _20260 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20260) + _19976 + -mem[64] + 68
                s = 0
                idx = _3523 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15123 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3523 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15123]:
                            revert with 'NH{q', 50
                        mem[t + _15123 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _19971 = mem[_15123]
                    _19972 = mem[_7931]
                    if mem[_7931] > !mem[_15123]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7931] + mem[_15123]):
                        revert with 'NH{q', 17
                    if mem[_7931] + mem[_15123] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21031 = mem[64]
                    mem[mem[64]] = mem[_7931] + mem[_15123] + 1
                    mem[64] = mem[64] + floor32(_19972 + _19971 + 32) + 32
                    if not _19972 + _19971 + 1:
                        _23227 = mem[_7931]
                        idx = 0
                        s = 0
                        while idx < _23227:
                            if idx >= mem[_7931]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21031]:
                                revert with 'NH{q', 50
                            mem[s + _21031 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23227 = mem[_7931]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23227 == -1:
                            revert with 'NH{q', 17
                        if _23227 >= mem[_21031]:
                            revert with 'NH{q', 50
                        mem[_23227 + _21031 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26491 = mem[_15123]
                        idx = 0
                        s = _23227 + 1
                        while idx < _26491:
                            if idx >= mem[_15123]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21031]:
                                revert with 'NH{q', 50
                            mem[s + _21031 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26491 = mem[_15123]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6225 > _3523:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27115 = mem[_21031]
                        mem[mem[64] + 36] = mem[_21031]
                        mem[mem[64] + 68 len ceil32(_27115)] = mem[_21031 + 32 len ceil32(_27115)]
                        var162001 = ceil32(_27115)
                        if ceil32(_27115) > _27115:
                            mem[mem[64] + _27115 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27115) + 32]
                    mem[_21031 + 32 len _19972 + _19971 + 1] = call.data[calldata.size len _19972 + _19971 + 1]
                    _23228 = mem[_7931]
                    idx = 0
                    s = 0
                    while idx < _23228:
                        if idx >= mem[_7931]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21031]:
                            revert with 'NH{q', 50
                        mem[s + _21031 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23228 = mem[_7931]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23228 == -1:
                        revert with 'NH{q', 17
                    if _23228 >= mem[_21031]:
                        revert with 'NH{q', 50
                    mem[_23228 + _21031 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26492 = mem[_15123]
                    idx = 0
                    s = _23228 + 1
                    while idx < _26492:
                        if idx >= mem[_15123]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21031]:
                            revert with 'NH{q', 50
                        mem[s + _21031 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26492 = mem[_15123]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27116 = mem[_21031]
                    mem[mem[64] + 36] = mem[_21031]
                    mem[mem[64] + 68 len ceil32(_27116)] = mem[_21031 + 32 len ceil32(_27116)]
                    var163001 = ceil32(_27116)
                    if ceil32(_27116) > _27116:
                        mem[mem[64] + _27116 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27116) + 32]
                mem[_15123 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3523 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15123]:
                        revert with 'NH{q', 50
                    mem[t + _15123 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _19973 = mem[_15123]
                _19974 = mem[_7931]
                if mem[_7931] > !mem[_15123]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7931] + mem[_15123]):
                    revert with 'NH{q', 17
                if mem[_7931] + mem[_15123] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21033 = mem[64]
                mem[mem[64]] = mem[_7931] + mem[_15123] + 1
                mem[64] = mem[64] + floor32(_19974 + _19973 + 32) + 32
                if not _19974 + _19973 + 1:
                    _23229 = mem[_7931]
                    idx = 0
                    s = 0
                    while idx < _23229:
                        if idx >= mem[_7931]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21033]:
                            revert with 'NH{q', 50
                        mem[s + _21033 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23229 = mem[_7931]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23229 == -1:
                        revert with 'NH{q', 17
                    if _23229 >= mem[_21033]:
                        revert with 'NH{q', 50
                    mem[_23229 + _21033 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26493 = mem[_15123]
                    idx = 0
                    s = _23229 + 1
                    while idx < _26493:
                        if idx >= mem[_15123]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21033]:
                            revert with 'NH{q', 50
                        mem[s + _21033 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26493 = mem[_15123]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27117 = mem[_21033]
                    mem[mem[64] + 36] = mem[_21033]
                    mem[mem[64] + 68 len ceil32(_27117)] = mem[_21033 + 32 len ceil32(_27117)]
                    var163001 = ceil32(_27117)
                    if ceil32(_27117) > _27117:
                        mem[mem[64] + _27117 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27117) + 32]
                mem[_21033 + 32 len _19974 + _19973 + 1] = call.data[calldata.size len _19974 + _19973 + 1]
                _23230 = mem[_7931]
                idx = 0
                s = 0
                while idx < _23230:
                    if idx >= mem[_7931]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21033]:
                        revert with 'NH{q', 50
                    mem[s + _21033 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23230 = mem[_7931]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23230 == -1:
                    revert with 'NH{q', 17
                if _23230 >= mem[_21033]:
                    revert with 'NH{q', 50
                mem[_23230 + _21033 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26494 = mem[_15123]
                idx = 0
                s = _23230 + 1
                while idx < _26494:
                    if idx >= mem[_15123]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21033]:
                        revert with 'NH{q', 50
                    mem[s + _21033 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15123')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26494 = mem[_15123]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6225 > _3523:
                _26926 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27118 = mem[_21033]
                mem[mem[64] + 36] = mem[_21033]
                mem[mem[64] + 68 len ceil32(_27118)] = mem[_21033 + 32 len ceil32(_27118)]
                var164001 = ceil32(_27118)
                if ceil32(_27118) <= _27118:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27118) + 32]
                mem[mem[64] + _27118 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27118) + _26926 + -mem[64] + 68
            mem[_7931 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6225 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_7931]:
                    revert with 'NH{q', 50
                mem[t + _7931 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11730 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11730] = 26
            mem[_11730 + 32] = 'SafeMath: division by zero'
            if not _3523 / 10^18:
                _12472 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12472] = 1
                mem[_12472 + 32] = '0'
                _12686 = mem[_7931]
                if mem[_7931] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7931] + 1):
                    revert with 'NH{q', 17
                if mem[_7931] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13318 = mem[64]
                mem[mem[64]] = mem[_7931] + 2
                mem[64] = mem[64] + floor32(_12686 + 33) + 32
                if not _12686 + 2:
                    _14741 = mem[_7931]
                    idx = 0
                    s = 0
                    while idx < _14741:
                        if idx >= mem[_7931]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13318]:
                            revert with 'NH{q', 50
                        mem[s + _13318 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14741 = mem[_7931]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14741 == -1:
                        revert with 'NH{q', 17
                    if _14741 >= mem[_13318]:
                        revert with 'NH{q', 50
                    mem[_14741 + _13318 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19505 = mem[_12472]
                    idx = 0
                    s = _14741 + 1
                    while idx < _19505:
                        if idx >= mem[_12472]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13318]:
                            revert with 'NH{q', 50
                        mem[s + _13318 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12472')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12472')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19505 = mem[_12472]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    _19981 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20261 = mem[_13318]
                    mem[mem[64] + 36] = mem[_13318]
                    mem[mem[64] + 68 len ceil32(_20261)] = mem[_13318 + 32 len ceil32(_20261)]
                    var155001 = ceil32(_20261)
                    if ceil32(_20261) <= _20261:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20261) + 32]
                    mem[mem[64] + _20261 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20261) + _19981 + -mem[64] + 68
                mem[_13318 + 32 len _12686 + 2] = call.data[calldata.size len _12686 + 2]
                _14742 = mem[_7931]
                idx = 0
                s = 0
                while idx < _14742:
                    if idx >= mem[_7931]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13318]:
                        revert with 'NH{q', 50
                    mem[s + _13318 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14742 = mem[_7931]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14742 == -1:
                    revert with 'NH{q', 17
                if _14742 >= mem[_13318]:
                    revert with 'NH{q', 50
                mem[_14742 + _13318 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19506 = mem[_12472]
                idx = 0
                s = _14742 + 1
                while idx < _19506:
                    if idx >= mem[_12472]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13318]:
                        revert with 'NH{q', 50
                    mem[s + _13318 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12472')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12472')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19506 = mem[_12472]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6225 > _3523:
                _19982 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20262 = mem[_13318]
                mem[mem[64] + 36] = mem[_13318]
                mem[mem[64] + 68 len ceil32(_20262)] = mem[_13318 + 32 len ceil32(_20262)]
                var156001 = ceil32(_20262)
                if ceil32(_20262) <= _20262:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20262) + 32]
                mem[mem[64] + _20262 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20262) + _19982 + -mem[64] + 68
            s = 0
            idx = _3523 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15126 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3523 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15126]:
                        revert with 'NH{q', 50
                    mem[t + _15126 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _19977 = mem[_15126]
                _19978 = mem[_7931]
                if mem[_7931] > !mem[_15126]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7931] + mem[_15126]):
                    revert with 'NH{q', 17
                if mem[_7931] + mem[_15126] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21035 = mem[64]
                mem[mem[64]] = mem[_7931] + mem[_15126] + 1
                mem[64] = mem[64] + floor32(_19978 + _19977 + 32) + 32
                if not _19978 + _19977 + 1:
                    _23231 = mem[_7931]
                    idx = 0
                    s = 0
                    while idx < _23231:
                        if idx >= mem[_7931]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21035]:
                            revert with 'NH{q', 50
                        mem[s + _21035 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23231 = mem[_7931]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23231 == -1:
                        revert with 'NH{q', 17
                    if _23231 >= mem[_21035]:
                        revert with 'NH{q', 50
                    mem[_23231 + _21035 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26495 = mem[_15126]
                    idx = 0
                    s = _23231 + 1
                    while idx < _26495:
                        if idx >= mem[_15126]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21035]:
                            revert with 'NH{q', 50
                        mem[s + _21035 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26495 = mem[_15126]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6225 > _3523:
                    _26927 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27119 = mem[_21035]
                    mem[mem[64] + 36] = mem[_21035]
                    mem[mem[64] + 68 len ceil32(_27119)] = mem[_21035 + 32 len ceil32(_27119)]
                    var163001 = ceil32(_27119)
                    if ceil32(_27119) <= _27119:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27119) + 32]
                    mem[mem[64] + _27119 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27119) + _26927 + -mem[64] + 68
                mem[_21035 + 32 len _19978 + _19977 + 1] = call.data[calldata.size len _19978 + _19977 + 1]
                _23232 = mem[_7931]
                idx = 0
                s = 0
                while idx < _23232:
                    if idx >= mem[_7931]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21035]:
                        revert with 'NH{q', 50
                    mem[s + _21035 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23232 = mem[_7931]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23232 == -1:
                    revert with 'NH{q', 17
                if _23232 >= mem[_21035]:
                    revert with 'NH{q', 50
                mem[_23232 + _21035 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26496 = mem[_15126]
                idx = 0
                s = _23232 + 1
                while idx < _26496:
                    if idx >= mem[_15126]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21035]:
                        revert with 'NH{q', 50
                    mem[s + _21035 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26496 = mem[_15126]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6225 > _3523:
                _26928 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27120 = mem[_21035]
                mem[mem[64] + 36] = mem[_21035]
                mem[mem[64] + 68 len ceil32(_27120)] = mem[_21035 + 32 len ceil32(_27120)]
                var164001 = ceil32(_27120)
                if ceil32(_27120) <= _27120:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27120) + 32]
                mem[mem[64] + _27120 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27120) + _26928 + -mem[64] + 68
            mem[_15126 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3523 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15126]:
                    revert with 'NH{q', 50
                mem[t + _15126 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _19979 = mem[_15126]
            _19980 = mem[_7931]
            if mem[_7931] > !mem[_15126]:
                revert with 'NH{q', 17
            if 1 > !(mem[_7931] + mem[_15126]):
                revert with 'NH{q', 17
            if mem[_7931] + mem[_15126] + 1 > test266151307():
                revert with 'NH{q', 65
            _21037 = mem[64]
            mem[mem[64]] = mem[_7931] + mem[_15126] + 1
            mem[64] = mem[64] + floor32(_19980 + _19979 + 32) + 32
            if not _19980 + _19979 + 1:
                _23233 = mem[_7931]
                idx = 0
                s = 0
                while idx < _23233:
                    if idx >= mem[_7931]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21037]:
                        revert with 'NH{q', 50
                    mem[s + _21037 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23233 = mem[_7931]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23233 == -1:
                    revert with 'NH{q', 17
                if _23233 >= mem[_21037]:
                    revert with 'NH{q', 50
                mem[_23233 + _21037 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26497 = mem[_15126]
                idx = 0
                s = _23233 + 1
                while idx < _26497:
                    if idx >= mem[_15126]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21037]:
                        revert with 'NH{q', 50
                    mem[s + _21037 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26497 = mem[_15126]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6225 > _3523:
                _26929 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27121 = mem[_21037]
                mem[mem[64] + 36] = mem[_21037]
                mem[mem[64] + 68 len ceil32(_27121)] = mem[_21037 + 32 len ceil32(_27121)]
                var164001 = ceil32(_27121)
                if ceil32(_27121) <= _27121:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27121) + 32]
                mem[mem[64] + _27121 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27121) + _26929 + -mem[64] + 68
            mem[_21037 + 32 len _19980 + _19979 + 1] = call.data[calldata.size len _19980 + _19979 + 1]
            _23234 = mem[_7931]
            idx = 0
            s = 0
            while idx < _23234:
                if idx >= mem[_7931]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21037]:
                    revert with 'NH{q', 50
                mem[s + _21037 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7931')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23234 = mem[_7931]
                idx = idx + 1
                s = s + 1
                continue 
            if _23234 == -1:
                revert with 'NH{q', 17
            if _23234 >= mem[_21037]:
                revert with 'NH{q', 50
            mem[_23234 + _21037 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26498 = mem[_15126]
            idx = 0
            s = _23234 + 1
            while idx < _26498:
                if idx >= mem[_15126]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21037]:
                    revert with 'NH{q', 50
                mem[s + _21037 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15126')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26498 = mem[_15126]
                idx = idx + 1
                s = s + 1
                continue 
            if _6225 > _3523:
            _26930 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27122 = mem[_21037]
            mem[mem[64] + 36] = mem[_21037]
            mem[mem[64] + 68 len ceil32(_27122)] = mem[_21037 + 32 len ceil32(_27122)]
            var165001 = ceil32(_27122)
            if ceil32(_27122) <= _27122:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27122) + 32]
            mem[mem[64] + _27122 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27122) + _26930 + -mem[64] + 68
        mem[0] = 11
        mem[_2767 + 32] = address(stor11.field_0)
        idx = _2767 + 32
        s = 0
        while _2767 + (32 * stor11.length) > idx:
            mem[idx + 32] = stor11[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        _3451 = mem[64]
        mem[64] = mem[64] + (32 * stor10.length) + 32
        mem[_3451] = stor10.length
        if not stor10.length:
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3507 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3531 = mem[_3507]
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            _3568 = mem[_3451 + 32]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            mem[_3451 + 32] = mem[_3451 + 76 len 20]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            mem[_3451 + 64] = address(_3568)
            _3632 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            mem[mem[64] + 164] = stor11.length
            idx = 0
            s = mem[64] + 196
            t = _2767 + 32
            while idx < stor11.length:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3632 + 100] = this.address
            mem[_3632 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3632 + (32 * stor11.length) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4564 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4621 = mem[_4564]
            _4660 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _4621
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _4684 = mem[_3451]
            mem[mem[64] + 164] = mem[_3451]
            idx = 0
            s = mem[64] + 196
            t = _3451 + 32
            while idx < _4684:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4660 + 100] = this.address
            mem[_4660 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _4660 + (32 * _4684) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6184 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6226 = mem[_6184]
            _6284 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6284] = 26
            mem[_6284 + 32] = 'SafeMath: division by zero'
            if not _6226 / 10^18:
                _6564 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6564] = 1
                mem[_6564 + 32] = '0'
                _6638 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6638] = 26
                mem[_6638 + 32] = 'SafeMath: division by zero'
                if not _3531 / 10^18:
                    _6990 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6990] = 1
                    mem[_6990 + 32] = '0'
                    _7208 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_7208 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_6564]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7208]:
                            revert with 'NH{q', 50
                        mem[s + _7208 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_7208]:
                        revert with 'NH{q', 50
                    mem[_7208 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11496 = mem[_6990]
                    idx = 0
                    s = 2
                    while idx < _11496:
                        if idx >= mem[_6990]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7208]:
                            revert with 'NH{q', 50
                        mem[s + _7208 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6990')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6990')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11496 = mem[_6990]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11916 = mem[_7208]
                    mem[mem[64] + 36] = mem[_7208]
                    mem[mem[64] + 68 len ceil32(_11916)] = mem[_7208 + 32 len ceil32(_11916)]
                    var147001 = ceil32(_11916)
                    if ceil32(_11916) > _11916:
                        mem[mem[64] + _11916 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11916) + 32]
                s = 0
                idx = _3531 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7936 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3531 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7936]:
                            revert with 'NH{q', 50
                        mem[t + _7936 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11739 = mem[_7936]
                    _11740 = mem[_6564]
                    if mem[_6564] > !mem[_7936]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6564] + mem[_7936]):
                        revert with 'NH{q', 17
                    if mem[_6564] + mem[_7936] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12305 = mem[64]
                    mem[mem[64]] = mem[_6564] + mem[_7936] + 1
                    mem[64] = mem[64] + floor32(_11740 + _11739 + 32) + 32
                    if not _11740 + _11739 + 1:
                        _14751 = mem[_6564]
                        idx = 0
                        s = 0
                        while idx < _14751:
                            if idx >= mem[_6564]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12305]:
                                revert with 'NH{q', 50
                            mem[s + _12305 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14751 = mem[_6564]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14751 == -1:
                            revert with 'NH{q', 17
                        if _14751 >= mem[_12305]:
                            revert with 'NH{q', 50
                        mem[_14751 + _12305 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19515 = mem[_7936]
                        idx = 0
                        s = _14751 + 1
                        while idx < _19515:
                            if idx >= mem[_7936]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12305]:
                                revert with 'NH{q', 50
                            mem[s + _12305 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19515 = mem[_7936]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6226 > _3531:
                        _19999 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20271 = mem[_12305]
                        mem[mem[64] + 36] = mem[_12305]
                        mem[mem[64] + 68 len ceil32(_20271)] = mem[_12305 + 32 len ceil32(_20271)]
                        var154001 = ceil32(_20271)
                        if ceil32(_20271) <= _20271:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20271) + 32]
                        mem[mem[64] + _20271 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20271) + _19999 + -mem[64] + 68
                    mem[_12305 + 32 len _11740 + _11739 + 1] = call.data[calldata.size len _11740 + _11739 + 1]
                    _14752 = mem[_6564]
                    idx = 0
                    s = 0
                    while idx < _14752:
                        if idx >= mem[_6564]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12305]:
                            revert with 'NH{q', 50
                        mem[s + _12305 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14752 = mem[_6564]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14752 == -1:
                        revert with 'NH{q', 17
                    if _14752 >= mem[_12305]:
                        revert with 'NH{q', 50
                    mem[_14752 + _12305 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19516 = mem[_7936]
                    idx = 0
                    s = _14752 + 1
                    while idx < _19516:
                        if idx >= mem[_7936]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12305]:
                            revert with 'NH{q', 50
                        mem[s + _12305 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19516 = mem[_7936]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    _20000 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20272 = mem[_12305]
                    mem[mem[64] + 36] = mem[_12305]
                    mem[mem[64] + 68 len ceil32(_20272)] = mem[_12305 + 32 len ceil32(_20272)]
                    var155001 = ceil32(_20272)
                    if ceil32(_20272) <= _20272:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20272) + 32]
                    mem[mem[64] + _20272 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20272) + _20000 + -mem[64] + 68
                mem[_7936 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3531 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7936]:
                        revert with 'NH{q', 50
                    mem[t + _7936 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11741 = mem[_7936]
                _11742 = mem[_6564]
                if mem[_6564] > !mem[_7936]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6564] + mem[_7936]):
                    revert with 'NH{q', 17
                if mem[_6564] + mem[_7936] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12307 = mem[64]
                mem[mem[64]] = mem[_6564] + mem[_7936] + 1
                mem[64] = mem[64] + floor32(_11742 + _11741 + 32) + 32
                if not _11742 + _11741 + 1:
                    _14753 = mem[_6564]
                    idx = 0
                    s = 0
                    while idx < _14753:
                        if idx >= mem[_6564]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12307]:
                            revert with 'NH{q', 50
                        mem[s + _12307 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14753 = mem[_6564]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14753 == -1:
                        revert with 'NH{q', 17
                    if _14753 >= mem[_12307]:
                        revert with 'NH{q', 50
                    mem[_14753 + _12307 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19517 = mem[_7936]
                    idx = 0
                    s = _14753 + 1
                    while idx < _19517:
                        if idx >= mem[_7936]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12307]:
                            revert with 'NH{q', 50
                        mem[s + _12307 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19517 = mem[_7936]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20273 = mem[_12307]
                    mem[mem[64] + 36] = mem[_12307]
                    mem[mem[64] + 68 len ceil32(_20273)] = mem[_12307 + 32 len ceil32(_20273)]
                    var155001 = ceil32(_20273)
                    if ceil32(_20273) > _20273:
                        mem[mem[64] + _20273 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20273) + 32]
                mem[_12307 + 32 len _11742 + _11741 + 1] = call.data[calldata.size len _11742 + _11741 + 1]
                _14754 = mem[_6564]
                idx = 0
                s = 0
                while idx < _14754:
                    if idx >= mem[_6564]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12307]:
                        revert with 'NH{q', 50
                    mem[s + _12307 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6564')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14754 = mem[_6564]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14754 == -1:
                    revert with 'NH{q', 17
                if _14754 >= mem[_12307]:
                    revert with 'NH{q', 50
                mem[_14754 + _12307 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19518 = mem[_7936]
                idx = 0
                s = _14754 + 1
                while idx < _19518:
                    if idx >= mem[_7936]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12307]:
                        revert with 'NH{q', 50
                    mem[s + _12307 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7936')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19518 = mem[_7936]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6226 > _3531:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20274 = mem[_12307]
                mem[mem[64] + 36] = mem[_12307]
                mem[mem[64] + 68 len ceil32(_20274)] = mem[_12307 + 32 len ceil32(_20274)]
                var156001 = ceil32(_20274)
                if ceil32(_20274) > _20274:
                    mem[mem[64] + _20274 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20274) + 32]
            s = 0
            idx = _6226 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _7935 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6226 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7935]:
                        revert with 'NH{q', 50
                    mem[t + _7935 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11737 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11737] = 26
                mem[_11737 + 32] = 'SafeMath: division by zero'
                if not _3531 / 10^18:
                    _12477 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12477] = 1
                    mem[_12477 + 32] = '0'
                    _12690 = mem[_7935]
                    if mem[_7935] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7935] + 1):
                        revert with 'NH{q', 17
                    if mem[_7935] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13323 = mem[64]
                    mem[mem[64]] = mem[_7935] + 2
                    mem[64] = mem[64] + floor32(_12690 + 33) + 32
                    if not _12690 + 2:
                        _14747 = mem[_7935]
                        idx = 0
                        s = 0
                        while idx < _14747:
                            if idx >= mem[_7935]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13323]:
                                revert with 'NH{q', 50
                            mem[s + _13323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14747 = mem[_7935]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14747 == -1:
                            revert with 'NH{q', 17
                        if _14747 >= mem[_13323]:
                            revert with 'NH{q', 50
                        mem[_14747 + _13323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19511 = mem[_12477]
                        idx = 0
                        s = _14747 + 1
                        while idx < _19511:
                            if idx >= mem[_12477]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13323]:
                                revert with 'NH{q', 50
                            mem[s + _13323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12477')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19511 = mem[_12477]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6226 > _3531:
                        _19991 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20267 = mem[_13323]
                        mem[mem[64] + 36] = mem[_13323]
                        mem[mem[64] + 68 len ceil32(_20267)] = mem[_13323 + 32 len ceil32(_20267)]
                        var154001 = ceil32(_20267)
                        if ceil32(_20267) <= _20267:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20267) + 32]
                        mem[mem[64] + _20267 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20267) + _19991 + -mem[64] + 68
                    mem[_13323 + 32 len _12690 + 2] = call.data[calldata.size len _12690 + 2]
                    _14748 = mem[_7935]
                    idx = 0
                    s = 0
                    while idx < _14748:
                        if idx >= mem[_7935]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13323]:
                            revert with 'NH{q', 50
                        mem[s + _13323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14748 = mem[_7935]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14748 == -1:
                        revert with 'NH{q', 17
                    if _14748 >= mem[_13323]:
                        revert with 'NH{q', 50
                    mem[_14748 + _13323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19512 = mem[_12477]
                    idx = 0
                    s = _14748 + 1
                    while idx < _19512:
                        if idx >= mem[_12477]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13323]:
                            revert with 'NH{q', 50
                        mem[s + _13323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12477')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12477')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19512 = mem[_12477]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20268 = mem[_13323]
                    mem[mem[64] + 36] = mem[_13323]
                    mem[mem[64] + 68 len ceil32(_20268)] = mem[_13323 + 32 len ceil32(_20268)]
                    var155001 = ceil32(_20268)
                    if ceil32(_20268) > _20268:
                        mem[mem[64] + _20268 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20268) + 32]
                s = 0
                idx = _3531 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15133 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3531 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15133]:
                            revert with 'NH{q', 50
                        mem[t + _15133 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _19987 = mem[_15133]
                    _19988 = mem[_7935]
                    if mem[_7935] > !mem[_15133]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7935] + mem[_15133]):
                        revert with 'NH{q', 17
                    if mem[_7935] + mem[_15133] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21039 = mem[64]
                    mem[mem[64]] = mem[_7935] + mem[_15133] + 1
                    mem[64] = mem[64] + floor32(_19988 + _19987 + 32) + 32
                    if not _19988 + _19987 + 1:
                        _23235 = mem[_7935]
                        idx = 0
                        s = 0
                        while idx < _23235:
                            if idx >= mem[_7935]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21039]:
                                revert with 'NH{q', 50
                            mem[s + _21039 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23235 = mem[_7935]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23235 == -1:
                            revert with 'NH{q', 17
                        if _23235 >= mem[_21039]:
                            revert with 'NH{q', 50
                        mem[_23235 + _21039 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26499 = mem[_15133]
                        idx = 0
                        s = _23235 + 1
                        while idx < _26499:
                            if idx >= mem[_15133]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21039]:
                                revert with 'NH{q', 50
                            mem[s + _21039 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26499 = mem[_15133]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6226 > _3531:
                        _26931 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27123 = mem[_21039]
                        mem[mem[64] + 36] = mem[_21039]
                        mem[mem[64] + 68 len ceil32(_27123)] = mem[_21039 + 32 len ceil32(_27123)]
                        var162001 = ceil32(_27123)
                        if ceil32(_27123) <= _27123:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27123) + 32]
                        mem[mem[64] + _27123 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27123) + _26931 + -mem[64] + 68
                    mem[_21039 + 32 len _19988 + _19987 + 1] = call.data[calldata.size len _19988 + _19987 + 1]
                    _23236 = mem[_7935]
                    idx = 0
                    s = 0
                    while idx < _23236:
                        if idx >= mem[_7935]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21039]:
                            revert with 'NH{q', 50
                        mem[s + _21039 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23236 = mem[_7935]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23236 == -1:
                        revert with 'NH{q', 17
                    if _23236 >= mem[_21039]:
                        revert with 'NH{q', 50
                    mem[_23236 + _21039 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26500 = mem[_15133]
                    idx = 0
                    s = _23236 + 1
                    while idx < _26500:
                        if idx >= mem[_15133]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21039]:
                            revert with 'NH{q', 50
                        mem[s + _21039 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26500 = mem[_15133]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    _26932 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27124 = mem[_21039]
                    mem[mem[64] + 36] = mem[_21039]
                    mem[mem[64] + 68 len ceil32(_27124)] = mem[_21039 + 32 len ceil32(_27124)]
                    var163001 = ceil32(_27124)
                    if ceil32(_27124) <= _27124:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27124) + 32]
                    mem[mem[64] + _27124 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27124) + _26932 + -mem[64] + 68
                mem[_15133 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3531 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15133]:
                        revert with 'NH{q', 50
                    mem[t + _15133 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _19989 = mem[_15133]
                _19990 = mem[_7935]
                if mem[_7935] > !mem[_15133]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7935] + mem[_15133]):
                    revert with 'NH{q', 17
                if mem[_7935] + mem[_15133] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21041 = mem[64]
                mem[mem[64]] = mem[_7935] + mem[_15133] + 1
                mem[64] = mem[64] + floor32(_19990 + _19989 + 32) + 32
                if not _19990 + _19989 + 1:
                    _23237 = mem[_7935]
                    idx = 0
                    s = 0
                    while idx < _23237:
                        if idx >= mem[_7935]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21041]:
                            revert with 'NH{q', 50
                        mem[s + _21041 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23237 = mem[_7935]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23237 == -1:
                        revert with 'NH{q', 17
                    if _23237 >= mem[_21041]:
                        revert with 'NH{q', 50
                    mem[_23237 + _21041 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26501 = mem[_15133]
                    idx = 0
                    s = _23237 + 1
                    while idx < _26501:
                        if idx >= mem[_15133]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21041]:
                            revert with 'NH{q', 50
                        mem[s + _21041 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26501 = mem[_15133]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    _26933 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27125 = mem[_21041]
                    mem[mem[64] + 36] = mem[_21041]
                    mem[mem[64] + 68 len ceil32(_27125)] = mem[_21041 + 32 len ceil32(_27125)]
                    var163001 = ceil32(_27125)
                    if ceil32(_27125) <= _27125:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27125) + 32]
                    mem[mem[64] + _27125 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27125) + _26933 + -mem[64] + 68
                mem[_21041 + 32 len _19990 + _19989 + 1] = call.data[calldata.size len _19990 + _19989 + 1]
                _23238 = mem[_7935]
                idx = 0
                s = 0
                while idx < _23238:
                    if idx >= mem[_7935]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21041]:
                        revert with 'NH{q', 50
                    mem[s + _21041 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23238 = mem[_7935]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23238 == -1:
                    revert with 'NH{q', 17
                if _23238 >= mem[_21041]:
                    revert with 'NH{q', 50
                mem[_23238 + _21041 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26502 = mem[_15133]
                idx = 0
                s = _23238 + 1
                while idx < _26502:
                    if idx >= mem[_15133]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21041]:
                        revert with 'NH{q', 50
                    mem[s + _21041 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15133')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26502 = mem[_15133]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6226 > _3531:
                _26934 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27126 = mem[_21041]
                mem[mem[64] + 36] = mem[_21041]
                mem[mem[64] + 68 len ceil32(_27126)] = mem[_21041 + 32 len ceil32(_27126)]
                var164001 = ceil32(_27126)
                if ceil32(_27126) <= _27126:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27126) + 32]
                mem[mem[64] + _27126 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27126) + _26934 + -mem[64] + 68
            mem[_7935 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6226 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_7935]:
                    revert with 'NH{q', 50
                mem[t + _7935 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11738 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11738] = 26
            mem[_11738 + 32] = 'SafeMath: division by zero'
            if not _3531 / 10^18:
                _12478 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12478] = 1
                mem[_12478 + 32] = '0'
                _12692 = mem[_7935]
                if mem[_7935] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7935] + 1):
                    revert with 'NH{q', 17
                if mem[_7935] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13324 = mem[64]
                mem[mem[64]] = mem[_7935] + 2
                mem[64] = mem[64] + floor32(_12692 + 33) + 32
                if not _12692 + 2:
                    _14749 = mem[_7935]
                    idx = 0
                    s = 0
                    while idx < _14749:
                        if idx >= mem[_7935]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13324]:
                            revert with 'NH{q', 50
                        mem[s + _13324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14749 = mem[_7935]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14749 == -1:
                        revert with 'NH{q', 17
                    if _14749 >= mem[_13324]:
                        revert with 'NH{q', 50
                    mem[_14749 + _13324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19513 = mem[_12478]
                    idx = 0
                    s = _14749 + 1
                    while idx < _19513:
                        if idx >= mem[_12478]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13324]:
                            revert with 'NH{q', 50
                        mem[s + _13324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12478')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12478')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19513 = mem[_12478]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    _19997 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20269 = mem[_13324]
                    mem[mem[64] + 36] = mem[_13324]
                    mem[mem[64] + 68 len ceil32(_20269)] = mem[_13324 + 32 len ceil32(_20269)]
                    var155001 = ceil32(_20269)
                    if ceil32(_20269) <= _20269:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20269) + 32]
                    mem[mem[64] + _20269 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20269) + _19997 + -mem[64] + 68
                mem[_13324 + 32 len _12692 + 2] = call.data[calldata.size len _12692 + 2]
                _14750 = mem[_7935]
                idx = 0
                s = 0
                while idx < _14750:
                    if idx >= mem[_7935]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13324]:
                        revert with 'NH{q', 50
                    mem[s + _13324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14750 = mem[_7935]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14750 == -1:
                    revert with 'NH{q', 17
                if _14750 >= mem[_13324]:
                    revert with 'NH{q', 50
                mem[_14750 + _13324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19514 = mem[_12478]
                idx = 0
                s = _14750 + 1
                while idx < _19514:
                    if idx >= mem[_12478]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13324]:
                        revert with 'NH{q', 50
                    mem[s + _13324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12478')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12478')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19514 = mem[_12478]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6226 > _3531:
                _19998 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20270 = mem[_13324]
                mem[mem[64] + 36] = mem[_13324]
                mem[mem[64] + 68 len ceil32(_20270)] = mem[_13324 + 32 len ceil32(_20270)]
                var156001 = ceil32(_20270)
                if ceil32(_20270) <= _20270:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20270) + 32]
                mem[mem[64] + _20270 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20270) + _19998 + -mem[64] + 68
            s = 0
            idx = _3531 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15136 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3531 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15136]:
                        revert with 'NH{q', 50
                    mem[t + _15136 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _19993 = mem[_15136]
                _19994 = mem[_7935]
                if mem[_7935] > !mem[_15136]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7935] + mem[_15136]):
                    revert with 'NH{q', 17
                if mem[_7935] + mem[_15136] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21043 = mem[64]
                mem[mem[64]] = mem[_7935] + mem[_15136] + 1
                mem[64] = mem[64] + floor32(_19994 + _19993 + 32) + 32
                if not _19994 + _19993 + 1:
                    _23239 = mem[_7935]
                    idx = 0
                    s = 0
                    while idx < _23239:
                        if idx >= mem[_7935]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21043]:
                            revert with 'NH{q', 50
                        mem[s + _21043 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23239 = mem[_7935]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23239 == -1:
                        revert with 'NH{q', 17
                    if _23239 >= mem[_21043]:
                        revert with 'NH{q', 50
                    mem[_23239 + _21043 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26503 = mem[_15136]
                    idx = 0
                    s = _23239 + 1
                    while idx < _26503:
                        if idx >= mem[_15136]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21043]:
                            revert with 'NH{q', 50
                        mem[s + _21043 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26503 = mem[_15136]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6226 > _3531:
                    _26935 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27127 = mem[_21043]
                    mem[mem[64] + 36] = mem[_21043]
                    mem[mem[64] + 68 len ceil32(_27127)] = mem[_21043 + 32 len ceil32(_27127)]
                    var163001 = ceil32(_27127)
                    if ceil32(_27127) <= _27127:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27127) + 32]
                    mem[mem[64] + _27127 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27127) + _26935 + -mem[64] + 68
                mem[_21043 + 32 len _19994 + _19993 + 1] = call.data[calldata.size len _19994 + _19993 + 1]
                _23240 = mem[_7935]
                idx = 0
                s = 0
                while idx < _23240:
                    if idx >= mem[_7935]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21043]:
                        revert with 'NH{q', 50
                    mem[s + _21043 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23240 = mem[_7935]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23240 == -1:
                    revert with 'NH{q', 17
                if _23240 >= mem[_21043]:
                    revert with 'NH{q', 50
                mem[_23240 + _21043 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26504 = mem[_15136]
                idx = 0
                s = _23240 + 1
                while idx < _26504:
                    if idx >= mem[_15136]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21043]:
                        revert with 'NH{q', 50
                    mem[s + _21043 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26504 = mem[_15136]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6226 > _3531:
                _26936 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27128 = mem[_21043]
                mem[mem[64] + 36] = mem[_21043]
                mem[mem[64] + 68 len ceil32(_27128)] = mem[_21043 + 32 len ceil32(_27128)]
                var164001 = ceil32(_27128)
                if ceil32(_27128) <= _27128:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27128) + 32]
                mem[mem[64] + _27128 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27128) + _26936 + -mem[64] + 68
            mem[_15136 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3531 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15136]:
                    revert with 'NH{q', 50
                mem[t + _15136 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _19995 = mem[_15136]
            _19996 = mem[_7935]
            if mem[_7935] > !mem[_15136]:
                revert with 'NH{q', 17
            if 1 > !(mem[_7935] + mem[_15136]):
                revert with 'NH{q', 17
            if mem[_7935] + mem[_15136] + 1 > test266151307():
                revert with 'NH{q', 65
            _21045 = mem[64]
            mem[mem[64]] = mem[_7935] + mem[_15136] + 1
            mem[64] = mem[64] + floor32(_19996 + _19995 + 32) + 32
            if not _19996 + _19995 + 1:
                _23241 = mem[_7935]
                idx = 0
                s = 0
                while idx < _23241:
                    if idx >= mem[_7935]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21045]:
                        revert with 'NH{q', 50
                    mem[s + _21045 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23241 = mem[_7935]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23241 == -1:
                    revert with 'NH{q', 17
                if _23241 >= mem[_21045]:
                    revert with 'NH{q', 50
                mem[_23241 + _21045 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26505 = mem[_15136]
                idx = 0
                s = _23241 + 1
                while idx < _26505:
                    if idx >= mem[_15136]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21045]:
                        revert with 'NH{q', 50
                    mem[s + _21045 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26505 = mem[_15136]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6226 > _3531:
                _26937 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27129 = mem[_21045]
                mem[mem[64] + 36] = mem[_21045]
                mem[mem[64] + 68 len ceil32(_27129)] = mem[_21045 + 32 len ceil32(_27129)]
                var164001 = ceil32(_27129)
                if ceil32(_27129) <= _27129:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27129) + 32]
                mem[mem[64] + _27129 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27129) + _26937 + -mem[64] + 68
            mem[_21045 + 32 len _19996 + _19995 + 1] = call.data[calldata.size len _19996 + _19995 + 1]
            _23242 = mem[_7935]
            idx = 0
            s = 0
            while idx < _23242:
                if idx >= mem[_7935]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21045]:
                    revert with 'NH{q', 50
                mem[s + _21045 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7935')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23242 = mem[_7935]
                idx = idx + 1
                s = s + 1
                continue 
            if _23242 == -1:
                revert with 'NH{q', 17
            if _23242 >= mem[_21045]:
                revert with 'NH{q', 50
            mem[_23242 + _21045 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26506 = mem[_15136]
            idx = 0
            s = _23242 + 1
            while idx < _26506:
                if idx >= mem[_15136]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21045]:
                    revert with 'NH{q', 50
                mem[s + _21045 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15136')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26506 = mem[_15136]
                idx = idx + 1
                s = s + 1
                continue 
            if _6226 > _3531:
            _26938 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27130 = mem[_21045]
            mem[mem[64] + 36] = mem[_21045]
            mem[mem[64] + 68 len ceil32(_27130)] = mem[_21045 + 32 len ceil32(_27130)]
            var165001 = ceil32(_27130)
            if ceil32(_27130) <= _27130:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27130) + 32]
            mem[mem[64] + _27130 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27130) + _26938 + -mem[64] + 68
        mem[0] = 10
        mem[_3451 + 32] = address(stor10.field_0)
        idx = _3451 + 32
        s = 0
        while _3451 + (32 * stor10.length) > idx:
            mem[idx + 32] = stor10[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6081 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6165 = mem[_6081]
        if 0 >= stor10.length:
            revert with 'NH{q', 50
        _6211 = mem[_3451 + 32]
        if 1 >= stor10.length:
            revert with 'NH{q', 50
        if 0 >= stor10.length:
            revert with 'NH{q', 50
        mem[_3451 + 32] = mem[_3451 + 76 len 20]
        if 1 >= stor10.length:
            revert with 'NH{q', 50
        mem[_3451 + 64] = address(_6211)
        _6285 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _6331 = mem[_2767]
        mem[mem[64] + 164] = mem[_2767]
        idx = 0
        s = mem[64] + 196
        t = _2767 + 32
        while idx < _6331:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_6285 + 100] = this.address
        mem[_6285 + 132] = test266151307()
        require ext_code.size(sub_16a84344Address)
        call sub_16a84344Address.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _6285 + (32 * _6331) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(tokenAddr)
        staticcall tokenAddr.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8227 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8447 = mem[_8227]
        _8575 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _8447
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _8653 = mem[_3451]
        mem[mem[64] + 164] = mem[_3451]
        idx = 0
        s = mem[64] + 196
        t = _3451 + 32
        while idx < _8653:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_8575 + 100] = this.address
        mem[_8575 + 132] = test266151307()
        require ext_code.size(sub_2354c7aeAddress)
        call sub_2354c7aeAddress.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _8575 + (32 * _8653) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _12073 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _12151 = mem[_12073]
        _12309 = mem[64]
        mem[64] = mem[64] + 64
        mem[_12309] = 26
        mem[_12309 + 32] = 'SafeMath: division by zero'
        if not _12151 / 10^18:
            _13127 = mem[64]
            mem[64] = mem[64] + 64
            mem[_13127] = 1
            mem[_13127 + 32] = '0'
            _13329 = mem[64]
            mem[64] = mem[64] + 64
            mem[_13329] = 26
            mem[_13329 + 32] = 'SafeMath: division by zero'
            if not _6165 / 10^18:
                _14187 = mem[64]
                mem[64] = mem[64] + 64
                mem[_14187] = 1
                mem[_14187 + 32] = '0'
                _14557 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 64
                mem[_14557 + 32 len 3] = call.data[calldata.size len 3]
                idx = 0
                s = 0
                while idx < 1:
                    if idx >= mem[_13127]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_14557]:
                        revert with 'NH{q', 50
                    mem[s + _14557 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                if 1 >= mem[_14557]:
                    revert with 'NH{q', 50
                mem[_14557 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19520 = mem[_14187]
                idx = 0
                s = 2
                while idx < _19520:
                    if idx >= mem[_14187]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_14557]:
                        revert with 'NH{q', 50
                    mem[s + _14557 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14187')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14187')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19520 = mem[_14187]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _20010 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20276 = mem[_14557]
                mem[mem[64] + 36] = mem[_14557]
                mem[mem[64] + 68 len ceil32(_20276)] = mem[_14557 + 32 len ceil32(_20276)]
                var151001 = ceil32(_20276)
                if ceil32(_20276) <= _20276:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20276) + 32]
                mem[mem[64] + _20276 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20276) + _20010 + -mem[64] + 68
            s = 0
            idx = _6165 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15144 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6165 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15144]:
                        revert with 'NH{q', 50
                    mem[t + _15144 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20005 = mem[_15144]
                _20006 = mem[_13127]
                if mem[_13127] > !mem[_15144]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_13127] + mem[_15144]):
                    revert with 'NH{q', 17
                if mem[_13127] + mem[_15144] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21049 = mem[64]
                mem[mem[64]] = mem[_13127] + mem[_15144] + 1
                mem[64] = mem[64] + floor32(_20006 + _20005 + 32) + 32
                if not _20006 + _20005 + 1:
                    _23247 = mem[_13127]
                    idx = 0
                    s = 0
                    while idx < _23247:
                        if idx >= mem[_13127]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21049]:
                            revert with 'NH{q', 50
                        mem[s + _21049 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23247 = mem[_13127]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23247 == -1:
                        revert with 'NH{q', 17
                    if _23247 >= mem[_21049]:
                        revert with 'NH{q', 50
                    mem[_23247 + _21049 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26511 = mem[_15144]
                    idx = 0
                    s = _23247 + 1
                    while idx < _26511:
                        if idx >= mem[_15144]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21049]:
                            revert with 'NH{q', 50
                        mem[s + _21049 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26511 = mem[_15144]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12151 > _6165:
                    _26951 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27135 = mem[_21049]
                    mem[mem[64] + 36] = mem[_21049]
                    mem[mem[64] + 68 len ceil32(_27135)] = mem[_21049 + 32 len ceil32(_27135)]
                    var158001 = ceil32(_27135)
                    if ceil32(_27135) <= _27135:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27135) + 32]
                    mem[mem[64] + _27135 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27135) + _26951 + -mem[64] + 68
                mem[_21049 + 32 len _20006 + _20005 + 1] = call.data[calldata.size len _20006 + _20005 + 1]
                _23248 = mem[_13127]
                idx = 0
                s = 0
                while idx < _23248:
                    if idx >= mem[_13127]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21049]:
                        revert with 'NH{q', 50
                    mem[s + _21049 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23248 = mem[_13127]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23248 == -1:
                    revert with 'NH{q', 17
                if _23248 >= mem[_21049]:
                    revert with 'NH{q', 50
                mem[_23248 + _21049 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26512 = mem[_15144]
                idx = 0
                s = _23248 + 1
                while idx < _26512:
                    if idx >= mem[_15144]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21049]:
                        revert with 'NH{q', 50
                    mem[s + _21049 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26512 = mem[_15144]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _26952 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27136 = mem[_21049]
                mem[mem[64] + 36] = mem[_21049]
                mem[mem[64] + 68 len ceil32(_27136)] = mem[_21049 + 32 len ceil32(_27136)]
                var159001 = ceil32(_27136)
                if ceil32(_27136) <= _27136:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27136) + 32]
                mem[mem[64] + _27136 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27136) + _26952 + -mem[64] + 68
            mem[_15144 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6165 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15144]:
                    revert with 'NH{q', 50
                mem[t + _15144 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20007 = mem[_15144]
            _20008 = mem[_13127]
            if mem[_13127] > !mem[_15144]:
                revert with 'NH{q', 17
            if 1 > !(mem[_13127] + mem[_15144]):
                revert with 'NH{q', 17
            if mem[_13127] + mem[_15144] + 1 > test266151307():
                revert with 'NH{q', 65
            _21051 = mem[64]
            mem[mem[64]] = mem[_13127] + mem[_15144] + 1
            mem[64] = mem[64] + floor32(_20008 + _20007 + 32) + 32
            if not _20008 + _20007 + 1:
                _23249 = mem[_13127]
                idx = 0
                s = 0
                while idx < _23249:
                    if idx >= mem[_13127]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21051]:
                        revert with 'NH{q', 50
                    mem[s + _21051 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23249 = mem[_13127]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23249 == -1:
                    revert with 'NH{q', 17
                if _23249 >= mem[_21051]:
                    revert with 'NH{q', 50
                mem[_23249 + _21051 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26513 = mem[_15144]
                idx = 0
                s = _23249 + 1
                while idx < _26513:
                    if idx >= mem[_15144]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21051]:
                        revert with 'NH{q', 50
                    mem[s + _21051 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26513 = mem[_15144]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _26953 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27137 = mem[_21051]
                mem[mem[64] + 36] = mem[_21051]
                mem[mem[64] + 68 len ceil32(_27137)] = mem[_21051 + 32 len ceil32(_27137)]
                var159001 = ceil32(_27137)
                if ceil32(_27137) <= _27137:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27137) + 32]
                mem[mem[64] + _27137 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27137) + _26953 + -mem[64] + 68
            mem[_21051 + 32 len _20008 + _20007 + 1] = call.data[calldata.size len _20008 + _20007 + 1]
            _23250 = mem[_13127]
            idx = 0
            s = 0
            while idx < _23250:
                if idx >= mem[_13127]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21051]:
                    revert with 'NH{q', 50
                mem[s + _21051 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13127')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23250 = mem[_13127]
                idx = idx + 1
                s = s + 1
                continue 
            if _23250 == -1:
                revert with 'NH{q', 17
            if _23250 >= mem[_21051]:
                revert with 'NH{q', 50
            mem[_23250 + _21051 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26514 = mem[_15144]
            idx = 0
            s = _23250 + 1
            while idx < _26514:
                if idx >= mem[_15144]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21051]:
                    revert with 'NH{q', 50
                mem[s + _21051 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15144')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26514 = mem[_15144]
                idx = idx + 1
                s = s + 1
                continue 
            if _12151 > _6165:
            _26954 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27138 = mem[_21051]
            mem[mem[64] + 36] = mem[_21051]
            mem[mem[64] + 68 len ceil32(_27138)] = mem[_21051 + 32 len ceil32(_27138)]
            var160001 = ceil32(_27138)
            if ceil32(_27138) <= _27138:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27138) + 32]
            mem[mem[64] + _27138 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27138) + _26954 + -mem[64] + 68
        s = 0
        idx = _12151 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _15143 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _12151 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15143]:
                    revert with 'NH{q', 50
                mem[t + _15143 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20003 = mem[64]
            mem[64] = mem[64] + 64
            mem[_20003] = 26
            mem[_20003 + 32] = 'SafeMath: division by zero'
            if not _6165 / 10^18:
                _21239 = mem[64]
                mem[64] = mem[64] + 64
                mem[_21239] = 1
                mem[_21239 + 32] = '0'
                _21484 = mem[_15143]
                if mem[_15143] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15143] + 1):
                    revert with 'NH{q', 17
                if mem[_15143] + 2 > test266151307():
                    revert with 'NH{q', 65
                _22235 = mem[64]
                mem[mem[64]] = mem[_15143] + 2
                mem[64] = mem[64] + floor32(_21484 + 33) + 32
                if not _21484 + 2:
                    _23243 = mem[_15143]
                    idx = 0
                    s = 0
                    while idx < _23243:
                        if idx >= mem[_15143]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22235]:
                            revert with 'NH{q', 50
                        mem[s + _22235 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23243 = mem[_15143]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23243 == -1:
                        revert with 'NH{q', 17
                    if _23243 >= mem[_22235]:
                        revert with 'NH{q', 50
                    mem[_23243 + _22235 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26507 = mem[_21239]
                    idx = 0
                    s = _23243 + 1
                    while idx < _26507:
                        if idx >= mem[_21239]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22235]:
                            revert with 'NH{q', 50
                        mem[s + _22235 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21239')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26507 = mem[_21239]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12151 > _6165:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27131 = mem[_22235]
                    mem[mem[64] + 36] = mem[_22235]
                    mem[mem[64] + 68 len ceil32(_27131)] = mem[_22235 + 32 len ceil32(_27131)]
                    var158001 = ceil32(_27131)
                    if ceil32(_27131) > _27131:
                        mem[mem[64] + _27131 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27131) + 32]
                mem[_22235 + 32 len _21484 + 2] = call.data[calldata.size len _21484 + 2]
                _23244 = mem[_15143]
                idx = 0
                s = 0
                while idx < _23244:
                    if idx >= mem[_15143]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22235]:
                        revert with 'NH{q', 50
                    mem[s + _22235 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23244 = mem[_15143]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23244 == -1:
                    revert with 'NH{q', 17
                if _23244 >= mem[_22235]:
                    revert with 'NH{q', 50
                mem[_23244 + _22235 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26508 = mem[_21239]
                idx = 0
                s = _23244 + 1
                while idx < _26508:
                    if idx >= mem[_21239]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22235]:
                        revert with 'NH{q', 50
                    mem[s + _22235 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21239')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26508 = mem[_21239]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _26944 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27132 = mem[_22235]
                mem[mem[64] + 36] = mem[_22235]
                mem[mem[64] + 68 len ceil32(_27132)] = mem[_22235 + 32 len ceil32(_27132)]
                var159001 = ceil32(_27132)
                if ceil32(_27132) <= _27132:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27132) + 32]
                mem[mem[64] + _27132 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27132) + _26944 + -mem[64] + 68
            s = 0
            idx = _6165 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _23687 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6165 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23687]:
                        revert with 'NH{q', 50
                    mem[t + _23687 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _26939 = mem[_23687]
                _26940 = mem[_15143]
                if mem[_15143] > !mem[_23687]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15143] + mem[_23687]):
                    revert with 'NH{q', 17
                if mem[_15143] + mem[_23687] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27835 = mem[64]
                mem[mem[64]] = mem[_15143] + mem[_23687] + 1
                mem[64] = mem[64] + floor32(_26940 + _26939 + 32) + 32
                if not _26940 + _26939 + 1:
                    _28555 = mem[_15143]
                    idx = 0
                    s = 0
                    while idx < _28555:
                        if idx >= mem[_15143]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27835]:
                            revert with 'NH{q', 50
                        mem[s + _27835 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28555 = mem[_15143]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28555 == -1:
                        revert with 'NH{q', 17
                    if _28555 >= mem[_27835]:
                        revert with 'NH{q', 50
                    mem[_28555 + _27835 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29659 = mem[_23687]
                    idx = 0
                    s = _28555 + 1
                    while idx < _29659:
                        if idx >= mem[_23687]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27835]:
                            revert with 'NH{q', 50
                        mem[s + _27835 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29659 = mem[_23687]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12151 > _6165:
                    _29803 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29851 = mem[_27835]
                    mem[mem[64] + 36] = mem[_27835]
                    mem[mem[64] + 68 len ceil32(_29851)] = mem[_27835 + 32 len ceil32(_29851)]
                    var166001 = ceil32(_29851)
                    if ceil32(_29851) <= _29851:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29851) + 32]
                    mem[mem[64] + _29851 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29851) + _29803 + -mem[64] + 68
                mem[_27835 + 32 len _26940 + _26939 + 1] = call.data[calldata.size len _26940 + _26939 + 1]
                _28556 = mem[_15143]
                idx = 0
                s = 0
                while idx < _28556:
                    if idx >= mem[_15143]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27835]:
                        revert with 'NH{q', 50
                    mem[s + _27835 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28556 = mem[_15143]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28556 == -1:
                    revert with 'NH{q', 17
                if _28556 >= mem[_27835]:
                    revert with 'NH{q', 50
                mem[_28556 + _27835 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29660 = mem[_23687]
                idx = 0
                s = _28556 + 1
                while idx < _29660:
                    if idx >= mem[_23687]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27835]:
                        revert with 'NH{q', 50
                    mem[s + _27835 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29660 = mem[_23687]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _29804 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29852 = mem[_27835]
                mem[mem[64] + 36] = mem[_27835]
                mem[mem[64] + 68 len ceil32(_29852)] = mem[_27835 + 32 len ceil32(_29852)]
                var167001 = ceil32(_29852)
                if ceil32(_29852) <= _29852:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29852) + 32]
                mem[mem[64] + _29852 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29852) + _29804 + -mem[64] + 68
            mem[_23687 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6165 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23687]:
                    revert with 'NH{q', 50
                mem[t + _23687 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _26941 = mem[_23687]
            _26942 = mem[_15143]
            if mem[_15143] > !mem[_23687]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15143] + mem[_23687]):
                revert with 'NH{q', 17
            if mem[_15143] + mem[_23687] + 1 > test266151307():
                revert with 'NH{q', 65
            _27837 = mem[64]
            mem[mem[64]] = mem[_15143] + mem[_23687] + 1
            mem[64] = mem[64] + floor32(_26942 + _26941 + 32) + 32
            if not _26942 + _26941 + 1:
                _28557 = mem[_15143]
                idx = 0
                s = 0
                while idx < _28557:
                    if idx >= mem[_15143]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27837]:
                        revert with 'NH{q', 50
                    mem[s + _27837 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28557 = mem[_15143]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28557 == -1:
                    revert with 'NH{q', 17
                if _28557 >= mem[_27837]:
                    revert with 'NH{q', 50
                mem[_28557 + _27837 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29661 = mem[_23687]
                idx = 0
                s = _28557 + 1
                while idx < _29661:
                    if idx >= mem[_23687]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27837]:
                        revert with 'NH{q', 50
                    mem[s + _27837 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29661 = mem[_23687]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _29805 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29853 = mem[_27837]
                mem[mem[64] + 36] = mem[_27837]
                mem[mem[64] + 68 len ceil32(_29853)] = mem[_27837 + 32 len ceil32(_29853)]
                var167001 = ceil32(_29853)
                if ceil32(_29853) <= _29853:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29853) + 32]
                mem[mem[64] + _29853 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29853) + _29805 + -mem[64] + 68
            mem[_27837 + 32 len _26942 + _26941 + 1] = call.data[calldata.size len _26942 + _26941 + 1]
            _28558 = mem[_15143]
            idx = 0
            s = 0
            while idx < _28558:
                if idx >= mem[_15143]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27837]:
                    revert with 'NH{q', 50
                mem[s + _27837 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28558 = mem[_15143]
                idx = idx + 1
                s = s + 1
                continue 
            if _28558 == -1:
                revert with 'NH{q', 17
            if _28558 >= mem[_27837]:
                revert with 'NH{q', 50
            mem[_28558 + _27837 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29662 = mem[_23687]
            idx = 0
            s = _28558 + 1
            while idx < _29662:
                if idx >= mem[_23687]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27837]:
                    revert with 'NH{q', 50
                mem[s + _27837 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23687')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29662 = mem[_23687]
                idx = idx + 1
                s = s + 1
                continue 
            if _12151 > _6165:
            _29806 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29854 = mem[_27837]
            mem[mem[64] + 36] = mem[_27837]
            mem[mem[64] + 68 len ceil32(_29854)] = mem[_27837 + 32 len ceil32(_29854)]
            var168001 = ceil32(_29854)
            if ceil32(_29854) <= _29854:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29854) + 32]
            mem[mem[64] + _29854 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29854) + _29806 + -mem[64] + 68
        mem[_15143 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _12151 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15143]:
                revert with 'NH{q', 50
            mem[t + _15143 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20004 = mem[64]
        mem[64] = mem[64] + 64
        mem[_20004] = 26
        mem[_20004 + 32] = 'SafeMath: division by zero'
        if not _6165 / 10^18:
            _21240 = mem[64]
            mem[64] = mem[64] + 64
            mem[_21240] = 1
            mem[_21240 + 32] = '0'
            _21486 = mem[_15143]
            if mem[_15143] > !1:
                revert with 'NH{q', 17
            if 1 > !(mem[_15143] + 1):
                revert with 'NH{q', 17
            if mem[_15143] + 2 > test266151307():
                revert with 'NH{q', 65
            _22236 = mem[64]
            mem[mem[64]] = mem[_15143] + 2
            mem[64] = mem[64] + floor32(_21486 + 33) + 32
            if not _21486 + 2:
                _23245 = mem[_15143]
                idx = 0
                s = 0
                while idx < _23245:
                    if idx >= mem[_15143]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22236]:
                        revert with 'NH{q', 50
                    mem[s + _22236 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23245 = mem[_15143]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23245 == -1:
                    revert with 'NH{q', 17
                if _23245 >= mem[_22236]:
                    revert with 'NH{q', 50
                mem[_23245 + _22236 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26509 = mem[_21240]
                idx = 0
                s = _23245 + 1
                while idx < _26509:
                    if idx >= mem[_21240]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22236]:
                        revert with 'NH{q', 50
                    mem[s + _22236 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21240')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21240')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26509 = mem[_21240]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _26949 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27133 = mem[_22236]
                mem[mem[64] + 36] = mem[_22236]
                mem[mem[64] + 68 len ceil32(_27133)] = mem[_22236 + 32 len ceil32(_27133)]
                var159001 = ceil32(_27133)
                if ceil32(_27133) <= _27133:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27133) + 32]
                mem[mem[64] + _27133 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27133) + _26949 + -mem[64] + 68
            mem[_22236 + 32 len _21486 + 2] = call.data[calldata.size len _21486 + 2]
            _23246 = mem[_15143]
            idx = 0
            s = 0
            while idx < _23246:
                if idx >= mem[_15143]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22236]:
                    revert with 'NH{q', 50
                mem[s + _22236 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23246 = mem[_15143]
                idx = idx + 1
                s = s + 1
                continue 
            if _23246 == -1:
                revert with 'NH{q', 17
            if _23246 >= mem[_22236]:
                revert with 'NH{q', 50
            mem[_23246 + _22236 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26510 = mem[_21240]
            idx = 0
            s = _23246 + 1
            while idx < _26510:
                if idx >= mem[_21240]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22236]:
                    revert with 'NH{q', 50
                mem[s + _22236 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21240')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21240')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26510 = mem[_21240]
                idx = idx + 1
                s = s + 1
                continue 
            if _12151 > _6165:
            _26950 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27134 = mem[_22236]
            mem[mem[64] + 36] = mem[_22236]
            mem[mem[64] + 68 len ceil32(_27134)] = mem[_22236 + 32 len ceil32(_27134)]
            var160001 = ceil32(_27134)
            if ceil32(_27134) <= _27134:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27134) + 32]
            mem[mem[64] + _27134 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27134) + _26950 + -mem[64] + 68
        s = 0
        idx = _6165 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _23690 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6165 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23690]:
                    revert with 'NH{q', 50
                mem[t + _23690 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _26945 = mem[_23690]
            _26946 = mem[_15143]
            if mem[_15143] > !mem[_23690]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15143] + mem[_23690]):
                revert with 'NH{q', 17
            if mem[_15143] + mem[_23690] + 1 > test266151307():
                revert with 'NH{q', 65
            _27839 = mem[64]
            mem[mem[64]] = mem[_15143] + mem[_23690] + 1
            mem[64] = mem[64] + floor32(_26946 + _26945 + 32) + 32
            if not _26946 + _26945 + 1:
                _28559 = mem[_15143]
                idx = 0
                s = 0
                while idx < _28559:
                    if idx >= mem[_15143]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27839]:
                        revert with 'NH{q', 50
                    mem[s + _27839 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28559 = mem[_15143]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28559 == -1:
                    revert with 'NH{q', 17
                if _28559 >= mem[_27839]:
                    revert with 'NH{q', 50
                mem[_28559 + _27839 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29663 = mem[_23690]
                idx = 0
                s = _28559 + 1
                while idx < _29663:
                    if idx >= mem[_23690]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27839]:
                        revert with 'NH{q', 50
                    mem[s + _27839 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29663 = mem[_23690]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12151 > _6165:
                _29807 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29855 = mem[_27839]
                mem[mem[64] + 36] = mem[_27839]
                mem[mem[64] + 68 len ceil32(_29855)] = mem[_27839 + 32 len ceil32(_29855)]
                var167001 = ceil32(_29855)
                if ceil32(_29855) <= _29855:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29855) + 32]
                mem[mem[64] + _29855 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29855) + _29807 + -mem[64] + 68
            mem[_27839 + 32 len _26946 + _26945 + 1] = call.data[calldata.size len _26946 + _26945 + 1]
            _28560 = mem[_15143]
            idx = 0
            s = 0
            while idx < _28560:
                if idx >= mem[_15143]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27839]:
                    revert with 'NH{q', 50
                mem[s + _27839 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28560 = mem[_15143]
                idx = idx + 1
                s = s + 1
                continue 
            if _28560 == -1:
                revert with 'NH{q', 17
            if _28560 >= mem[_27839]:
                revert with 'NH{q', 50
            mem[_28560 + _27839 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29664 = mem[_23690]
            idx = 0
            s = _28560 + 1
            while idx < _29664:
                if idx >= mem[_23690]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27839]:
                    revert with 'NH{q', 50
                mem[s + _27839 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29664 = mem[_23690]
                idx = idx + 1
                s = s + 1
                continue 
            if _12151 > _6165:
            _29808 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29856 = mem[_27839]
            mem[mem[64] + 36] = mem[_27839]
            mem[mem[64] + 68 len ceil32(_29856)] = mem[_27839 + 32 len ceil32(_29856)]
            var168001 = ceil32(_29856)
            if ceil32(_29856) <= _29856:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29856) + 32]
            mem[mem[64] + _29856 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29856) + _29808 + -mem[64] + 68
        mem[_23690 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6165 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_23690]:
                revert with 'NH{q', 50
            mem[t + _23690 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _26947 = mem[_23690]
        _26948 = mem[_15143]
        if mem[_15143] > !mem[_23690]:
            revert with 'NH{q', 17
        if 1 > !(mem[_15143] + mem[_23690]):
            revert with 'NH{q', 17
        if mem[_15143] + mem[_23690] + 1 > test266151307():
            revert with 'NH{q', 65
        _27841 = mem[64]
        mem[mem[64]] = mem[_15143] + mem[_23690] + 1
        mem[64] = mem[64] + floor32(_26948 + _26947 + 32) + 32
        if not _26948 + _26947 + 1:
            _28561 = mem[_15143]
            idx = 0
            s = 0
            while idx < _28561:
                if idx >= mem[_15143]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27841]:
                    revert with 'NH{q', 50
                mem[s + _27841 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28561 = mem[_15143]
                idx = idx + 1
                s = s + 1
                continue 
            if _28561 == -1:
                revert with 'NH{q', 17
            if _28561 >= mem[_27841]:
                revert with 'NH{q', 50
            mem[_28561 + _27841 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29665 = mem[_23690]
            idx = 0
            s = _28561 + 1
            while idx < _29665:
                if idx >= mem[_23690]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27841]:
                    revert with 'NH{q', 50
                mem[s + _27841 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29665 = mem[_23690]
                idx = idx + 1
                s = s + 1
                continue 
            if _12151 > _6165:
            _29809 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29857 = mem[_27841]
            mem[mem[64] + 36] = mem[_27841]
            mem[mem[64] + 68 len ceil32(_29857)] = mem[_27841 + 32 len ceil32(_29857)]
            var168001 = ceil32(_29857)
            if ceil32(_29857) <= _29857:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29857) + 32]
            mem[mem[64] + _29857 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29857) + _29809 + -mem[64] + 68
        mem[_27841 + 32 len _26948 + _26947 + 1] = call.data[calldata.size len _26948 + _26947 + 1]
        _28562 = mem[_15143]
        idx = 0
        s = 0
        while idx < _28562:
            if idx >= mem[_15143]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27841]:
                revert with 'NH{q', 50
            mem[s + _27841 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15143')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _28562 = mem[_15143]
            idx = idx + 1
            s = s + 1
            continue 
        if _28562 == -1:
            revert with 'NH{q', 17
        if _28562 >= mem[_27841]:
            revert with 'NH{q', 50
        mem[_28562 + _27841 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _29666 = mem[_23690]
        idx = 0
        s = _28562 + 1
        while idx < _29666:
            if idx >= mem[_23690]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27841]:
                revert with 'NH{q', 50
            mem[s + _27841 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23690')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _29666 = mem[_23690]
            idx = idx + 1
            s = s + 1
            continue 
        if _12151 > _6165:
        _29810 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _29858 = mem[_27841]
        mem[mem[64] + 36] = mem[_27841]
        mem[mem[64] + 68 len ceil32(_29858)] = mem[_27841 + 32 len ceil32(_29858)]
        var169001 = ceil32(_29858)
        if ceil32(_29858) <= _29858:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29858) + 32]
        mem[mem[64] + _29858 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_29858) + _29810 + -mem[64] + 68
    if msg.sender == owner:
        mem[128] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[132] = arg1
        mem[164] = 64
        mem[196] = stor10.length
        mem[0] = 10
        idx = 0
        s = 228
        t = 0
        while idx < stor10.length:
            mem[s] = stor10[t].field_0
            idx = idx + 1
            s = s + 32
            t = t + 1
            continue 
        require ext_code.size(sub_2354c7aeAddress)
        staticcall sub_2354c7aeAddress.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args arg1, Array(len=stor10.length, data=mem[228 len 32 * stor10.length])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[128 len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = ceil32(return_data.size) + 128
        require return_data.size >= 32
        _1166 = mem[128 len 4], Mask(224, 32, arg1) >> 32
        require mem[128 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
        require mem[128 len 4], Mask(224, 32, arg1) >> 32 + 159 < return_data.size + 128
        _1175 = mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]
        if mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128] > test266151307():
            revert with 'NH{q', 65
        if ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 129 > test266151307():
            revert with 'NH{q', 65
        mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 129
        mem[ceil32(return_data.size) + 128] = mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]
        require return_data.size >= _1166 + (32 * _1175) + 32
        mem[ceil32(return_data.size) + 160 len 32 * _1175] = mem[_1166 + 160 len 32 * _1175]
        if 1 >= _1175:
            revert with 'NH{q', 50
        _1883 = mem[ceil32(return_data.size) + 192]
        _1884 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 64
        mem[mem[64] + 68] = stor11.length
        mem[0] = 11
        idx = 0
        s = mem[64] + 100
        t = 0
        while idx < stor11.length:
            mem[s] = stor[t + sha3(mem[0])]
            idx = idx + 1
            s = s + 32
            t = t + 1
            continue 
        require ext_code.size(sub_16a84344Address)
        staticcall sub_16a84344Address.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _1884 + (32 * stor11.length) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2348 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2351 = mem[_2348]
        require mem[_2348] <= test266151307()
        require _2348 + mem[_2348] + 31 < _2348 + return_data.size
        _2354 = mem[_2348 + mem[_2348]]
        if mem[_2348 + mem[_2348]] > test266151307():
            revert with 'NH{q', 65
        if ceil32(32 * mem[_2348 + mem[_2348]]) + 1 < 0 or _2348 + ceil32(return_data.size) + ceil32(32 * mem[_2348 + mem[_2348]]) + 1 > test266151307():
            revert with 'NH{q', 65
        mem[64] = _2348 + ceil32(return_data.size) + ceil32(32 * mem[_2348 + mem[_2348]]) + 1
        mem[_2348 + ceil32(return_data.size)] = _2354
        require return_data.size >= _2351 + (32 * _2354) + 32
        mem[_2348 + ceil32(return_data.size) + 32 len 32 * _2354] = mem[_2348 + _2351 + 32 len 32 * _2354]
        if 1 >= _2354:
            revert with 'NH{q', 50
        if _1883 <= mem[_2348 + ceil32(return_data.size) + 64]:
            _2769 = mem[64]
            mem[64] = mem[64] + (32 * stor11.length) + 32
            mem[_2769] = stor11.length
            if not stor11.length:
                _2777 = mem[64]
                mem[64] = mem[64] + (32 * stor10.length) + 32
                mem[_2777] = stor10.length
                if not stor10.length:
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(sub_13764611Address)
                    staticcall sub_13764611Address.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2805 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2811 = mem[_2805]
                    if 0 >= stor10.length:
                        revert with 'NH{q', 50
                    _2825 = mem[_2777 + 32]
                    if 1 >= stor10.length:
                        revert with 'NH{q', 50
                    if 0 >= stor10.length:
                        revert with 'NH{q', 50
                    mem[_2777 + 32] = mem[_2777 + 76 len 20]
                    if 1 >= stor10.length:
                        revert with 'NH{q', 50
                    mem[_2777 + 64] = address(_2825)
                    _2853 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = arg1
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    mem[mem[64] + 164] = stor11.length
                    idx = 0
                    s = mem[64] + 196
                    t = _2769 + 32
                    while idx < stor11.length:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_2853 + 100] = this.address
                    mem[_2853 + 132] = test266151307()
                    require ext_code.size(sub_16a84344Address)
                    call sub_16a84344Address.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _2853 + (32 * stor11.length) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(tokenAddr)
                    staticcall tokenAddr.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3183 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3189 = mem[_3183]
                    _3195 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _3189
                    mem[mem[64] + 36] = 0
                    mem[mem[64] + 68] = 160
                    _3201 = mem[_2777]
                    mem[mem[64] + 164] = mem[_2777]
                    idx = 0
                    s = mem[64] + 196
                    t = _2777 + 32
                    while idx < _3201:
                        mem[s] = mem[t + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_3195 + 100] = this.address
                    mem[_3195 + 132] = test266151307()
                    require ext_code.size(sub_2354c7aeAddress)
                    call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _3195 + (32 * _3201) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(sub_13764611Address)
                    staticcall sub_13764611Address.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3535 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3575 = mem[_3535]
                    _3619 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3619] = 26
                    mem[_3619 + 32] = 'SafeMath: division by zero'
                    if not _3575 / 10^18:
                        _3713 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3713] = 1
                        mem[_3713 + 32] = '0'
                        _3739 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3739] = 26
                        mem[_3739 + 32] = 'SafeMath: division by zero'
                        if not _2811 / 10^18:
                            _3827 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_3827] = 1
                            mem[_3827 + 32] = '0'
                            _3861 = mem[64]
                            mem[mem[64]] = 3
                            mem[64] = mem[64] + 64
                            mem[_3861 + 32 len 3] = call.data[calldata.size len 3]
                            idx = 0
                            s = 0
                            while idx < 1:
                                if idx >= mem[_3713]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_3861]:
                                    revert with 'NH{q', 50
                                mem[s + _3861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if 1 >= mem[_3861]:
                                revert with 'NH{q', 50
                            mem[_3861 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _6006 = mem[_3827]
                            idx = 0
                            s = 2
                            while idx < _6006:
                                if idx >= mem[_3827]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_3861]:
                                    revert with 'NH{q', 50
                                mem[s + _3861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3827')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3827')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _6006 = mem[_3827]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _6098 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _6140 = mem[_3861]
                            mem[mem[64] + 36] = mem[_3861]
                            mem[mem[64] + 68 len ceil32(_6140)] = mem[_3861 + 32 len ceil32(_6140)]
                            if ceil32(_6140) <= _6140:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_6140) + 32]
                            mem[mem[64] + _6140 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_6140) + _6098 + -mem[64] + 68
                        s = 0
                        idx = _2811 / 10^18
                        while idx:
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            idx = idx / 10
                            continue 
                        if s > test266151307():
                            revert with 'NH{q', 65
                        _4490 = mem[64]
                        mem[mem[64]] = s
                        mem[64] = mem[64] + ceil32(s) + 32
                        if not s:
                            t = s
                            idx = _2811 / 10^18
                            while idx:
                                if 48 > !(idx % 10):
                                    revert with 'NH{q', 17
                                if not t:
                                    revert with 'NH{q', 17
                                if t - 1 >= mem[_4490]:
                                    revert with 'NH{q', 50
                                mem[t + _4490 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                t = t - 1
                                idx = idx / 10
                                continue 
                            _6093 = mem[_4490]
                            _6094 = mem[_3713]
                            if mem[_3713] > !mem[_4490]:
                                revert with 'NH{q', 17
                            if 1 > !(mem[_3713] + mem[_4490]):
                                revert with 'NH{q', 17
                            if mem[_3713] + mem[_4490] + 1 > test266151307():
                                revert with 'NH{q', 65
                            _6297 = mem[64]
                            mem[mem[64]] = mem[_3713] + mem[_4490] + 1
                            mem[64] = mem[64] + floor32(_6094 + _6093 + 32) + 32
                            if not _6094 + _6093 + 1:
                                _7787 = mem[_3713]
                                idx = 0
                                s = 0
                                while idx < _7787:
                                    if idx >= mem[_3713]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6297]:
                                        revert with 'NH{q', 50
                                    mem[s + _6297 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _7787 = mem[_3713]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _7787 == -1:
                                    revert with 'NH{q', 17
                                if _7787 >= mem[_6297]:
                                    revert with 'NH{q', 50
                                mem[_7787 + _6297 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                                _11513 = mem[_4490]
                                idx = 0
                                s = _7787 + 1
                                while idx < _11513:
                                    if idx >= mem[_4490]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6297]:
                                        revert with 'NH{q', 50
                                    mem[s + _6297 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _11513 = mem[_4490]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _3575 > _2811:
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                _11937 = mem[_6297]
                                mem[mem[64] + 36] = mem[_6297]
                                mem[mem[64] + 68 len ceil32(_11937)] = mem[_6297 + 32 len ceil32(_11937)]
                                var151001 = ceil32(_11937)
                                if ceil32(_11937) > _11937:
                                    mem[mem[64] + _11937 + 68] = 0
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11937) + 32]
                            mem[_6297 + 32 len _6094 + _6093 + 1] = call.data[calldata.size len _6094 + _6093 + 1]
                            _7788 = mem[_3713]
                            idx = 0
                            s = 0
                            while idx < _7788:
                                if idx >= mem[_3713]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6297]:
                                    revert with 'NH{q', 50
                                mem[s + _6297 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7788 = mem[_3713]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7788 == -1:
                                revert with 'NH{q', 17
                            if _7788 >= mem[_6297]:
                                revert with 'NH{q', 50
                            mem[_7788 + _6297 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11514 = mem[_4490]
                            idx = 0
                            s = _7788 + 1
                            while idx < _11514:
                                if idx >= mem[_4490]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6297]:
                                    revert with 'NH{q', 50
                                mem[s + _6297 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11514 = mem[_4490]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _11790 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11938 = mem[_6297]
                            mem[mem[64] + 36] = mem[_6297]
                            mem[mem[64] + 68 len ceil32(_11938)] = mem[_6297 + 32 len ceil32(_11938)]
                            var152001 = ceil32(_11938)
                            if ceil32(_11938) <= _11938:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11938) + 32]
                            mem[mem[64] + _11938 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11938) + _11790 + -mem[64] + 68
                        mem[_4490 + 32 len s] = call.data[calldata.size len s]
                        t = s
                        idx = _2811 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4490]:
                                revert with 'NH{q', 50
                            mem[t + _4490 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6095 = mem[_4490]
                        _6096 = mem[_3713]
                        if mem[_3713] > !mem[_4490]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_3713] + mem[_4490]):
                            revert with 'NH{q', 17
                        if mem[_3713] + mem[_4490] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _6299 = mem[64]
                        mem[mem[64]] = mem[_3713] + mem[_4490] + 1
                        mem[64] = mem[64] + floor32(_6096 + _6095 + 32) + 32
                        if not _6096 + _6095 + 1:
                            _7789 = mem[_3713]
                            idx = 0
                            s = 0
                            while idx < _7789:
                                if idx >= mem[_3713]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6299]:
                                    revert with 'NH{q', 50
                                mem[s + _6299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7789 = mem[_3713]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7789 == -1:
                                revert with 'NH{q', 17
                            if _7789 >= mem[_6299]:
                                revert with 'NH{q', 50
                            mem[_7789 + _6299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11515 = mem[_4490]
                            idx = 0
                            s = _7789 + 1
                            while idx < _11515:
                                if idx >= mem[_4490]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6299]:
                                    revert with 'NH{q', 50
                                mem[s + _6299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11515 = mem[_4490]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _11791 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11939 = mem[_6299]
                            mem[mem[64] + 36] = mem[_6299]
                            mem[mem[64] + 68 len ceil32(_11939)] = mem[_6299 + 32 len ceil32(_11939)]
                            var152001 = ceil32(_11939)
                            if ceil32(_11939) <= _11939:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11939) + 32]
                            mem[mem[64] + _11939 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11939) + _11791 + -mem[64] + 68
                        mem[_6299 + 32 len _6096 + _6095 + 1] = call.data[calldata.size len _6096 + _6095 + 1]
                        _7790 = mem[_3713]
                        idx = 0
                        s = 0
                        while idx < _7790:
                            if idx >= mem[_3713]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6299]:
                                revert with 'NH{q', 50
                            mem[s + _6299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3713')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7790 = mem[_3713]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7790 == -1:
                            revert with 'NH{q', 17
                        if _7790 >= mem[_6299]:
                            revert with 'NH{q', 50
                        mem[_7790 + _6299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11516 = mem[_4490]
                        idx = 0
                        s = _7790 + 1
                        while idx < _11516:
                            if idx >= mem[_4490]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6299]:
                                revert with 'NH{q', 50
                            mem[s + _6299 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4490')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11516 = mem[_4490]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3575 > _2811:
                        _11792 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11940 = mem[_6299]
                        mem[mem[64] + 36] = mem[_6299]
                        mem[mem[64] + 68 len ceil32(_11940)] = mem[_6299 + 32 len ceil32(_11940)]
                        var153001 = ceil32(_11940)
                        if ceil32(_11940) <= _11940:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11940) + 32]
                        mem[mem[64] + _11940 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11940) + _11792 + -mem[64] + 68
                    s = 0
                    idx = _3575 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _4489 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3575 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4489]:
                                revert with 'NH{q', 50
                            mem[t + _4489 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6091 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6091] = 26
                        mem[_6091 + 32] = 'SafeMath: division by zero'
                        if not _2811 / 10^18:
                            _6363 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_6363] = 1
                            mem[_6363 + 32] = '0'
                            _6434 = mem[_4489]
                            if mem[_4489] > !1:
                                revert with 'NH{q', 17
                            if 1 > !(mem[_4489] + 1):
                                revert with 'NH{q', 17
                            if mem[_4489] + 2 > test266151307():
                                revert with 'NH{q', 65
                            _6649 = mem[64]
                            mem[mem[64]] = mem[_4489] + 2
                            mem[64] = mem[64] + floor32(_6434 + 33) + 32
                            if not _6434 + 2:
                                _7783 = mem[_4489]
                                idx = 0
                                s = 0
                                while idx < _7783:
                                    if idx >= mem[_4489]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6649]:
                                        revert with 'NH{q', 50
                                    mem[s + _6649 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _7783 = mem[_4489]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _7783 == -1:
                                    revert with 'NH{q', 17
                                if _7783 >= mem[_6649]:
                                    revert with 'NH{q', 50
                                mem[_7783 + _6649 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                                _11509 = mem[_6363]
                                idx = 0
                                s = _7783 + 1
                                while idx < _11509:
                                    if idx >= mem[_6363]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_6649]:
                                        revert with 'NH{q', 50
                                    mem[s + _6649 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6363')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6363')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _11509 = mem[_6363]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _3575 > _2811:
                                _11781 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                _11933 = mem[_6649]
                                mem[mem[64] + 36] = mem[_6649]
                                mem[mem[64] + 68 len ceil32(_11933)] = mem[_6649 + 32 len ceil32(_11933)]
                                var151001 = ceil32(_11933)
                                if ceil32(_11933) <= _11933:
                                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11933) + 32]
                                mem[mem[64] + _11933 + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(_11933) + _11781 + -mem[64] + 68
                            mem[_6649 + 32 len _6434 + 2] = call.data[calldata.size len _6434 + 2]
                            _7784 = mem[_4489]
                            idx = 0
                            s = 0
                            while idx < _7784:
                                if idx >= mem[_4489]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6649]:
                                    revert with 'NH{q', 50
                                mem[s + _6649 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7784 = mem[_4489]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7784 == -1:
                                revert with 'NH{q', 17
                            if _7784 >= mem[_6649]:
                                revert with 'NH{q', 50
                            mem[_7784 + _6649 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11510 = mem[_6363]
                            idx = 0
                            s = _7784 + 1
                            while idx < _11510:
                                if idx >= mem[_6363]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6649]:
                                    revert with 'NH{q', 50
                                mem[s + _6649 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6363')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6363')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11510 = mem[_6363]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _11782 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11934 = mem[_6649]
                            mem[mem[64] + 36] = mem[_6649]
                            mem[mem[64] + 68 len ceil32(_11934)] = mem[_6649 + 32 len ceil32(_11934)]
                            var152001 = ceil32(_11934)
                            if ceil32(_11934) <= _11934:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11934) + 32]
                            mem[mem[64] + _11934 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11934) + _11782 + -mem[64] + 68
                        s = 0
                        idx = _2811 / 10^18
                        while idx:
                            if s == -1:
                                revert with 'NH{q', 17
                            s = s + 1
                            idx = idx / 10
                            continue 
                        if s > test266151307():
                            revert with 'NH{q', 65
                        _7959 = mem[64]
                        mem[mem[64]] = s
                        mem[64] = mem[64] + ceil32(s) + 32
                        if not s:
                            t = s
                            idx = _2811 / 10^18
                            while idx:
                                if 48 > !(idx % 10):
                                    revert with 'NH{q', 17
                                if not t:
                                    revert with 'NH{q', 17
                                if t - 1 >= mem[_7959]:
                                    revert with 'NH{q', 50
                                mem[t + _7959 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                                t = t - 1
                                idx = idx / 10
                                continue 
                            _11777 = mem[_7959]
                            _11778 = mem[_4489]
                            if mem[_4489] > !mem[_7959]:
                                revert with 'NH{q', 17
                            if 1 > !(mem[_4489] + mem[_7959]):
                                revert with 'NH{q', 17
                            if mem[_4489] + mem[_7959] + 1 > test266151307():
                                revert with 'NH{q', 65
                            _12331 = mem[64]
                            mem[mem[64]] = mem[_4489] + mem[_7959] + 1
                            mem[64] = mem[64] + floor32(_11778 + _11777 + 32) + 32
                            if not _11778 + _11777 + 1:
                                _14783 = mem[_4489]
                                idx = 0
                                s = 0
                                while idx < _14783:
                                    if idx >= mem[_4489]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_12331]:
                                        revert with 'NH{q', 50
                                    mem[s + _12331 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _14783 = mem[_4489]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _14783 == -1:
                                    revert with 'NH{q', 17
                                if _14783 >= mem[_12331]:
                                    revert with 'NH{q', 50
                                mem[_14783 + _12331 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                                _19547 = mem[_7959]
                                idx = 0
                                s = _14783 + 1
                                while idx < _19547:
                                    if idx >= mem[_7959]:
                                        revert with 'NH{q', 50
                                    if s == -1:
                                        revert with 'NH{q', 17
                                    if s >= mem[_12331]:
                                        revert with 'NH{q', 50
                                    mem[s + _12331 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) - 256
                                    if idx == -1:
                                        revert with 'NH{q', 17
                                    _19547 = mem[_7959]
                                    idx = idx + 1
                                    s = s + 1
                                    continue 
                                if _3575 > _2811:
                                _20059 = mem[64]
                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = 32
                                _20303 = mem[_12331]
                                mem[mem[64] + 36] = mem[_12331]
                                mem[mem[64] + 68 len ceil32(_20303)] = mem[_12331 + 32 len ceil32(_20303)]
                                var159001 = ceil32(_20303)
                                if ceil32(_20303) <= _20303:
                                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20303) + 32]
                                mem[mem[64] + _20303 + 68] = 0
                                revert with memory
                                  from mem[64]
                                   len ceil32(_20303) + _20059 + -mem[64] + 68
                            mem[_12331 + 32 len _11778 + _11777 + 1] = call.data[calldata.size len _11778 + _11777 + 1]
                            _14784 = mem[_4489]
                            idx = 0
                            s = 0
                            while idx < _14784:
                                if idx >= mem[_4489]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12331]:
                                    revert with 'NH{q', 50
                                mem[s + _12331 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14784 = mem[_4489]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14784 == -1:
                                revert with 'NH{q', 17
                            if _14784 >= mem[_12331]:
                                revert with 'NH{q', 50
                            mem[_14784 + _12331 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19548 = mem[_7959]
                            idx = 0
                            s = _14784 + 1
                            while idx < _19548:
                                if idx >= mem[_7959]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12331]:
                                    revert with 'NH{q', 50
                                mem[s + _12331 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19548 = mem[_7959]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _20060 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20304 = mem[_12331]
                            mem[mem[64] + 36] = mem[_12331]
                            mem[mem[64] + 68 len ceil32(_20304)] = mem[_12331 + 32 len ceil32(_20304)]
                            var160001 = ceil32(_20304)
                            if ceil32(_20304) <= _20304:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20304) + 32]
                            mem[mem[64] + _20304 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20304) + _20060 + -mem[64] + 68
                        mem[_7959 + 32 len s] = call.data[calldata.size len s]
                        t = s
                        idx = _2811 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7959]:
                                revert with 'NH{q', 50
                            mem[t + _7959 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11779 = mem[_7959]
                        _11780 = mem[_4489]
                        if mem[_4489] > !mem[_7959]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4489] + mem[_7959]):
                            revert with 'NH{q', 17
                        if mem[_4489] + mem[_7959] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12333 = mem[64]
                        mem[mem[64]] = mem[_4489] + mem[_7959] + 1
                        mem[64] = mem[64] + floor32(_11780 + _11779 + 32) + 32
                        if not _11780 + _11779 + 1:
                            _14785 = mem[_4489]
                            idx = 0
                            s = 0
                            while idx < _14785:
                                if idx >= mem[_4489]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12333]:
                                    revert with 'NH{q', 50
                                mem[s + _12333 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14785 = mem[_4489]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14785 == -1:
                                revert with 'NH{q', 17
                            if _14785 >= mem[_12333]:
                                revert with 'NH{q', 50
                            mem[_14785 + _12333 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19549 = mem[_7959]
                            idx = 0
                            s = _14785 + 1
                            while idx < _19549:
                                if idx >= mem[_7959]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12333]:
                                    revert with 'NH{q', 50
                                mem[s + _12333 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19549 = mem[_7959]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _20061 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20305 = mem[_12333]
                            mem[mem[64] + 36] = mem[_12333]
                            mem[mem[64] + 68 len ceil32(_20305)] = mem[_12333 + 32 len ceil32(_20305)]
                            var160001 = ceil32(_20305)
                            if ceil32(_20305) <= _20305:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20305) + 32]
                            mem[mem[64] + _20305 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20305) + _20061 + -mem[64] + 68
                        mem[_12333 + 32 len _11780 + _11779 + 1] = call.data[calldata.size len _11780 + _11779 + 1]
                        _14786 = mem[_4489]
                        idx = 0
                        s = 0
                        while idx < _14786:
                            if idx >= mem[_4489]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12333]:
                                revert with 'NH{q', 50
                            mem[s + _12333 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14786 = mem[_4489]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14786 == -1:
                            revert with 'NH{q', 17
                        if _14786 >= mem[_12333]:
                            revert with 'NH{q', 50
                        mem[_14786 + _12333 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19550 = mem[_7959]
                        idx = 0
                        s = _14786 + 1
                        while idx < _19550:
                            if idx >= mem[_7959]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12333]:
                                revert with 'NH{q', 50
                            mem[s + _12333 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7959')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19550 = mem[_7959]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3575 > _2811:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20306 = mem[_12333]
                        mem[mem[64] + 36] = mem[_12333]
                        mem[mem[64] + 68 len ceil32(_20306)] = mem[_12333 + 32 len ceil32(_20306)]
                        var161001 = ceil32(_20306)
                        if ceil32(_20306) > _20306:
                            mem[mem[64] + _20306 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20306) + 32]
                    mem[_4489 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3575 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4489]:
                            revert with 'NH{q', 50
                        mem[t + _4489 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6092 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6092] = 26
                    mem[_6092 + 32] = 'SafeMath: division by zero'
                    if not _2811 / 10^18:
                        _6364 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6364] = 1
                        mem[_6364 + 32] = '0'
                        _6436 = mem[_4489]
                        if mem[_4489] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4489] + 1):
                            revert with 'NH{q', 17
                        if mem[_4489] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _6650 = mem[64]
                        mem[mem[64]] = mem[_4489] + 2
                        mem[64] = mem[64] + floor32(_6436 + 33) + 32
                        if not _6436 + 2:
                            _7785 = mem[_4489]
                            idx = 0
                            s = 0
                            while idx < _7785:
                                if idx >= mem[_4489]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6650]:
                                    revert with 'NH{q', 50
                                mem[s + _6650 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7785 = mem[_4489]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7785 == -1:
                                revert with 'NH{q', 17
                            if _7785 >= mem[_6650]:
                                revert with 'NH{q', 50
                            mem[_7785 + _6650 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11511 = mem[_6364]
                            idx = 0
                            s = _7785 + 1
                            while idx < _11511:
                                if idx >= mem[_6364]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6650]:
                                    revert with 'NH{q', 50
                                mem[s + _6650 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6364')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6364')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11511 = mem[_6364]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _11787 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11935 = mem[_6650]
                            mem[mem[64] + 36] = mem[_6650]
                            mem[mem[64] + 68 len ceil32(_11935)] = mem[_6650 + 32 len ceil32(_11935)]
                            var152001 = ceil32(_11935)
                            if ceil32(_11935) <= _11935:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11935) + 32]
                            mem[mem[64] + _11935 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11935) + _11787 + -mem[64] + 68
                        mem[_6650 + 32 len _6436 + 2] = call.data[calldata.size len _6436 + 2]
                        _7786 = mem[_4489]
                        idx = 0
                        s = 0
                        while idx < _7786:
                            if idx >= mem[_4489]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6650]:
                                revert with 'NH{q', 50
                            mem[s + _6650 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7786 = mem[_4489]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7786 == -1:
                            revert with 'NH{q', 17
                        if _7786 >= mem[_6650]:
                            revert with 'NH{q', 50
                        mem[_7786 + _6650 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11512 = mem[_6364]
                        idx = 0
                        s = _7786 + 1
                        while idx < _11512:
                            if idx >= mem[_6364]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6650]:
                                revert with 'NH{q', 50
                            mem[s + _6650 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6364')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6364')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11512 = mem[_6364]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3575 > _2811:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11936 = mem[_6650]
                        mem[mem[64] + 36] = mem[_6650]
                        mem[mem[64] + 68 len ceil32(_11936)] = mem[_6650 + 32 len ceil32(_11936)]
                        var153001 = ceil32(_11936)
                        if ceil32(_11936) > _11936:
                            mem[mem[64] + _11936 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11936) + 32]
                    s = 0
                    idx = _2811 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7962 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2811 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7962]:
                                revert with 'NH{q', 50
                            mem[t + _7962 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11783 = mem[_7962]
                        _11784 = mem[_4489]
                        if mem[_4489] > !mem[_7962]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4489] + mem[_7962]):
                            revert with 'NH{q', 17
                        if mem[_4489] + mem[_7962] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12335 = mem[64]
                        mem[mem[64]] = mem[_4489] + mem[_7962] + 1
                        mem[64] = mem[64] + floor32(_11784 + _11783 + 32) + 32
                        if not _11784 + _11783 + 1:
                            _14787 = mem[_4489]
                            idx = 0
                            s = 0
                            while idx < _14787:
                                if idx >= mem[_4489]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12335]:
                                    revert with 'NH{q', 50
                                mem[s + _12335 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14787 = mem[_4489]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14787 == -1:
                                revert with 'NH{q', 17
                            if _14787 >= mem[_12335]:
                                revert with 'NH{q', 50
                            mem[_14787 + _12335 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19551 = mem[_7962]
                            idx = 0
                            s = _14787 + 1
                            while idx < _19551:
                                if idx >= mem[_7962]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12335]:
                                    revert with 'NH{q', 50
                                mem[s + _12335 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19551 = mem[_7962]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3575 > _2811:
                            _20063 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20307 = mem[_12335]
                            mem[mem[64] + 36] = mem[_12335]
                            mem[mem[64] + 68 len ceil32(_20307)] = mem[_12335 + 32 len ceil32(_20307)]
                            var160001 = ceil32(_20307)
                            if ceil32(_20307) <= _20307:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20307) + 32]
                            mem[mem[64] + _20307 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20307) + _20063 + -mem[64] + 68
                        mem[_12335 + 32 len _11784 + _11783 + 1] = call.data[calldata.size len _11784 + _11783 + 1]
                        _14788 = mem[_4489]
                        idx = 0
                        s = 0
                        while idx < _14788:
                            if idx >= mem[_4489]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12335]:
                                revert with 'NH{q', 50
                            mem[s + _12335 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14788 = mem[_4489]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14788 == -1:
                            revert with 'NH{q', 17
                        if _14788 >= mem[_12335]:
                            revert with 'NH{q', 50
                        mem[_14788 + _12335 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19552 = mem[_7962]
                        idx = 0
                        s = _14788 + 1
                        while idx < _19552:
                            if idx >= mem[_7962]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12335]:
                                revert with 'NH{q', 50
                            mem[s + _12335 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19552 = mem[_7962]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3575 > _2811:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20308 = mem[_12335]
                        mem[mem[64] + 36] = mem[_12335]
                        mem[mem[64] + 68 len ceil32(_20308)] = mem[_12335 + 32 len ceil32(_20308)]
                        var161001 = ceil32(_20308)
                        if ceil32(_20308) > _20308:
                            mem[mem[64] + _20308 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20308) + 32]
                    mem[_7962 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2811 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7962]:
                            revert with 'NH{q', 50
                        mem[t + _7962 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11785 = mem[_7962]
                    _11786 = mem[_4489]
                    if mem[_4489] > !mem[_7962]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4489] + mem[_7962]):
                        revert with 'NH{q', 17
                    if mem[_4489] + mem[_7962] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12337 = mem[64]
                    mem[mem[64]] = mem[_4489] + mem[_7962] + 1
                    mem[64] = mem[64] + floor32(_11786 + _11785 + 32) + 32
                    if not _11786 + _11785 + 1:
                        _14789 = mem[_4489]
                        idx = 0
                        s = 0
                        while idx < _14789:
                            if idx >= mem[_4489]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12337]:
                                revert with 'NH{q', 50
                            mem[s + _12337 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14789 = mem[_4489]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14789 == -1:
                            revert with 'NH{q', 17
                        if _14789 >= mem[_12337]:
                            revert with 'NH{q', 50
                        mem[_14789 + _12337 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19553 = mem[_7962]
                        idx = 0
                        s = _14789 + 1
                        while idx < _19553:
                            if idx >= mem[_7962]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12337]:
                                revert with 'NH{q', 50
                            mem[s + _12337 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19553 = mem[_7962]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3575 > _2811:
                        _20065 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20309 = mem[_12337]
                        mem[mem[64] + 36] = mem[_12337]
                        mem[mem[64] + 68 len ceil32(_20309)] = mem[_12337 + 32 len ceil32(_20309)]
                        var161001 = ceil32(_20309)
                        if ceil32(_20309) <= _20309:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20309) + 32]
                        mem[mem[64] + _20309 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20309) + _20065 + -mem[64] + 68
                    mem[_12337 + 32 len _11786 + _11785 + 1] = call.data[calldata.size len _11786 + _11785 + 1]
                    _14790 = mem[_4489]
                    idx = 0
                    s = 0
                    while idx < _14790:
                        if idx >= mem[_4489]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12337]:
                            revert with 'NH{q', 50
                        mem[s + _12337 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4489')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14790 = mem[_4489]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14790 == -1:
                        revert with 'NH{q', 17
                    if _14790 >= mem[_12337]:
                        revert with 'NH{q', 50
                    mem[_14790 + _12337 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19554 = mem[_7962]
                    idx = 0
                    s = _14790 + 1
                    while idx < _19554:
                        if idx >= mem[_7962]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12337]:
                            revert with 'NH{q', 50
                        mem[s + _12337 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7962')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19554 = mem[_7962]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3575 > _2811:
                    _20066 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20310 = mem[_12337]
                    mem[mem[64] + 36] = mem[_12337]
                    mem[mem[64] + 68 len ceil32(_20310)] = mem[_12337 + 32 len ceil32(_20310)]
                    var162001 = ceil32(_20310)
                    if ceil32(_20310) <= _20310:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20310) + 32]
                    mem[mem[64] + _20310 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20310) + _20066 + -mem[64] + 68
                mem[0] = 10
                mem[_2777 + 32] = address(stor10.field_0)
                idx = _2777 + 32
                s = 0
                while _2777 + (32 * stor10.length) > idx:
                    mem[idx + 32] = stor10[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3501 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3525 = mem[_3501]
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                _3553 = mem[_2777 + 32]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_2777 + 32] = mem[_2777 + 76 len 20]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_2777 + 64] = address(_3553)
                _3620 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _3635 = mem[_2769]
                mem[mem[64] + 164] = mem[_2769]
                idx = 0
                s = mem[64] + 196
                t = _2769 + 32
                while idx < _3635:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_3620 + 100] = this.address
                mem[_3620 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3620 + (32 * _3635) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4571 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4634 = mem[_4571]
                _4667 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _4634
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _4691 = mem[_2777]
                mem[mem[64] + 164] = mem[_2777]
                idx = 0
                s = mem[64] + 196
                t = _2777 + 32
                while idx < _4691:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_4667 + 100] = this.address
                mem[_4667 + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _4667 + (32 * _4691) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6193 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6237 = mem[_6193]
                _6301 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6301] = 26
                mem[_6301 + 32] = 'SafeMath: division by zero'
                if not _6237 / 10^18:
                    _6577 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6577] = 1
                    mem[_6577 + 32] = '0'
                    _6655 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6655] = 26
                    mem[_6655 + 32] = 'SafeMath: division by zero'
                    if not _3525 / 10^18:
                        _7001 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_7001] = 1
                        mem[_7001 + 32] = '0'
                        _7211 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_7211 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_6577]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7211]:
                                revert with 'NH{q', 50
                            mem[s + _7211 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_7211]:
                            revert with 'NH{q', 50
                        mem[_7211 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11518 = mem[_7001]
                        idx = 0
                        s = 2
                        while idx < _11518:
                            if idx >= mem[_7001]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7211]:
                                revert with 'NH{q', 50
                            mem[s + _7211 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7001')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7001')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11518 = mem[_7001]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _11800 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11942 = mem[_7211]
                        mem[mem[64] + 36] = mem[_7211]
                        mem[mem[64] + 68 len ceil32(_11942)] = mem[_7211 + 32 len ceil32(_11942)]
                        var148001 = ceil32(_11942)
                        if ceil32(_11942) <= _11942:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11942) + 32]
                        mem[mem[64] + _11942 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11942) + _11800 + -mem[64] + 68
                    s = 0
                    idx = _3525 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7970 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3525 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7970]:
                                revert with 'NH{q', 50
                            mem[t + _7970 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11795 = mem[_7970]
                        _11796 = mem[_6577]
                        if mem[_6577] > !mem[_7970]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_6577] + mem[_7970]):
                            revert with 'NH{q', 17
                        if mem[_6577] + mem[_7970] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12341 = mem[64]
                        mem[mem[64]] = mem[_6577] + mem[_7970] + 1
                        mem[64] = mem[64] + floor32(_11796 + _11795 + 32) + 32
                        if not _11796 + _11795 + 1:
                            _14795 = mem[_6577]
                            idx = 0
                            s = 0
                            while idx < _14795:
                                if idx >= mem[_6577]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12341]:
                                    revert with 'NH{q', 50
                                mem[s + _12341 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14795 = mem[_6577]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14795 == -1:
                                revert with 'NH{q', 17
                            if _14795 >= mem[_12341]:
                                revert with 'NH{q', 50
                            mem[_14795 + _12341 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19559 = mem[_7970]
                            idx = 0
                            s = _14795 + 1
                            while idx < _19559:
                                if idx >= mem[_7970]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12341]:
                                    revert with 'NH{q', 50
                                mem[s + _12341 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19559 = mem[_7970]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6237 > _3525:
                            _20079 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20315 = mem[_12341]
                            mem[mem[64] + 36] = mem[_12341]
                            mem[mem[64] + 68 len ceil32(_20315)] = mem[_12341 + 32 len ceil32(_20315)]
                            var155001 = ceil32(_20315)
                            if ceil32(_20315) <= _20315:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20315) + 32]
                            mem[mem[64] + _20315 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20315) + _20079 + -mem[64] + 68
                        mem[_12341 + 32 len _11796 + _11795 + 1] = call.data[calldata.size len _11796 + _11795 + 1]
                        _14796 = mem[_6577]
                        idx = 0
                        s = 0
                        while idx < _14796:
                            if idx >= mem[_6577]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12341]:
                                revert with 'NH{q', 50
                            mem[s + _12341 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14796 = mem[_6577]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14796 == -1:
                            revert with 'NH{q', 17
                        if _14796 >= mem[_12341]:
                            revert with 'NH{q', 50
                        mem[_14796 + _12341 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19560 = mem[_7970]
                        idx = 0
                        s = _14796 + 1
                        while idx < _19560:
                            if idx >= mem[_7970]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12341]:
                                revert with 'NH{q', 50
                            mem[s + _12341 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19560 = mem[_7970]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20316 = mem[_12341]
                        mem[mem[64] + 36] = mem[_12341]
                        mem[mem[64] + 68 len ceil32(_20316)] = mem[_12341 + 32 len ceil32(_20316)]
                        var156001 = ceil32(_20316)
                        if ceil32(_20316) > _20316:
                            mem[mem[64] + _20316 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20316) + 32]
                    mem[_7970 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3525 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7970]:
                            revert with 'NH{q', 50
                        mem[t + _7970 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11797 = mem[_7970]
                    _11798 = mem[_6577]
                    if mem[_6577] > !mem[_7970]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6577] + mem[_7970]):
                        revert with 'NH{q', 17
                    if mem[_6577] + mem[_7970] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12343 = mem[64]
                    mem[mem[64]] = mem[_6577] + mem[_7970] + 1
                    mem[64] = mem[64] + floor32(_11798 + _11797 + 32) + 32
                    if not _11798 + _11797 + 1:
                        _14797 = mem[_6577]
                        idx = 0
                        s = 0
                        while idx < _14797:
                            if idx >= mem[_6577]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12343]:
                                revert with 'NH{q', 50
                            mem[s + _12343 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14797 = mem[_6577]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14797 == -1:
                            revert with 'NH{q', 17
                        if _14797 >= mem[_12343]:
                            revert with 'NH{q', 50
                        mem[_14797 + _12343 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19561 = mem[_7970]
                        idx = 0
                        s = _14797 + 1
                        while idx < _19561:
                            if idx >= mem[_7970]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12343]:
                                revert with 'NH{q', 50
                            mem[s + _12343 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19561 = mem[_7970]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _20081 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20317 = mem[_12343]
                        mem[mem[64] + 36] = mem[_12343]
                        mem[mem[64] + 68 len ceil32(_20317)] = mem[_12343 + 32 len ceil32(_20317)]
                        var156001 = ceil32(_20317)
                        if ceil32(_20317) <= _20317:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20317) + 32]
                        mem[mem[64] + _20317 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20317) + _20081 + -mem[64] + 68
                    mem[_12343 + 32 len _11798 + _11797 + 1] = call.data[calldata.size len _11798 + _11797 + 1]
                    _14798 = mem[_6577]
                    idx = 0
                    s = 0
                    while idx < _14798:
                        if idx >= mem[_6577]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12343]:
                            revert with 'NH{q', 50
                        mem[s + _12343 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6577')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14798 = mem[_6577]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14798 == -1:
                        revert with 'NH{q', 17
                    if _14798 >= mem[_12343]:
                        revert with 'NH{q', 50
                    mem[_14798 + _12343 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19562 = mem[_7970]
                    idx = 0
                    s = _14798 + 1
                    while idx < _19562:
                        if idx >= mem[_7970]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12343]:
                            revert with 'NH{q', 50
                        mem[s + _12343 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7970')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19562 = mem[_7970]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6237 > _3525:
                    _20082 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20318 = mem[_12343]
                    mem[mem[64] + 36] = mem[_12343]
                    mem[mem[64] + 68 len ceil32(_20318)] = mem[_12343 + 32 len ceil32(_20318)]
                    var157001 = ceil32(_20318)
                    if ceil32(_20318) <= _20318:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20318) + 32]
                    mem[mem[64] + _20318 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20318) + _20082 + -mem[64] + 68
                s = 0
                idx = _6237 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7969 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6237 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7969]:
                            revert with 'NH{q', 50
                        mem[t + _7969 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11793 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_11793] = 26
                    mem[_11793 + 32] = 'SafeMath: division by zero'
                    if not _3525 / 10^18:
                        _12511 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12511] = 1
                        mem[_12511 + 32] = '0'
                        _12716 = mem[_7969]
                        if mem[_7969] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7969] + 1):
                            revert with 'NH{q', 17
                        if mem[_7969] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _13359 = mem[64]
                        mem[mem[64]] = mem[_7969] + 2
                        mem[64] = mem[64] + floor32(_12716 + 33) + 32
                        if not _12716 + 2:
                            _14791 = mem[_7969]
                            idx = 0
                            s = 0
                            while idx < _14791:
                                if idx >= mem[_7969]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13359]:
                                    revert with 'NH{q', 50
                                mem[s + _13359 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14791 = mem[_7969]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14791 == -1:
                                revert with 'NH{q', 17
                            if _14791 >= mem[_13359]:
                                revert with 'NH{q', 50
                            mem[_14791 + _13359 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19555 = mem[_12511]
                            idx = 0
                            s = _14791 + 1
                            while idx < _19555:
                                if idx >= mem[_12511]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13359]:
                                    revert with 'NH{q', 50
                                mem[s + _13359 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12511')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12511')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19555 = mem[_12511]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6237 > _3525:
                            _20071 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20311 = mem[_13359]
                            mem[mem[64] + 36] = mem[_13359]
                            mem[mem[64] + 68 len ceil32(_20311)] = mem[_13359 + 32 len ceil32(_20311)]
                            var155001 = ceil32(_20311)
                            if ceil32(_20311) <= _20311:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20311) + 32]
                            mem[mem[64] + _20311 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20311) + _20071 + -mem[64] + 68
                        mem[_13359 + 32 len _12716 + 2] = call.data[calldata.size len _12716 + 2]
                        _14792 = mem[_7969]
                        idx = 0
                        s = 0
                        while idx < _14792:
                            if idx >= mem[_7969]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13359]:
                                revert with 'NH{q', 50
                            mem[s + _13359 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14792 = mem[_7969]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14792 == -1:
                            revert with 'NH{q', 17
                        if _14792 >= mem[_13359]:
                            revert with 'NH{q', 50
                        mem[_14792 + _13359 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19556 = mem[_12511]
                        idx = 0
                        s = _14792 + 1
                        while idx < _19556:
                            if idx >= mem[_12511]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13359]:
                                revert with 'NH{q', 50
                            mem[s + _13359 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12511')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12511')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19556 = mem[_12511]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _20072 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20312 = mem[_13359]
                        mem[mem[64] + 36] = mem[_13359]
                        mem[mem[64] + 68 len ceil32(_20312)] = mem[_13359 + 32 len ceil32(_20312)]
                        var156001 = ceil32(_20312)
                        if ceil32(_20312) <= _20312:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20312) + 32]
                        mem[mem[64] + _20312 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20312) + _20072 + -mem[64] + 68
                    s = 0
                    idx = _3525 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _15187 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3525 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_15187]:
                                revert with 'NH{q', 50
                            mem[t + _15187 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _20067 = mem[_15187]
                        _20068 = mem[_7969]
                        if mem[_7969] > !mem[_15187]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7969] + mem[_15187]):
                            revert with 'NH{q', 17
                        if mem[_7969] + mem[_15187] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _21075 = mem[64]
                        mem[mem[64]] = mem[_7969] + mem[_15187] + 1
                        mem[64] = mem[64] + floor32(_20068 + _20067 + 32) + 32
                        if not _20068 + _20067 + 1:
                            _23275 = mem[_7969]
                            idx = 0
                            s = 0
                            while idx < _23275:
                                if idx >= mem[_7969]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21075]:
                                    revert with 'NH{q', 50
                                mem[s + _21075 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _23275 = mem[_7969]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _23275 == -1:
                                revert with 'NH{q', 17
                            if _23275 >= mem[_21075]:
                                revert with 'NH{q', 50
                            mem[_23275 + _21075 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _26539 = mem[_15187]
                            idx = 0
                            s = _23275 + 1
                            while idx < _26539:
                                if idx >= mem[_15187]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21075]:
                                    revert with 'NH{q', 50
                                mem[s + _21075 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _26539 = mem[_15187]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6237 > _3525:
                            _26987 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _27163 = mem[_21075]
                            mem[mem[64] + 36] = mem[_21075]
                            mem[mem[64] + 68 len ceil32(_27163)] = mem[_21075 + 32 len ceil32(_27163)]
                            var163001 = ceil32(_27163)
                            if ceil32(_27163) <= _27163:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27163) + 32]
                            mem[mem[64] + _27163 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_27163) + _26987 + -mem[64] + 68
                        mem[_21075 + 32 len _20068 + _20067 + 1] = call.data[calldata.size len _20068 + _20067 + 1]
                        _23276 = mem[_7969]
                        idx = 0
                        s = 0
                        while idx < _23276:
                            if idx >= mem[_7969]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21075]:
                                revert with 'NH{q', 50
                            mem[s + _21075 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23276 = mem[_7969]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23276 == -1:
                            revert with 'NH{q', 17
                        if _23276 >= mem[_21075]:
                            revert with 'NH{q', 50
                        mem[_23276 + _21075 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26540 = mem[_15187]
                        idx = 0
                        s = _23276 + 1
                        while idx < _26540:
                            if idx >= mem[_15187]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21075]:
                                revert with 'NH{q', 50
                            mem[s + _21075 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26540 = mem[_15187]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _26988 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27164 = mem[_21075]
                        mem[mem[64] + 36] = mem[_21075]
                        mem[mem[64] + 68 len ceil32(_27164)] = mem[_21075 + 32 len ceil32(_27164)]
                        var164001 = ceil32(_27164)
                        if ceil32(_27164) <= _27164:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27164) + 32]
                        mem[mem[64] + _27164 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27164) + _26988 + -mem[64] + 68
                    mem[_15187 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3525 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15187]:
                            revert with 'NH{q', 50
                        mem[t + _15187 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20069 = mem[_15187]
                    _20070 = mem[_7969]
                    if mem[_7969] > !mem[_15187]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7969] + mem[_15187]):
                        revert with 'NH{q', 17
                    if mem[_7969] + mem[_15187] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21077 = mem[64]
                    mem[mem[64]] = mem[_7969] + mem[_15187] + 1
                    mem[64] = mem[64] + floor32(_20070 + _20069 + 32) + 32
                    if not _20070 + _20069 + 1:
                        _23277 = mem[_7969]
                        idx = 0
                        s = 0
                        while idx < _23277:
                            if idx >= mem[_7969]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21077]:
                                revert with 'NH{q', 50
                            mem[s + _21077 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23277 = mem[_7969]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23277 == -1:
                            revert with 'NH{q', 17
                        if _23277 >= mem[_21077]:
                            revert with 'NH{q', 50
                        mem[_23277 + _21077 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26541 = mem[_15187]
                        idx = 0
                        s = _23277 + 1
                        while idx < _26541:
                            if idx >= mem[_15187]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21077]:
                                revert with 'NH{q', 50
                            mem[s + _21077 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26541 = mem[_15187]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _26989 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27165 = mem[_21077]
                        mem[mem[64] + 36] = mem[_21077]
                        mem[mem[64] + 68 len ceil32(_27165)] = mem[_21077 + 32 len ceil32(_27165)]
                        var164001 = ceil32(_27165)
                        if ceil32(_27165) <= _27165:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27165) + 32]
                        mem[mem[64] + _27165 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27165) + _26989 + -mem[64] + 68
                    mem[_21077 + 32 len _20070 + _20069 + 1] = call.data[calldata.size len _20070 + _20069 + 1]
                    _23278 = mem[_7969]
                    idx = 0
                    s = 0
                    while idx < _23278:
                        if idx >= mem[_7969]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21077]:
                            revert with 'NH{q', 50
                        mem[s + _21077 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23278 = mem[_7969]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23278 == -1:
                        revert with 'NH{q', 17
                    if _23278 >= mem[_21077]:
                        revert with 'NH{q', 50
                    mem[_23278 + _21077 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26542 = mem[_15187]
                    idx = 0
                    s = _23278 + 1
                    while idx < _26542:
                        if idx >= mem[_15187]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21077]:
                            revert with 'NH{q', 50
                        mem[s + _21077 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15187')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26542 = mem[_15187]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6237 > _3525:
                    _26990 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27166 = mem[_21077]
                    mem[mem[64] + 36] = mem[_21077]
                    mem[mem[64] + 68 len ceil32(_27166)] = mem[_21077 + 32 len ceil32(_27166)]
                    var165001 = ceil32(_27166)
                    if ceil32(_27166) <= _27166:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27166) + 32]
                    mem[mem[64] + _27166 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27166) + _26990 + -mem[64] + 68
                mem[_7969 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6237 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7969]:
                        revert with 'NH{q', 50
                    mem[t + _7969 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11794 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11794] = 26
                mem[_11794 + 32] = 'SafeMath: division by zero'
                if not _3525 / 10^18:
                    _12512 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12512] = 1
                    mem[_12512 + 32] = '0'
                    _12718 = mem[_7969]
                    if mem[_7969] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7969] + 1):
                        revert with 'NH{q', 17
                    if mem[_7969] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13360 = mem[64]
                    mem[mem[64]] = mem[_7969] + 2
                    mem[64] = mem[64] + floor32(_12718 + 33) + 32
                    if not _12718 + 2:
                        _14793 = mem[_7969]
                        idx = 0
                        s = 0
                        while idx < _14793:
                            if idx >= mem[_7969]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13360]:
                                revert with 'NH{q', 50
                            mem[s + _13360 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14793 = mem[_7969]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14793 == -1:
                            revert with 'NH{q', 17
                        if _14793 >= mem[_13360]:
                            revert with 'NH{q', 50
                        mem[_14793 + _13360 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19557 = mem[_12512]
                        idx = 0
                        s = _14793 + 1
                        while idx < _19557:
                            if idx >= mem[_12512]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13360]:
                                revert with 'NH{q', 50
                            mem[s + _13360 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12512')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12512')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19557 = mem[_12512]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _20077 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20313 = mem[_13360]
                        mem[mem[64] + 36] = mem[_13360]
                        mem[mem[64] + 68 len ceil32(_20313)] = mem[_13360 + 32 len ceil32(_20313)]
                        var156001 = ceil32(_20313)
                        if ceil32(_20313) <= _20313:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20313) + 32]
                        mem[mem[64] + _20313 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20313) + _20077 + -mem[64] + 68
                    mem[_13360 + 32 len _12718 + 2] = call.data[calldata.size len _12718 + 2]
                    _14794 = mem[_7969]
                    idx = 0
                    s = 0
                    while idx < _14794:
                        if idx >= mem[_7969]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13360]:
                            revert with 'NH{q', 50
                        mem[s + _13360 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14794 = mem[_7969]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14794 == -1:
                        revert with 'NH{q', 17
                    if _14794 >= mem[_13360]:
                        revert with 'NH{q', 50
                    mem[_14794 + _13360 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19558 = mem[_12512]
                    idx = 0
                    s = _14794 + 1
                    while idx < _19558:
                        if idx >= mem[_12512]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13360]:
                            revert with 'NH{q', 50
                        mem[s + _13360 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12512')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12512')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19558 = mem[_12512]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6237 > _3525:
                    _20078 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20314 = mem[_13360]
                    mem[mem[64] + 36] = mem[_13360]
                    mem[mem[64] + 68 len ceil32(_20314)] = mem[_13360 + 32 len ceil32(_20314)]
                    var157001 = ceil32(_20314)
                    if ceil32(_20314) <= _20314:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20314) + 32]
                    mem[mem[64] + _20314 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20314) + _20078 + -mem[64] + 68
                s = 0
                idx = _3525 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15190 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3525 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15190]:
                            revert with 'NH{q', 50
                        mem[t + _15190 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20073 = mem[_15190]
                    _20074 = mem[_7969]
                    if mem[_7969] > !mem[_15190]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7969] + mem[_15190]):
                        revert with 'NH{q', 17
                    if mem[_7969] + mem[_15190] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21079 = mem[64]
                    mem[mem[64]] = mem[_7969] + mem[_15190] + 1
                    mem[64] = mem[64] + floor32(_20074 + _20073 + 32) + 32
                    if not _20074 + _20073 + 1:
                        _23279 = mem[_7969]
                        idx = 0
                        s = 0
                        while idx < _23279:
                            if idx >= mem[_7969]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21079]:
                                revert with 'NH{q', 50
                            mem[s + _21079 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23279 = mem[_7969]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23279 == -1:
                            revert with 'NH{q', 17
                        if _23279 >= mem[_21079]:
                            revert with 'NH{q', 50
                        mem[_23279 + _21079 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26543 = mem[_15190]
                        idx = 0
                        s = _23279 + 1
                        while idx < _26543:
                            if idx >= mem[_15190]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21079]:
                                revert with 'NH{q', 50
                            mem[s + _21079 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26543 = mem[_15190]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6237 > _3525:
                        _26991 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27167 = mem[_21079]
                        mem[mem[64] + 36] = mem[_21079]
                        mem[mem[64] + 68 len ceil32(_27167)] = mem[_21079 + 32 len ceil32(_27167)]
                        var164001 = ceil32(_27167)
                        if ceil32(_27167) <= _27167:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27167) + 32]
                        mem[mem[64] + _27167 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27167) + _26991 + -mem[64] + 68
                    mem[_21079 + 32 len _20074 + _20073 + 1] = call.data[calldata.size len _20074 + _20073 + 1]
                    _23280 = mem[_7969]
                    idx = 0
                    s = 0
                    while idx < _23280:
                        if idx >= mem[_7969]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21079]:
                            revert with 'NH{q', 50
                        mem[s + _21079 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23280 = mem[_7969]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23280 == -1:
                        revert with 'NH{q', 17
                    if _23280 >= mem[_21079]:
                        revert with 'NH{q', 50
                    mem[_23280 + _21079 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26544 = mem[_15190]
                    idx = 0
                    s = _23280 + 1
                    while idx < _26544:
                        if idx >= mem[_15190]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21079]:
                            revert with 'NH{q', 50
                        mem[s + _21079 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26544 = mem[_15190]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6237 > _3525:
                    _26992 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27168 = mem[_21079]
                    mem[mem[64] + 36] = mem[_21079]
                    mem[mem[64] + 68 len ceil32(_27168)] = mem[_21079 + 32 len ceil32(_27168)]
                    var165001 = ceil32(_27168)
                    if ceil32(_27168) <= _27168:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27168) + 32]
                    mem[mem[64] + _27168 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27168) + _26992 + -mem[64] + 68
                mem[_15190 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3525 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15190]:
                        revert with 'NH{q', 50
                    mem[t + _15190 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20075 = mem[_15190]
                _20076 = mem[_7969]
                if mem[_7969] > !mem[_15190]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7969] + mem[_15190]):
                    revert with 'NH{q', 17
                if mem[_7969] + mem[_15190] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21081 = mem[64]
                mem[mem[64]] = mem[_7969] + mem[_15190] + 1
                mem[64] = mem[64] + floor32(_20076 + _20075 + 32) + 32
                if not _20076 + _20075 + 1:
                    _23281 = mem[_7969]
                    idx = 0
                    s = 0
                    while idx < _23281:
                        if idx >= mem[_7969]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21081]:
                            revert with 'NH{q', 50
                        mem[s + _21081 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23281 = mem[_7969]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23281 == -1:
                        revert with 'NH{q', 17
                    if _23281 >= mem[_21081]:
                        revert with 'NH{q', 50
                    mem[_23281 + _21081 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26545 = mem[_15190]
                    idx = 0
                    s = _23281 + 1
                    while idx < _26545:
                        if idx >= mem[_15190]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21081]:
                            revert with 'NH{q', 50
                        mem[s + _21081 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26545 = mem[_15190]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6237 > _3525:
                    _26993 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27169 = mem[_21081]
                    mem[mem[64] + 36] = mem[_21081]
                    mem[mem[64] + 68 len ceil32(_27169)] = mem[_21081 + 32 len ceil32(_27169)]
                    var165001 = ceil32(_27169)
                    if ceil32(_27169) <= _27169:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27169) + 32]
                    mem[mem[64] + _27169 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27169) + _26993 + -mem[64] + 68
                mem[_21081 + 32 len _20076 + _20075 + 1] = call.data[calldata.size len _20076 + _20075 + 1]
                _23282 = mem[_7969]
                idx = 0
                s = 0
                while idx < _23282:
                    if idx >= mem[_7969]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21081]:
                        revert with 'NH{q', 50
                    mem[s + _21081 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7969')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23282 = mem[_7969]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23282 == -1:
                    revert with 'NH{q', 17
                if _23282 >= mem[_21081]:
                    revert with 'NH{q', 50
                mem[_23282 + _21081 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26546 = mem[_15190]
                idx = 0
                s = _23282 + 1
                while idx < _26546:
                    if idx >= mem[_15190]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21081]:
                        revert with 'NH{q', 50
                    mem[s + _21081 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15190')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26546 = mem[_15190]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6237 > _3525:
                _26994 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27170 = mem[_21081]
                mem[mem[64] + 36] = mem[_21081]
                mem[mem[64] + 68 len ceil32(_27170)] = mem[_21081 + 32 len ceil32(_27170)]
                var166001 = ceil32(_27170)
                if ceil32(_27170) <= _27170:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27170) + 32]
                mem[mem[64] + _27170 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27170) + _26994 + -mem[64] + 68
            mem[0] = 11
            mem[_2769 + 32] = address(stor11.field_0)
            idx = _2769 + 32
            s = 0
            while _2769 + (32 * stor11.length) > idx:
                mem[idx + 32] = stor11[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            _3453 = mem[64]
            mem[64] = mem[64] + (32 * stor10.length) + 32
            mem[_3453] = stor10.length
            if not stor10.length:
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3513 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3537 = mem[_3513]
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                _3578 = mem[_3453 + 32]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_3453 + 32] = mem[_3453 + 76 len 20]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_3453 + 64] = address(_3578)
                _3636 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = stor11.length
                idx = 0
                s = mem[64] + 196
                t = _2769 + 32
                while idx < stor11.length:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_3636 + 100] = this.address
                mem[_3636 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3636 + (32 * stor11.length) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4572 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4635 = mem[_4572]
                _4668 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _4635
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _4692 = mem[_3453]
                mem[mem[64] + 164] = mem[_3453]
                idx = 0
                s = mem[64] + 196
                t = _3453 + 32
                while idx < _4692:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_4668 + 100] = this.address
                mem[_4668 + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _4668 + (32 * _4692) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _6194 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _6238 = mem[_6194]
                _6302 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6302] = 26
                mem[_6302 + 32] = 'SafeMath: division by zero'
                if not _6238 / 10^18:
                    _6578 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6578] = 1
                    mem[_6578 + 32] = '0'
                    _6656 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6656] = 26
                    mem[_6656 + 32] = 'SafeMath: division by zero'
                    if not _3537 / 10^18:
                        _7002 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_7002] = 1
                        mem[_7002 + 32] = '0'
                        _7212 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_7212 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_6578]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7212]:
                                revert with 'NH{q', 50
                            mem[s + _7212 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_7212]:
                            revert with 'NH{q', 50
                        mem[_7212 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11520 = mem[_7002]
                        idx = 0
                        s = 2
                        while idx < _11520:
                            if idx >= mem[_7002]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_7212]:
                                revert with 'NH{q', 50
                            mem[s + _7212 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7002')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7002')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11520 = mem[_7002]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _11808 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11944 = mem[_7212]
                        mem[mem[64] + 36] = mem[_7212]
                        mem[mem[64] + 68 len ceil32(_11944)] = mem[_7212 + 32 len ceil32(_11944)]
                        var148001 = ceil32(_11944)
                        if ceil32(_11944) <= _11944:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11944) + 32]
                        mem[mem[64] + _11944 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11944) + _11808 + -mem[64] + 68
                    s = 0
                    idx = _3537 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7974 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3537 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7974]:
                                revert with 'NH{q', 50
                            mem[t + _7974 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11803 = mem[_7974]
                        _11804 = mem[_6578]
                        if mem[_6578] > !mem[_7974]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_6578] + mem[_7974]):
                            revert with 'NH{q', 17
                        if mem[_6578] + mem[_7974] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12347 = mem[64]
                        mem[mem[64]] = mem[_6578] + mem[_7974] + 1
                        mem[64] = mem[64] + floor32(_11804 + _11803 + 32) + 32
                        if not _11804 + _11803 + 1:
                            _14803 = mem[_6578]
                            idx = 0
                            s = 0
                            while idx < _14803:
                                if idx >= mem[_6578]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12347]:
                                    revert with 'NH{q', 50
                                mem[s + _12347 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14803 = mem[_6578]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14803 == -1:
                                revert with 'NH{q', 17
                            if _14803 >= mem[_12347]:
                                revert with 'NH{q', 50
                            mem[_14803 + _12347 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19567 = mem[_7974]
                            idx = 0
                            s = _14803 + 1
                            while idx < _19567:
                                if idx >= mem[_7974]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12347]:
                                    revert with 'NH{q', 50
                                mem[s + _12347 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19567 = mem[_7974]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6238 > _3537:
                            _20095 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20323 = mem[_12347]
                            mem[mem[64] + 36] = mem[_12347]
                            mem[mem[64] + 68 len ceil32(_20323)] = mem[_12347 + 32 len ceil32(_20323)]
                            var155001 = ceil32(_20323)
                            if ceil32(_20323) <= _20323:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20323) + 32]
                            mem[mem[64] + _20323 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20323) + _20095 + -mem[64] + 68
                        mem[_12347 + 32 len _11804 + _11803 + 1] = call.data[calldata.size len _11804 + _11803 + 1]
                        _14804 = mem[_6578]
                        idx = 0
                        s = 0
                        while idx < _14804:
                            if idx >= mem[_6578]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12347]:
                                revert with 'NH{q', 50
                            mem[s + _12347 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14804 = mem[_6578]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14804 == -1:
                            revert with 'NH{q', 17
                        if _14804 >= mem[_12347]:
                            revert with 'NH{q', 50
                        mem[_14804 + _12347 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19568 = mem[_7974]
                        idx = 0
                        s = _14804 + 1
                        while idx < _19568:
                            if idx >= mem[_7974]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12347]:
                                revert with 'NH{q', 50
                            mem[s + _12347 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19568 = mem[_7974]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _20096 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20324 = mem[_12347]
                        mem[mem[64] + 36] = mem[_12347]
                        mem[mem[64] + 68 len ceil32(_20324)] = mem[_12347 + 32 len ceil32(_20324)]
                        var156001 = ceil32(_20324)
                        if ceil32(_20324) <= _20324:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20324) + 32]
                        mem[mem[64] + _20324 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20324) + _20096 + -mem[64] + 68
                    mem[_7974 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3537 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7974]:
                            revert with 'NH{q', 50
                        mem[t + _7974 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11805 = mem[_7974]
                    _11806 = mem[_6578]
                    if mem[_6578] > !mem[_7974]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6578] + mem[_7974]):
                        revert with 'NH{q', 17
                    if mem[_6578] + mem[_7974] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12349 = mem[64]
                    mem[mem[64]] = mem[_6578] + mem[_7974] + 1
                    mem[64] = mem[64] + floor32(_11806 + _11805 + 32) + 32
                    if not _11806 + _11805 + 1:
                        _14805 = mem[_6578]
                        idx = 0
                        s = 0
                        while idx < _14805:
                            if idx >= mem[_6578]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12349]:
                                revert with 'NH{q', 50
                            mem[s + _12349 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14805 = mem[_6578]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14805 == -1:
                            revert with 'NH{q', 17
                        if _14805 >= mem[_12349]:
                            revert with 'NH{q', 50
                        mem[_14805 + _12349 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19569 = mem[_7974]
                        idx = 0
                        s = _14805 + 1
                        while idx < _19569:
                            if idx >= mem[_7974]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12349]:
                                revert with 'NH{q', 50
                            mem[s + _12349 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19569 = mem[_7974]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _20097 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20325 = mem[_12349]
                        mem[mem[64] + 36] = mem[_12349]
                        mem[mem[64] + 68 len ceil32(_20325)] = mem[_12349 + 32 len ceil32(_20325)]
                        var156001 = ceil32(_20325)
                        if ceil32(_20325) <= _20325:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20325) + 32]
                        mem[mem[64] + _20325 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20325) + _20097 + -mem[64] + 68
                    mem[_12349 + 32 len _11806 + _11805 + 1] = call.data[calldata.size len _11806 + _11805 + 1]
                    _14806 = mem[_6578]
                    idx = 0
                    s = 0
                    while idx < _14806:
                        if idx >= mem[_6578]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12349]:
                            revert with 'NH{q', 50
                        mem[s + _12349 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6578')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14806 = mem[_6578]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14806 == -1:
                        revert with 'NH{q', 17
                    if _14806 >= mem[_12349]:
                        revert with 'NH{q', 50
                    mem[_14806 + _12349 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19570 = mem[_7974]
                    idx = 0
                    s = _14806 + 1
                    while idx < _19570:
                        if idx >= mem[_7974]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12349]:
                            revert with 'NH{q', 50
                        mem[s + _12349 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7974')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19570 = mem[_7974]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6238 > _3537:
                    _20098 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20326 = mem[_12349]
                    mem[mem[64] + 36] = mem[_12349]
                    mem[mem[64] + 68 len ceil32(_20326)] = mem[_12349 + 32 len ceil32(_20326)]
                    var157001 = ceil32(_20326)
                    if ceil32(_20326) <= _20326:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20326) + 32]
                    mem[mem[64] + _20326 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20326) + _20098 + -mem[64] + 68
                s = 0
                idx = _6238 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7973 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6238 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7973]:
                            revert with 'NH{q', 50
                        mem[t + _7973 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11801 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_11801] = 26
                    mem[_11801 + 32] = 'SafeMath: division by zero'
                    if not _3537 / 10^18:
                        _12517 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_12517] = 1
                        mem[_12517 + 32] = '0'
                        _12722 = mem[_7973]
                        if mem[_7973] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7973] + 1):
                            revert with 'NH{q', 17
                        if mem[_7973] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _13365 = mem[64]
                        mem[mem[64]] = mem[_7973] + 2
                        mem[64] = mem[64] + floor32(_12722 + 33) + 32
                        if not _12722 + 2:
                            _14799 = mem[_7973]
                            idx = 0
                            s = 0
                            while idx < _14799:
                                if idx >= mem[_7973]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13365]:
                                    revert with 'NH{q', 50
                                mem[s + _13365 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14799 = mem[_7973]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14799 == -1:
                                revert with 'NH{q', 17
                            if _14799 >= mem[_13365]:
                                revert with 'NH{q', 50
                            mem[_14799 + _13365 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19563 = mem[_12517]
                            idx = 0
                            s = _14799 + 1
                            while idx < _19563:
                                if idx >= mem[_12517]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_13365]:
                                    revert with 'NH{q', 50
                                mem[s + _13365 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12517')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12517')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19563 = mem[_12517]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6238 > _3537:
                            _20087 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20319 = mem[_13365]
                            mem[mem[64] + 36] = mem[_13365]
                            mem[mem[64] + 68 len ceil32(_20319)] = mem[_13365 + 32 len ceil32(_20319)]
                            var155001 = ceil32(_20319)
                            if ceil32(_20319) <= _20319:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20319) + 32]
                            mem[mem[64] + _20319 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20319) + _20087 + -mem[64] + 68
                        mem[_13365 + 32 len _12722 + 2] = call.data[calldata.size len _12722 + 2]
                        _14800 = mem[_7973]
                        idx = 0
                        s = 0
                        while idx < _14800:
                            if idx >= mem[_7973]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13365]:
                                revert with 'NH{q', 50
                            mem[s + _13365 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14800 = mem[_7973]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14800 == -1:
                            revert with 'NH{q', 17
                        if _14800 >= mem[_13365]:
                            revert with 'NH{q', 50
                        mem[_14800 + _13365 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19564 = mem[_12517]
                        idx = 0
                        s = _14800 + 1
                        while idx < _19564:
                            if idx >= mem[_12517]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13365]:
                                revert with 'NH{q', 50
                            mem[s + _13365 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12517')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12517')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19564 = mem[_12517]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _20088 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20320 = mem[_13365]
                        mem[mem[64] + 36] = mem[_13365]
                        mem[mem[64] + 68 len ceil32(_20320)] = mem[_13365 + 32 len ceil32(_20320)]
                        var156001 = ceil32(_20320)
                        if ceil32(_20320) <= _20320:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20320) + 32]
                        mem[mem[64] + _20320 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20320) + _20088 + -mem[64] + 68
                    s = 0
                    idx = _3537 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _15197 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _3537 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_15197]:
                                revert with 'NH{q', 50
                            mem[t + _15197 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _20083 = mem[_15197]
                        _20084 = mem[_7973]
                        if mem[_7973] > !mem[_15197]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_7973] + mem[_15197]):
                            revert with 'NH{q', 17
                        if mem[_7973] + mem[_15197] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _21083 = mem[64]
                        mem[mem[64]] = mem[_7973] + mem[_15197] + 1
                        mem[64] = mem[64] + floor32(_20084 + _20083 + 32) + 32
                        if not _20084 + _20083 + 1:
                            _23283 = mem[_7973]
                            idx = 0
                            s = 0
                            while idx < _23283:
                                if idx >= mem[_7973]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21083]:
                                    revert with 'NH{q', 50
                                mem[s + _21083 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _23283 = mem[_7973]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _23283 == -1:
                                revert with 'NH{q', 17
                            if _23283 >= mem[_21083]:
                                revert with 'NH{q', 50
                            mem[_23283 + _21083 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _26547 = mem[_15197]
                            idx = 0
                            s = _23283 + 1
                            while idx < _26547:
                                if idx >= mem[_15197]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_21083]:
                                    revert with 'NH{q', 50
                                mem[s + _21083 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _26547 = mem[_15197]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _6238 > _3537:
                            _26995 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _27171 = mem[_21083]
                            mem[mem[64] + 36] = mem[_21083]
                            mem[mem[64] + 68 len ceil32(_27171)] = mem[_21083 + 32 len ceil32(_27171)]
                            var163001 = ceil32(_27171)
                            if ceil32(_27171) <= _27171:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27171) + 32]
                            mem[mem[64] + _27171 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_27171) + _26995 + -mem[64] + 68
                        mem[_21083 + 32 len _20084 + _20083 + 1] = call.data[calldata.size len _20084 + _20083 + 1]
                        _23284 = mem[_7973]
                        idx = 0
                        s = 0
                        while idx < _23284:
                            if idx >= mem[_7973]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21083]:
                                revert with 'NH{q', 50
                            mem[s + _21083 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23284 = mem[_7973]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23284 == -1:
                            revert with 'NH{q', 17
                        if _23284 >= mem[_21083]:
                            revert with 'NH{q', 50
                        mem[_23284 + _21083 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26548 = mem[_15197]
                        idx = 0
                        s = _23284 + 1
                        while idx < _26548:
                            if idx >= mem[_15197]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21083]:
                                revert with 'NH{q', 50
                            mem[s + _21083 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26548 = mem[_15197]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _26996 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27172 = mem[_21083]
                        mem[mem[64] + 36] = mem[_21083]
                        mem[mem[64] + 68 len ceil32(_27172)] = mem[_21083 + 32 len ceil32(_27172)]
                        var164001 = ceil32(_27172)
                        if ceil32(_27172) <= _27172:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27172) + 32]
                        mem[mem[64] + _27172 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27172) + _26996 + -mem[64] + 68
                    mem[_15197 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _3537 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15197]:
                            revert with 'NH{q', 50
                        mem[t + _15197 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20085 = mem[_15197]
                    _20086 = mem[_7973]
                    if mem[_7973] > !mem[_15197]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7973] + mem[_15197]):
                        revert with 'NH{q', 17
                    if mem[_7973] + mem[_15197] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21085 = mem[64]
                    mem[mem[64]] = mem[_7973] + mem[_15197] + 1
                    mem[64] = mem[64] + floor32(_20086 + _20085 + 32) + 32
                    if not _20086 + _20085 + 1:
                        _23285 = mem[_7973]
                        idx = 0
                        s = 0
                        while idx < _23285:
                            if idx >= mem[_7973]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21085]:
                                revert with 'NH{q', 50
                            mem[s + _21085 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23285 = mem[_7973]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23285 == -1:
                            revert with 'NH{q', 17
                        if _23285 >= mem[_21085]:
                            revert with 'NH{q', 50
                        mem[_23285 + _21085 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26549 = mem[_15197]
                        idx = 0
                        s = _23285 + 1
                        while idx < _26549:
                            if idx >= mem[_15197]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21085]:
                                revert with 'NH{q', 50
                            mem[s + _21085 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26549 = mem[_15197]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _26997 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27173 = mem[_21085]
                        mem[mem[64] + 36] = mem[_21085]
                        mem[mem[64] + 68 len ceil32(_27173)] = mem[_21085 + 32 len ceil32(_27173)]
                        var164001 = ceil32(_27173)
                        if ceil32(_27173) <= _27173:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27173) + 32]
                        mem[mem[64] + _27173 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27173) + _26997 + -mem[64] + 68
                    mem[_21085 + 32 len _20086 + _20085 + 1] = call.data[calldata.size len _20086 + _20085 + 1]
                    _23286 = mem[_7973]
                    idx = 0
                    s = 0
                    while idx < _23286:
                        if idx >= mem[_7973]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21085]:
                            revert with 'NH{q', 50
                        mem[s + _21085 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23286 = mem[_7973]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23286 == -1:
                        revert with 'NH{q', 17
                    if _23286 >= mem[_21085]:
                        revert with 'NH{q', 50
                    mem[_23286 + _21085 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26550 = mem[_15197]
                    idx = 0
                    s = _23286 + 1
                    while idx < _26550:
                        if idx >= mem[_15197]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21085]:
                            revert with 'NH{q', 50
                        mem[s + _21085 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15197')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26550 = mem[_15197]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6238 > _3537:
                    _26998 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27174 = mem[_21085]
                    mem[mem[64] + 36] = mem[_21085]
                    mem[mem[64] + 68 len ceil32(_27174)] = mem[_21085 + 32 len ceil32(_27174)]
                    var165001 = ceil32(_27174)
                    if ceil32(_27174) <= _27174:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27174) + 32]
                    mem[mem[64] + _27174 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27174) + _26998 + -mem[64] + 68
                mem[_7973 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6238 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7973]:
                        revert with 'NH{q', 50
                    mem[t + _7973 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11802 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11802] = 26
                mem[_11802 + 32] = 'SafeMath: division by zero'
                if not _3537 / 10^18:
                    _12518 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12518] = 1
                    mem[_12518 + 32] = '0'
                    _12724 = mem[_7973]
                    if mem[_7973] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7973] + 1):
                        revert with 'NH{q', 17
                    if mem[_7973] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13366 = mem[64]
                    mem[mem[64]] = mem[_7973] + 2
                    mem[64] = mem[64] + floor32(_12724 + 33) + 32
                    if not _12724 + 2:
                        _14801 = mem[_7973]
                        idx = 0
                        s = 0
                        while idx < _14801:
                            if idx >= mem[_7973]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13366]:
                                revert with 'NH{q', 50
                            mem[s + _13366 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14801 = mem[_7973]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14801 == -1:
                            revert with 'NH{q', 17
                        if _14801 >= mem[_13366]:
                            revert with 'NH{q', 50
                        mem[_14801 + _13366 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19565 = mem[_12518]
                        idx = 0
                        s = _14801 + 1
                        while idx < _19565:
                            if idx >= mem[_12518]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13366]:
                                revert with 'NH{q', 50
                            mem[s + _13366 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12518')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12518')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19565 = mem[_12518]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20321 = mem[_13366]
                        mem[mem[64] + 36] = mem[_13366]
                        mem[mem[64] + 68 len ceil32(_20321)] = mem[_13366 + 32 len ceil32(_20321)]
                        var156001 = ceil32(_20321)
                        if ceil32(_20321) > _20321:
                            mem[mem[64] + _20321 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20321) + 32]
                    mem[_13366 + 32 len _12724 + 2] = call.data[calldata.size len _12724 + 2]
                    _14802 = mem[_7973]
                    idx = 0
                    s = 0
                    while idx < _14802:
                        if idx >= mem[_7973]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13366]:
                            revert with 'NH{q', 50
                        mem[s + _13366 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14802 = mem[_7973]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14802 == -1:
                        revert with 'NH{q', 17
                    if _14802 >= mem[_13366]:
                        revert with 'NH{q', 50
                    mem[_14802 + _13366 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19566 = mem[_12518]
                    idx = 0
                    s = _14802 + 1
                    while idx < _19566:
                        if idx >= mem[_12518]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13366]:
                            revert with 'NH{q', 50
                        mem[s + _13366 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12518')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12518')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19566 = mem[_12518]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6238 > _3537:
                    _20094 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20322 = mem[_13366]
                    mem[mem[64] + 36] = mem[_13366]
                    mem[mem[64] + 68 len ceil32(_20322)] = mem[_13366 + 32 len ceil32(_20322)]
                    var157001 = ceil32(_20322)
                    if ceil32(_20322) <= _20322:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20322) + 32]
                    mem[mem[64] + _20322 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20322) + _20094 + -mem[64] + 68
                s = 0
                idx = _3537 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15200 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3537 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15200]:
                            revert with 'NH{q', 50
                        mem[t + _15200 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20089 = mem[_15200]
                    _20090 = mem[_7973]
                    if mem[_7973] > !mem[_15200]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7973] + mem[_15200]):
                        revert with 'NH{q', 17
                    if mem[_7973] + mem[_15200] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21087 = mem[64]
                    mem[mem[64]] = mem[_7973] + mem[_15200] + 1
                    mem[64] = mem[64] + floor32(_20090 + _20089 + 32) + 32
                    if not _20090 + _20089 + 1:
                        _23287 = mem[_7973]
                        idx = 0
                        s = 0
                        while idx < _23287:
                            if idx >= mem[_7973]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21087]:
                                revert with 'NH{q', 50
                            mem[s + _21087 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23287 = mem[_7973]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23287 == -1:
                            revert with 'NH{q', 17
                        if _23287 >= mem[_21087]:
                            revert with 'NH{q', 50
                        mem[_23287 + _21087 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26551 = mem[_15200]
                        idx = 0
                        s = _23287 + 1
                        while idx < _26551:
                            if idx >= mem[_15200]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21087]:
                                revert with 'NH{q', 50
                            mem[s + _21087 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26551 = mem[_15200]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6238 > _3537:
                        _26999 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27175 = mem[_21087]
                        mem[mem[64] + 36] = mem[_21087]
                        mem[mem[64] + 68 len ceil32(_27175)] = mem[_21087 + 32 len ceil32(_27175)]
                        var164001 = ceil32(_27175)
                        if ceil32(_27175) <= _27175:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27175) + 32]
                        mem[mem[64] + _27175 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27175) + _26999 + -mem[64] + 68
                    mem[_21087 + 32 len _20090 + _20089 + 1] = call.data[calldata.size len _20090 + _20089 + 1]
                    _23288 = mem[_7973]
                    idx = 0
                    s = 0
                    while idx < _23288:
                        if idx >= mem[_7973]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21087]:
                            revert with 'NH{q', 50
                        mem[s + _21087 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23288 = mem[_7973]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23288 == -1:
                        revert with 'NH{q', 17
                    if _23288 >= mem[_21087]:
                        revert with 'NH{q', 50
                    mem[_23288 + _21087 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26552 = mem[_15200]
                    idx = 0
                    s = _23288 + 1
                    while idx < _26552:
                        if idx >= mem[_15200]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21087]:
                            revert with 'NH{q', 50
                        mem[s + _21087 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26552 = mem[_15200]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6238 > _3537:
                    _27000 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27176 = mem[_21087]
                    mem[mem[64] + 36] = mem[_21087]
                    mem[mem[64] + 68 len ceil32(_27176)] = mem[_21087 + 32 len ceil32(_27176)]
                    var165001 = ceil32(_27176)
                    if ceil32(_27176) <= _27176:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27176) + 32]
                    mem[mem[64] + _27176 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27176) + _27000 + -mem[64] + 68
                mem[_15200 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3537 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15200]:
                        revert with 'NH{q', 50
                    mem[t + _15200 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20091 = mem[_15200]
                _20092 = mem[_7973]
                if mem[_7973] > !mem[_15200]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7973] + mem[_15200]):
                    revert with 'NH{q', 17
                if mem[_7973] + mem[_15200] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21089 = mem[64]
                mem[mem[64]] = mem[_7973] + mem[_15200] + 1
                mem[64] = mem[64] + floor32(_20092 + _20091 + 32) + 32
                if not _20092 + _20091 + 1:
                    _23289 = mem[_7973]
                    idx = 0
                    s = 0
                    while idx < _23289:
                        if idx >= mem[_7973]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21089]:
                            revert with 'NH{q', 50
                        mem[s + _21089 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23289 = mem[_7973]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23289 == -1:
                        revert with 'NH{q', 17
                    if _23289 >= mem[_21089]:
                        revert with 'NH{q', 50
                    mem[_23289 + _21089 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26553 = mem[_15200]
                    idx = 0
                    s = _23289 + 1
                    while idx < _26553:
                        if idx >= mem[_15200]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21089]:
                            revert with 'NH{q', 50
                        mem[s + _21089 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26553 = mem[_15200]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6238 > _3537:
                    _27001 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27177 = mem[_21089]
                    mem[mem[64] + 36] = mem[_21089]
                    mem[mem[64] + 68 len ceil32(_27177)] = mem[_21089 + 32 len ceil32(_27177)]
                    var165001 = ceil32(_27177)
                    if ceil32(_27177) <= _27177:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27177) + 32]
                    mem[mem[64] + _27177 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27177) + _27001 + -mem[64] + 68
                mem[_21089 + 32 len _20092 + _20091 + 1] = call.data[calldata.size len _20092 + _20091 + 1]
                _23290 = mem[_7973]
                idx = 0
                s = 0
                while idx < _23290:
                    if idx >= mem[_7973]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21089]:
                        revert with 'NH{q', 50
                    mem[s + _21089 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7973')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23290 = mem[_7973]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23290 == -1:
                    revert with 'NH{q', 17
                if _23290 >= mem[_21089]:
                    revert with 'NH{q', 50
                mem[_23290 + _21089 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26554 = mem[_15200]
                idx = 0
                s = _23290 + 1
                while idx < _26554:
                    if idx >= mem[_15200]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21089]:
                        revert with 'NH{q', 50
                    mem[s + _21089 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15200')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26554 = mem[_15200]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6238 > _3537:
                _27002 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27178 = mem[_21089]
                mem[mem[64] + 36] = mem[_21089]
                mem[mem[64] + 68 len ceil32(_27178)] = mem[_21089 + 32 len ceil32(_27178)]
                var166001 = ceil32(_27178)
                if ceil32(_27178) <= _27178:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27178) + 32]
                mem[mem[64] + _27178 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27178) + _27002 + -mem[64] + 68
            mem[0] = 10
            mem[_3453 + 32] = address(stor10.field_0)
            idx = _3453 + 32
            s = 0
            while _3453 + (32 * stor10.length) > idx:
                mem[idx + 32] = stor10[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6099 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6171 = mem[_6099]
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            _6215 = mem[_3453 + 32]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            mem[_3453 + 32] = mem[_3453 + 76 len 20]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            mem[_3453 + 64] = address(_6215)
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _6333 = mem[_2769]
            mem[mem[64] + 164] = mem[_2769]
            idx = 0
            s = mem[64] + 196
            t = _2769 + 32
            while idx < _6333:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args arg1, 0, 160, address(this.address), test266151307(), mem[mem[64] + 164 len (32 * _6333) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8253 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8493 = mem[_8253]
            _8601 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _8493
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _8679 = mem[_3453]
            mem[mem[64] + 164] = mem[_3453]
            idx = 0
            s = mem[64] + 196
            t = _3453 + 32
            while idx < _8679:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_8601 + 100] = this.address
            mem[_8601 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8601 + (32 * _8679) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12099 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _12177 = mem[_12099]
            _12351 = mem[64]
            mem[64] = mem[64] + 64
            mem[_12351] = 26
            mem[_12351 + 32] = 'SafeMath: division by zero'
            if not _12177 / 10^18:
                _13161 = mem[64]
                mem[64] = mem[64] + 64
                mem[_13161] = 1
                mem[_13161 + 32] = '0'
                _13371 = mem[64]
                mem[64] = mem[64] + 64
                mem[_13371] = 26
                mem[_13371 + 32] = 'SafeMath: division by zero'
                if not _6171 / 10^18:
                    _14205 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_14205] = 1
                    mem[_14205 + 32] = '0'
                    _14559 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_14559 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_13161]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_14559]:
                            revert with 'NH{q', 50
                        mem[s + _14559 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_14559]:
                        revert with 'NH{q', 50
                    mem[_14559 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19572 = mem[_14205]
                    idx = 0
                    s = 2
                    while idx < _19572:
                        if idx >= mem[_14205]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_14559]:
                            revert with 'NH{q', 50
                        mem[s + _14559 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14205')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14205')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19572 = mem[_14205]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _20106 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20328 = mem[_14559]
                    mem[mem[64] + 36] = mem[_14559]
                    mem[mem[64] + 68 len ceil32(_20328)] = mem[_14559 + 32 len ceil32(_20328)]
                    var152001 = ceil32(_20328)
                    if ceil32(_20328) <= _20328:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20328) + 32]
                    mem[mem[64] + _20328 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20328) + _20106 + -mem[64] + 68
                s = 0
                idx = _6171 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15208 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6171 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15208]:
                            revert with 'NH{q', 50
                        mem[t + _15208 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20101 = mem[_15208]
                    _20102 = mem[_13161]
                    if mem[_13161] > !mem[_15208]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_13161] + mem[_15208]):
                        revert with 'NH{q', 17
                    if mem[_13161] + mem[_15208] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21093 = mem[64]
                    mem[mem[64]] = mem[_13161] + mem[_15208] + 1
                    mem[64] = mem[64] + floor32(_20102 + _20101 + 32) + 32
                    if not _20102 + _20101 + 1:
                        _23295 = mem[_13161]
                        idx = 0
                        s = 0
                        while idx < _23295:
                            if idx >= mem[_13161]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21093]:
                                revert with 'NH{q', 50
                            mem[s + _21093 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23295 = mem[_13161]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23295 == -1:
                            revert with 'NH{q', 17
                        if _23295 >= mem[_21093]:
                            revert with 'NH{q', 50
                        mem[_23295 + _21093 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26559 = mem[_15208]
                        idx = 0
                        s = _23295 + 1
                        while idx < _26559:
                            if idx >= mem[_15208]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21093]:
                                revert with 'NH{q', 50
                            mem[s + _21093 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26559 = mem[_15208]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _12177 > _6171:
                        _27015 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27183 = mem[_21093]
                        mem[mem[64] + 36] = mem[_21093]
                        mem[mem[64] + 68 len ceil32(_27183)] = mem[_21093 + 32 len ceil32(_27183)]
                        var159001 = ceil32(_27183)
                        if ceil32(_27183) <= _27183:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27183) + 32]
                        mem[mem[64] + _27183 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27183) + _27015 + -mem[64] + 68
                    mem[_21093 + 32 len _20102 + _20101 + 1] = call.data[calldata.size len _20102 + _20101 + 1]
                    _23296 = mem[_13161]
                    idx = 0
                    s = 0
                    while idx < _23296:
                        if idx >= mem[_13161]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21093]:
                            revert with 'NH{q', 50
                        mem[s + _21093 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23296 = mem[_13161]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23296 == -1:
                        revert with 'NH{q', 17
                    if _23296 >= mem[_21093]:
                        revert with 'NH{q', 50
                    mem[_23296 + _21093 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26560 = mem[_15208]
                    idx = 0
                    s = _23296 + 1
                    while idx < _26560:
                        if idx >= mem[_15208]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21093]:
                            revert with 'NH{q', 50
                        mem[s + _21093 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26560 = mem[_15208]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _27016 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27184 = mem[_21093]
                    mem[mem[64] + 36] = mem[_21093]
                    mem[mem[64] + 68 len ceil32(_27184)] = mem[_21093 + 32 len ceil32(_27184)]
                    var160001 = ceil32(_27184)
                    if ceil32(_27184) <= _27184:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27184) + 32]
                    mem[mem[64] + _27184 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27184) + _27016 + -mem[64] + 68
                mem[_15208 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6171 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15208]:
                        revert with 'NH{q', 50
                    mem[t + _15208 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20103 = mem[_15208]
                _20104 = mem[_13161]
                if mem[_13161] > !mem[_15208]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_13161] + mem[_15208]):
                    revert with 'NH{q', 17
                if mem[_13161] + mem[_15208] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21095 = mem[64]
                mem[mem[64]] = mem[_13161] + mem[_15208] + 1
                mem[64] = mem[64] + floor32(_20104 + _20103 + 32) + 32
                if not _20104 + _20103 + 1:
                    _23297 = mem[_13161]
                    idx = 0
                    s = 0
                    while idx < _23297:
                        if idx >= mem[_13161]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21095]:
                            revert with 'NH{q', 50
                        mem[s + _21095 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23297 = mem[_13161]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23297 == -1:
                        revert with 'NH{q', 17
                    if _23297 >= mem[_21095]:
                        revert with 'NH{q', 50
                    mem[_23297 + _21095 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26561 = mem[_15208]
                    idx = 0
                    s = _23297 + 1
                    while idx < _26561:
                        if idx >= mem[_15208]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21095]:
                            revert with 'NH{q', 50
                        mem[s + _21095 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26561 = mem[_15208]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _27017 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27185 = mem[_21095]
                    mem[mem[64] + 36] = mem[_21095]
                    mem[mem[64] + 68 len ceil32(_27185)] = mem[_21095 + 32 len ceil32(_27185)]
                    var160001 = ceil32(_27185)
                    if ceil32(_27185) <= _27185:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27185) + 32]
                    mem[mem[64] + _27185 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27185) + _27017 + -mem[64] + 68
                mem[_21095 + 32 len _20104 + _20103 + 1] = call.data[calldata.size len _20104 + _20103 + 1]
                _23298 = mem[_13161]
                idx = 0
                s = 0
                while idx < _23298:
                    if idx >= mem[_13161]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21095]:
                        revert with 'NH{q', 50
                    mem[s + _21095 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13161')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23298 = mem[_13161]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23298 == -1:
                    revert with 'NH{q', 17
                if _23298 >= mem[_21095]:
                    revert with 'NH{q', 50
                mem[_23298 + _21095 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26562 = mem[_15208]
                idx = 0
                s = _23298 + 1
                while idx < _26562:
                    if idx >= mem[_15208]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21095]:
                        revert with 'NH{q', 50
                    mem[s + _21095 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15208')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26562 = mem[_15208]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12177 > _6171:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27186 = mem[_21095]
                mem[mem[64] + 36] = mem[_21095]
                mem[mem[64] + 68 len ceil32(_27186)] = mem[_21095 + 32 len ceil32(_27186)]
                var161001 = ceil32(_27186)
                if ceil32(_27186) > _27186:
                    mem[mem[64] + _27186 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27186) + 32]
            s = 0
            idx = _12177 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15207 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _12177 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15207]:
                        revert with 'NH{q', 50
                    mem[t + _15207 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20099 = mem[64]
                mem[64] = mem[64] + 64
                mem[_20099] = 26
                mem[_20099 + 32] = 'SafeMath: division by zero'
                if not _6171 / 10^18:
                    _21283 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_21283] = 1
                    mem[_21283 + 32] = '0'
                    _21512 = mem[_15207]
                    if mem[_15207] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_15207] + 1):
                        revert with 'NH{q', 17
                    if mem[_15207] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _22279 = mem[64]
                    mem[mem[64]] = mem[_15207] + 2
                    mem[64] = mem[64] + floor32(_21512 + 33) + 32
                    if not _21512 + 2:
                        _23291 = mem[_15207]
                        idx = 0
                        s = 0
                        while idx < _23291:
                            if idx >= mem[_15207]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_22279]:
                                revert with 'NH{q', 50
                            mem[s + _22279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23291 = mem[_15207]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23291 == -1:
                            revert with 'NH{q', 17
                        if _23291 >= mem[_22279]:
                            revert with 'NH{q', 50
                        mem[_23291 + _22279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26555 = mem[_21283]
                        idx = 0
                        s = _23291 + 1
                        while idx < _26555:
                            if idx >= mem[_21283]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_22279]:
                                revert with 'NH{q', 50
                            mem[s + _22279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21283')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21283')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26555 = mem[_21283]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _12177 > _6171:
                        _27007 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27179 = mem[_22279]
                        mem[mem[64] + 36] = mem[_22279]
                        mem[mem[64] + 68 len ceil32(_27179)] = mem[_22279 + 32 len ceil32(_27179)]
                        var159001 = ceil32(_27179)
                        if ceil32(_27179) <= _27179:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27179) + 32]
                        mem[mem[64] + _27179 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27179) + _27007 + -mem[64] + 68
                    mem[_22279 + 32 len _21512 + 2] = call.data[calldata.size len _21512 + 2]
                    _23292 = mem[_15207]
                    idx = 0
                    s = 0
                    while idx < _23292:
                        if idx >= mem[_15207]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22279]:
                            revert with 'NH{q', 50
                        mem[s + _22279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23292 = mem[_15207]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23292 == -1:
                        revert with 'NH{q', 17
                    if _23292 >= mem[_22279]:
                        revert with 'NH{q', 50
                    mem[_23292 + _22279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26556 = mem[_21283]
                    idx = 0
                    s = _23292 + 1
                    while idx < _26556:
                        if idx >= mem[_21283]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22279]:
                            revert with 'NH{q', 50
                        mem[s + _22279 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21283')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21283')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26556 = mem[_21283]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _27008 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27180 = mem[_22279]
                    mem[mem[64] + 36] = mem[_22279]
                    mem[mem[64] + 68 len ceil32(_27180)] = mem[_22279 + 32 len ceil32(_27180)]
                    var160001 = ceil32(_27180)
                    if ceil32(_27180) <= _27180:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27180) + 32]
                    mem[mem[64] + _27180 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27180) + _27008 + -mem[64] + 68
                s = 0
                idx = _6171 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _23739 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _6171 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_23739]:
                            revert with 'NH{q', 50
                        mem[t + _23739 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _27003 = mem[_23739]
                    _27004 = mem[_15207]
                    if mem[_15207] > !mem[_23739]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_15207] + mem[_23739]):
                        revert with 'NH{q', 17
                    if mem[_15207] + mem[_23739] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _27851 = mem[64]
                    mem[mem[64]] = mem[_15207] + mem[_23739] + 1
                    mem[64] = mem[64] + floor32(_27004 + _27003 + 32) + 32
                    if not _27004 + _27003 + 1:
                        _28571 = mem[_15207]
                        idx = 0
                        s = 0
                        while idx < _28571:
                            if idx >= mem[_15207]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_27851]:
                                revert with 'NH{q', 50
                            mem[s + _27851 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _28571 = mem[_15207]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _28571 == -1:
                            revert with 'NH{q', 17
                        if _28571 >= mem[_27851]:
                            revert with 'NH{q', 50
                        mem[_28571 + _27851 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _29675 = mem[_23739]
                        idx = 0
                        s = _28571 + 1
                        while idx < _29675:
                            if idx >= mem[_23739]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_27851]:
                                revert with 'NH{q', 50
                            mem[s + _27851 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _29675 = mem[_23739]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _12177 > _6171:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _29867 = mem[_27851]
                        mem[mem[64] + 36] = mem[_27851]
                        mem[mem[64] + 68 len ceil32(_29867)] = mem[_27851 + 32 len ceil32(_29867)]
                        var167001 = ceil32(_29867)
                        if ceil32(_29867) > _29867:
                            mem[mem[64] + _29867 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29867) + 32]
                    mem[_27851 + 32 len _27004 + _27003 + 1] = call.data[calldata.size len _27004 + _27003 + 1]
                    _28572 = mem[_15207]
                    idx = 0
                    s = 0
                    while idx < _28572:
                        if idx >= mem[_15207]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27851]:
                            revert with 'NH{q', 50
                        mem[s + _27851 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28572 = mem[_15207]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28572 == -1:
                        revert with 'NH{q', 17
                    if _28572 >= mem[_27851]:
                        revert with 'NH{q', 50
                    mem[_28572 + _27851 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29676 = mem[_23739]
                    idx = 0
                    s = _28572 + 1
                    while idx < _29676:
                        if idx >= mem[_23739]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27851]:
                            revert with 'NH{q', 50
                        mem[s + _27851 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29676 = mem[_23739]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _29820 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29868 = mem[_27851]
                    mem[mem[64] + 36] = mem[_27851]
                    mem[mem[64] + 68 len ceil32(_29868)] = mem[_27851 + 32 len ceil32(_29868)]
                    var168001 = ceil32(_29868)
                    if ceil32(_29868) <= _29868:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29868) + 32]
                    mem[mem[64] + _29868 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29868) + _29820 + -mem[64] + 68
                mem[_23739 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _6171 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23739]:
                        revert with 'NH{q', 50
                    mem[t + _23739 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _27005 = mem[_23739]
                _27006 = mem[_15207]
                if mem[_15207] > !mem[_23739]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15207] + mem[_23739]):
                    revert with 'NH{q', 17
                if mem[_15207] + mem[_23739] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27853 = mem[64]
                mem[mem[64]] = mem[_15207] + mem[_23739] + 1
                mem[64] = mem[64] + floor32(_27006 + _27005 + 32) + 32
                if not _27006 + _27005 + 1:
                    _28573 = mem[_15207]
                    idx = 0
                    s = 0
                    while idx < _28573:
                        if idx >= mem[_15207]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27853]:
                            revert with 'NH{q', 50
                        mem[s + _27853 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28573 = mem[_15207]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28573 == -1:
                        revert with 'NH{q', 17
                    if _28573 >= mem[_27853]:
                        revert with 'NH{q', 50
                    mem[_28573 + _27853 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29677 = mem[_23739]
                    idx = 0
                    s = _28573 + 1
                    while idx < _29677:
                        if idx >= mem[_23739]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27853]:
                            revert with 'NH{q', 50
                        mem[s + _27853 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29677 = mem[_23739]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _29821 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29869 = mem[_27853]
                    mem[mem[64] + 36] = mem[_27853]
                    mem[mem[64] + 68 len ceil32(_29869)] = mem[_27853 + 32 len ceil32(_29869)]
                    var168001 = ceil32(_29869)
                    if ceil32(_29869) <= _29869:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29869) + 32]
                    mem[mem[64] + _29869 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29869) + _29821 + -mem[64] + 68
                mem[_27853 + 32 len _27006 + _27005 + 1] = call.data[calldata.size len _27006 + _27005 + 1]
                _28574 = mem[_15207]
                idx = 0
                s = 0
                while idx < _28574:
                    if idx >= mem[_15207]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27853]:
                        revert with 'NH{q', 50
                    mem[s + _27853 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28574 = mem[_15207]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28574 == -1:
                    revert with 'NH{q', 17
                if _28574 >= mem[_27853]:
                    revert with 'NH{q', 50
                mem[_28574 + _27853 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29678 = mem[_23739]
                idx = 0
                s = _28574 + 1
                while idx < _29678:
                    if idx >= mem[_23739]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27853]:
                        revert with 'NH{q', 50
                    mem[s + _27853 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23739')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29678 = mem[_23739]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12177 > _6171:
                _29822 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29870 = mem[_27853]
                mem[mem[64] + 36] = mem[_27853]
                mem[mem[64] + 68 len ceil32(_29870)] = mem[_27853 + 32 len ceil32(_29870)]
                var169001 = ceil32(_29870)
                if ceil32(_29870) <= _29870:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29870) + 32]
                mem[mem[64] + _29870 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29870) + _29822 + -mem[64] + 68
            mem[_15207 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _12177 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15207]:
                    revert with 'NH{q', 50
                mem[t + _15207 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20100 = mem[64]
            mem[64] = mem[64] + 64
            mem[_20100] = 26
            mem[_20100 + 32] = 'SafeMath: division by zero'
            if not _6171 / 10^18:
                _21284 = mem[64]
                mem[64] = mem[64] + 64
                mem[_21284] = 1
                mem[_21284 + 32] = '0'
                _21514 = mem[_15207]
                if mem[_15207] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15207] + 1):
                    revert with 'NH{q', 17
                if mem[_15207] + 2 > test266151307():
                    revert with 'NH{q', 65
                _22280 = mem[64]
                mem[mem[64]] = mem[_15207] + 2
                mem[64] = mem[64] + floor32(_21514 + 33) + 32
                if not _21514 + 2:
                    _23293 = mem[_15207]
                    idx = 0
                    s = 0
                    while idx < _23293:
                        if idx >= mem[_15207]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22280]:
                            revert with 'NH{q', 50
                        mem[s + _22280 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23293 = mem[_15207]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23293 == -1:
                        revert with 'NH{q', 17
                    if _23293 >= mem[_22280]:
                        revert with 'NH{q', 50
                    mem[_23293 + _22280 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26557 = mem[_21284]
                    idx = 0
                    s = _23293 + 1
                    while idx < _26557:
                        if idx >= mem[_21284]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22280]:
                            revert with 'NH{q', 50
                        mem[s + _22280 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21284')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21284')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26557 = mem[_21284]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _27013 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27181 = mem[_22280]
                    mem[mem[64] + 36] = mem[_22280]
                    mem[mem[64] + 68 len ceil32(_27181)] = mem[_22280 + 32 len ceil32(_27181)]
                    var160001 = ceil32(_27181)
                    if ceil32(_27181) <= _27181:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27181) + 32]
                    mem[mem[64] + _27181 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27181) + _27013 + -mem[64] + 68
                mem[_22280 + 32 len _21514 + 2] = call.data[calldata.size len _21514 + 2]
                _23294 = mem[_15207]
                idx = 0
                s = 0
                while idx < _23294:
                    if idx >= mem[_15207]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22280]:
                        revert with 'NH{q', 50
                    mem[s + _22280 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23294 = mem[_15207]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23294 == -1:
                    revert with 'NH{q', 17
                if _23294 >= mem[_22280]:
                    revert with 'NH{q', 50
                mem[_23294 + _22280 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26558 = mem[_21284]
                idx = 0
                s = _23294 + 1
                while idx < _26558:
                    if idx >= mem[_21284]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22280]:
                        revert with 'NH{q', 50
                    mem[s + _22280 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21284')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21284')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26558 = mem[_21284]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12177 > _6171:
                _27014 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27182 = mem[_22280]
                mem[mem[64] + 36] = mem[_22280]
                mem[mem[64] + 68 len ceil32(_27182)] = mem[_22280 + 32 len ceil32(_27182)]
                var161001 = ceil32(_27182)
                if ceil32(_27182) <= _27182:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27182) + 32]
                mem[mem[64] + _27182 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27182) + _27014 + -mem[64] + 68
            s = 0
            idx = _6171 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _23742 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6171 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23742]:
                        revert with 'NH{q', 50
                    mem[t + _23742 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _27009 = mem[_23742]
                _27010 = mem[_15207]
                if mem[_15207] > !mem[_23742]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15207] + mem[_23742]):
                    revert with 'NH{q', 17
                if mem[_15207] + mem[_23742] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27855 = mem[64]
                mem[mem[64]] = mem[_15207] + mem[_23742] + 1
                mem[64] = mem[64] + floor32(_27010 + _27009 + 32) + 32
                if not _27010 + _27009 + 1:
                    _28575 = mem[_15207]
                    idx = 0
                    s = 0
                    while idx < _28575:
                        if idx >= mem[_15207]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27855]:
                            revert with 'NH{q', 50
                        mem[s + _27855 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28575 = mem[_15207]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28575 == -1:
                        revert with 'NH{q', 17
                    if _28575 >= mem[_27855]:
                        revert with 'NH{q', 50
                    mem[_28575 + _27855 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29679 = mem[_23742]
                    idx = 0
                    s = _28575 + 1
                    while idx < _29679:
                        if idx >= mem[_23742]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27855]:
                            revert with 'NH{q', 50
                        mem[s + _27855 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29679 = mem[_23742]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12177 > _6171:
                    _29823 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29871 = mem[_27855]
                    mem[mem[64] + 36] = mem[_27855]
                    mem[mem[64] + 68 len ceil32(_29871)] = mem[_27855 + 32 len ceil32(_29871)]
                    var168001 = ceil32(_29871)
                    if ceil32(_29871) <= _29871:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29871) + 32]
                    mem[mem[64] + _29871 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29871) + _29823 + -mem[64] + 68
                mem[_27855 + 32 len _27010 + _27009 + 1] = call.data[calldata.size len _27010 + _27009 + 1]
                _28576 = mem[_15207]
                idx = 0
                s = 0
                while idx < _28576:
                    if idx >= mem[_15207]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27855]:
                        revert with 'NH{q', 50
                    mem[s + _27855 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28576 = mem[_15207]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28576 == -1:
                    revert with 'NH{q', 17
                if _28576 >= mem[_27855]:
                    revert with 'NH{q', 50
                mem[_28576 + _27855 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29680 = mem[_23742]
                idx = 0
                s = _28576 + 1
                while idx < _29680:
                    if idx >= mem[_23742]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27855]:
                        revert with 'NH{q', 50
                    mem[s + _27855 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29680 = mem[_23742]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12177 > _6171:
                _29824 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29872 = mem[_27855]
                mem[mem[64] + 36] = mem[_27855]
                mem[mem[64] + 68 len ceil32(_29872)] = mem[_27855 + 32 len ceil32(_29872)]
                var169001 = ceil32(_29872)
                if ceil32(_29872) <= _29872:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29872) + 32]
                mem[mem[64] + _29872 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29872) + _29824 + -mem[64] + 68
            mem[_23742 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6171 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23742]:
                    revert with 'NH{q', 50
                mem[t + _23742 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _27011 = mem[_23742]
            _27012 = mem[_15207]
            if mem[_15207] > !mem[_23742]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15207] + mem[_23742]):
                revert with 'NH{q', 17
            if mem[_15207] + mem[_23742] + 1 > test266151307():
                revert with 'NH{q', 65
            _27857 = mem[64]
            mem[mem[64]] = mem[_15207] + mem[_23742] + 1
            mem[64] = mem[64] + floor32(_27012 + _27011 + 32) + 32
            if not _27012 + _27011 + 1:
                _28577 = mem[_15207]
                idx = 0
                s = 0
                while idx < _28577:
                    if idx >= mem[_15207]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27857]:
                        revert with 'NH{q', 50
                    mem[s + _27857 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28577 = mem[_15207]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28577 == -1:
                    revert with 'NH{q', 17
                if _28577 >= mem[_27857]:
                    revert with 'NH{q', 50
                mem[_28577 + _27857 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29681 = mem[_23742]
                idx = 0
                s = _28577 + 1
                while idx < _29681:
                    if idx >= mem[_23742]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27857]:
                        revert with 'NH{q', 50
                    mem[s + _27857 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29681 = mem[_23742]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12177 > _6171:
                _29825 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29873 = mem[_27857]
                mem[mem[64] + 36] = mem[_27857]
                mem[mem[64] + 68 len ceil32(_29873)] = mem[_27857 + 32 len ceil32(_29873)]
                var169001 = ceil32(_29873)
                if ceil32(_29873) <= _29873:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29873) + 32]
                mem[mem[64] + _29873 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29873) + _29825 + -mem[64] + 68
            mem[_27857 + 32 len _27012 + _27011 + 1] = call.data[calldata.size len _27012 + _27011 + 1]
            _28578 = mem[_15207]
            idx = 0
            s = 0
            while idx < _28578:
                if idx >= mem[_15207]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27857]:
                    revert with 'NH{q', 50
                mem[s + _27857 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15207')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28578 = mem[_15207]
                idx = idx + 1
                s = s + 1
                continue 
            if _28578 == -1:
                revert with 'NH{q', 17
            if _28578 >= mem[_27857]:
                revert with 'NH{q', 50
            mem[_28578 + _27857 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29682 = mem[_23742]
            idx = 0
            s = _28578 + 1
            while idx < _29682:
                if idx >= mem[_23742]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27857]:
                    revert with 'NH{q', 50
                mem[s + _27857 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23742')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29682 = mem[_23742]
                idx = idx + 1
                s = s + 1
                continue 
            if _12177 > _6171:
            _29826 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29874 = mem[_27857]
            mem[mem[64] + 36] = mem[_27857]
            mem[mem[64] + 68 len ceil32(_29874)] = mem[_27857 + 32 len ceil32(_29874)]
            var170001 = ceil32(_29874)
            if ceil32(_29874) <= _29874:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29874) + 32]
            mem[mem[64] + _29874 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29874) + _29826 + -mem[64] + 68
        _2770 = mem[64]
        mem[64] = mem[64] + (32 * stor10.length) + 32
        mem[_2770] = stor10.length
        if not stor10.length:
            _2779 = mem[64]
            mem[64] = mem[64] + (32 * stor11.length) + 32
            mem[_2779] = stor11.length
            if not stor11.length:
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2806 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2812 = mem[_2806]
                if 0 >= stor11.length:
                    revert with 'NH{q', 50
                _2827 = mem[_2779 + 32]
                if 1 >= stor11.length:
                    revert with 'NH{q', 50
                if 0 >= stor11.length:
                    revert with 'NH{q', 50
                mem[_2779 + 32] = mem[_2779 + 76 len 20]
                if 1 >= stor11.length:
                    revert with 'NH{q', 50
                mem[_2779 + 64] = address(_2827)
                _2854 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = stor10.length
                idx = 0
                s = mem[64] + 196
                t = _2770 + 32
                while idx < stor10.length:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_2854 + 100] = this.address
                mem[_2854 + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _2854 + (32 * stor10.length) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3184 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3190 = mem[_3184]
                _3196 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3190
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _3202 = mem[_2779]
                mem[mem[64] + 164] = mem[_2779]
                idx = 0
                s = mem[64] + 196
                t = _2779 + 32
                while idx < _3202:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_3196 + 100] = this.address
                mem[_3196 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3196 + (32 * _3202) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3538 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3580 = mem[_3538]
                _3622 = mem[64]
                mem[64] = mem[64] + 64
                mem[_3622] = 26
                mem[_3622 + 32] = 'SafeMath: division by zero'
                if not _3580 / 10^18:
                    _3715 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3715] = 1
                    mem[_3715 + 32] = '0'
                    _3742 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3742] = 26
                    mem[_3742 + 32] = 'SafeMath: division by zero'
                    if not _2812 / 10^18:
                        _3829 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3829] = 1
                        mem[_3829 + 32] = '0'
                        _3862 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_3862 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_3715]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_3862]:
                                revert with 'NH{q', 50
                            mem[s + _3862 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_3862]:
                            revert with 'NH{q', 50
                        mem[_3862 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _6008 = mem[_3829]
                        idx = 0
                        s = 2
                        while idx < _6008:
                            if idx >= mem[_3829]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_3862]:
                                revert with 'NH{q', 50
                            mem[s + _3862 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3829')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3829')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _6008 = mem[_3829]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        _6107 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _6146 = mem[_3862]
                        mem[mem[64] + 36] = mem[_3862]
                        mem[mem[64] + 68 len ceil32(_6146)] = mem[_3862 + 32 len ceil32(_6146)]
                        if ceil32(_6146) <= _6146:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_6146) + 32]
                        mem[mem[64] + _6146 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_6146) + _6107 + -mem[64] + 68
                    s = 0
                    idx = _2812 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _4496 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2812 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4496]:
                                revert with 'NH{q', 50
                            mem[t + _4496 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6102 = mem[_4496]
                        _6103 = mem[_3715]
                        if mem[_3715] > !mem[_4496]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_3715] + mem[_4496]):
                            revert with 'NH{q', 17
                        if mem[_3715] + mem[_4496] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _6306 = mem[64]
                        mem[mem[64]] = mem[_3715] + mem[_4496] + 1
                        mem[64] = mem[64] + floor32(_6103 + _6102 + 32) + 32
                        if not _6103 + _6102 + 1:
                            _7799 = mem[_3715]
                            idx = 0
                            s = 0
                            while idx < _7799:
                                if idx >= mem[_3715]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6306]:
                                    revert with 'NH{q', 50
                                mem[s + _6306 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7799 = mem[_3715]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7799 == -1:
                                revert with 'NH{q', 17
                            if _7799 >= mem[_6306]:
                                revert with 'NH{q', 50
                            mem[_7799 + _6306 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11525 = mem[_4496]
                            idx = 0
                            s = _7799 + 1
                            while idx < _11525:
                                if idx >= mem[_4496]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6306]:
                                    revert with 'NH{q', 50
                                mem[s + _6306 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11525 = mem[_4496]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3580 > _2812:
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11951 = mem[_6306]
                            mem[mem[64] + 36] = mem[_6306]
                            mem[mem[64] + 68 len ceil32(_11951)] = mem[_6306 + 32 len ceil32(_11951)]
                            var151001 = ceil32(_11951)
                            if ceil32(_11951) > _11951:
                                mem[mem[64] + _11951 + 68] = 0
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11951) + 32]
                        mem[_6306 + 32 len _6103 + _6102 + 1] = call.data[calldata.size len _6103 + _6102 + 1]
                        _7800 = mem[_3715]
                        idx = 0
                        s = 0
                        while idx < _7800:
                            if idx >= mem[_3715]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6306]:
                                revert with 'NH{q', 50
                            mem[s + _6306 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7800 = mem[_3715]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7800 == -1:
                            revert with 'NH{q', 17
                        if _7800 >= mem[_6306]:
                            revert with 'NH{q', 50
                        mem[_7800 + _6306 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11526 = mem[_4496]
                        idx = 0
                        s = _7800 + 1
                        while idx < _11526:
                            if idx >= mem[_4496]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6306]:
                                revert with 'NH{q', 50
                            mem[s + _6306 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11526 = mem[_4496]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        _11822 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11952 = mem[_6306]
                        mem[mem[64] + 36] = mem[_6306]
                        mem[mem[64] + 68 len ceil32(_11952)] = mem[_6306 + 32 len ceil32(_11952)]
                        var152001 = ceil32(_11952)
                        if ceil32(_11952) <= _11952:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11952) + 32]
                        mem[mem[64] + _11952 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11952) + _11822 + -mem[64] + 68
                    mem[_4496 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2812 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4496]:
                            revert with 'NH{q', 50
                        mem[t + _4496 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6104 = mem[_4496]
                    _6105 = mem[_3715]
                    if mem[_3715] > !mem[_4496]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_3715] + mem[_4496]):
                        revert with 'NH{q', 17
                    if mem[_3715] + mem[_4496] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _6308 = mem[64]
                    mem[mem[64]] = mem[_3715] + mem[_4496] + 1
                    mem[64] = mem[64] + floor32(_6105 + _6104 + 32) + 32
                    if not _6105 + _6104 + 1:
                        _7801 = mem[_3715]
                        idx = 0
                        s = 0
                        while idx < _7801:
                            if idx >= mem[_3715]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6308]:
                                revert with 'NH{q', 50
                            mem[s + _6308 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7801 = mem[_3715]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7801 == -1:
                            revert with 'NH{q', 17
                        if _7801 >= mem[_6308]:
                            revert with 'NH{q', 50
                        mem[_7801 + _6308 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11527 = mem[_4496]
                        idx = 0
                        s = _7801 + 1
                        while idx < _11527:
                            if idx >= mem[_4496]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6308]:
                                revert with 'NH{q', 50
                            mem[s + _6308 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11527 = mem[_4496]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11953 = mem[_6308]
                        mem[mem[64] + 36] = mem[_6308]
                        mem[mem[64] + 68 len ceil32(_11953)] = mem[_6308 + 32 len ceil32(_11953)]
                        var152001 = ceil32(_11953)
                        if ceil32(_11953) > _11953:
                            mem[mem[64] + _11953 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11953) + 32]
                    mem[_6308 + 32 len _6105 + _6104 + 1] = call.data[calldata.size len _6105 + _6104 + 1]
                    _7802 = mem[_3715]
                    idx = 0
                    s = 0
                    while idx < _7802:
                        if idx >= mem[_3715]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6308]:
                            revert with 'NH{q', 50
                        mem[s + _6308 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3715')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7802 = mem[_3715]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7802 == -1:
                        revert with 'NH{q', 17
                    if _7802 >= mem[_6308]:
                        revert with 'NH{q', 50
                    mem[_7802 + _6308 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11528 = mem[_4496]
                    idx = 0
                    s = _7802 + 1
                    while idx < _11528:
                        if idx >= mem[_4496]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6308]:
                            revert with 'NH{q', 50
                        mem[s + _6308 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4496')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11528 = mem[_4496]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3580 > _2812:
                    _11824 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11954 = mem[_6308]
                    mem[mem[64] + 36] = mem[_6308]
                    mem[mem[64] + 68 len ceil32(_11954)] = mem[_6308 + 32 len ceil32(_11954)]
                    var153001 = ceil32(_11954)
                    if ceil32(_11954) <= _11954:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11954) + 32]
                    mem[mem[64] + _11954 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11954) + _11824 + -mem[64] + 68
                s = 0
                idx = _3580 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _4495 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3580 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4495]:
                            revert with 'NH{q', 50
                        mem[t + _4495 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6100 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6100] = 26
                    mem[_6100 + 32] = 'SafeMath: division by zero'
                    if not _2812 / 10^18:
                        _6370 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6370] = 1
                        mem[_6370 + 32] = '0'
                        _6440 = mem[_4495]
                        if mem[_4495] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4495] + 1):
                            revert with 'NH{q', 17
                        if mem[_4495] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _6658 = mem[64]
                        mem[mem[64]] = mem[_4495] + 2
                        mem[64] = mem[64] + floor32(_6440 + 33) + 32
                        if not _6440 + 2:
                            _7795 = mem[_4495]
                            idx = 0
                            s = 0
                            while idx < _7795:
                                if idx >= mem[_4495]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6658]:
                                    revert with 'NH{q', 50
                                mem[s + _6658 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7795 = mem[_4495]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7795 == -1:
                                revert with 'NH{q', 17
                            if _7795 >= mem[_6658]:
                                revert with 'NH{q', 50
                            mem[_7795 + _6658 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11521 = mem[_6370]
                            idx = 0
                            s = _7795 + 1
                            while idx < _11521:
                                if idx >= mem[_6370]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6658]:
                                    revert with 'NH{q', 50
                                mem[s + _6658 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6370')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6370')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11521 = mem[_6370]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3580 > _2812:
                            _11813 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11947 = mem[_6658]
                            mem[mem[64] + 36] = mem[_6658]
                            mem[mem[64] + 68 len ceil32(_11947)] = mem[_6658 + 32 len ceil32(_11947)]
                            var151001 = ceil32(_11947)
                            if ceil32(_11947) <= _11947:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11947) + 32]
                            mem[mem[64] + _11947 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11947) + _11813 + -mem[64] + 68
                        mem[_6658 + 32 len _6440 + 2] = call.data[calldata.size len _6440 + 2]
                        _7796 = mem[_4495]
                        idx = 0
                        s = 0
                        while idx < _7796:
                            if idx >= mem[_4495]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6658]:
                                revert with 'NH{q', 50
                            mem[s + _6658 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7796 = mem[_4495]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7796 == -1:
                            revert with 'NH{q', 17
                        if _7796 >= mem[_6658]:
                            revert with 'NH{q', 50
                        mem[_7796 + _6658 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11522 = mem[_6370]
                        idx = 0
                        s = _7796 + 1
                        while idx < _11522:
                            if idx >= mem[_6370]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6658]:
                                revert with 'NH{q', 50
                            mem[s + _6658 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6370')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6370')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11522 = mem[_6370]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        _11814 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11948 = mem[_6658]
                        mem[mem[64] + 36] = mem[_6658]
                        mem[mem[64] + 68 len ceil32(_11948)] = mem[_6658 + 32 len ceil32(_11948)]
                        var152001 = ceil32(_11948)
                        if ceil32(_11948) <= _11948:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11948) + 32]
                        mem[mem[64] + _11948 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11948) + _11814 + -mem[64] + 68
                    s = 0
                    idx = _2812 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7978 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2812 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7978]:
                                revert with 'NH{q', 50
                            mem[t + _7978 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11809 = mem[_7978]
                        _11810 = mem[_4495]
                        if mem[_4495] > !mem[_7978]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4495] + mem[_7978]):
                            revert with 'NH{q', 17
                        if mem[_4495] + mem[_7978] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12352 = mem[64]
                        mem[mem[64]] = mem[_4495] + mem[_7978] + 1
                        mem[64] = mem[64] + floor32(_11810 + _11809 + 32) + 32
                        if not _11810 + _11809 + 1:
                            _14809 = mem[_4495]
                            idx = 0
                            s = 0
                            while idx < _14809:
                                if idx >= mem[_4495]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12352]:
                                    revert with 'NH{q', 50
                                mem[s + _12352 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14809 = mem[_4495]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14809 == -1:
                                revert with 'NH{q', 17
                            if _14809 >= mem[_12352]:
                                revert with 'NH{q', 50
                            mem[_14809 + _12352 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19573 = mem[_7978]
                            idx = 0
                            s = _14809 + 1
                            while idx < _19573:
                                if idx >= mem[_7978]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12352]:
                                    revert with 'NH{q', 50
                                mem[s + _12352 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19573 = mem[_7978]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3580 > _2812:
                            _20107 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20329 = mem[_12352]
                            mem[mem[64] + 36] = mem[_12352]
                            mem[mem[64] + 68 len ceil32(_20329)] = mem[_12352 + 32 len ceil32(_20329)]
                            var159001 = ceil32(_20329)
                            if ceil32(_20329) <= _20329:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20329) + 32]
                            mem[mem[64] + _20329 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20329) + _20107 + -mem[64] + 68
                        mem[_12352 + 32 len _11810 + _11809 + 1] = call.data[calldata.size len _11810 + _11809 + 1]
                        _14810 = mem[_4495]
                        idx = 0
                        s = 0
                        while idx < _14810:
                            if idx >= mem[_4495]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12352]:
                                revert with 'NH{q', 50
                            mem[s + _12352 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14810 = mem[_4495]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14810 == -1:
                            revert with 'NH{q', 17
                        if _14810 >= mem[_12352]:
                            revert with 'NH{q', 50
                        mem[_14810 + _12352 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19574 = mem[_7978]
                        idx = 0
                        s = _14810 + 1
                        while idx < _19574:
                            if idx >= mem[_7978]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12352]:
                                revert with 'NH{q', 50
                            mem[s + _12352 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19574 = mem[_7978]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20330 = mem[_12352]
                        mem[mem[64] + 36] = mem[_12352]
                        mem[mem[64] + 68 len ceil32(_20330)] = mem[_12352 + 32 len ceil32(_20330)]
                        var160001 = ceil32(_20330)
                        if ceil32(_20330) > _20330:
                            mem[mem[64] + _20330 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20330) + 32]
                    mem[_7978 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2812 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7978]:
                            revert with 'NH{q', 50
                        mem[t + _7978 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11811 = mem[_7978]
                    _11812 = mem[_4495]
                    if mem[_4495] > !mem[_7978]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4495] + mem[_7978]):
                        revert with 'NH{q', 17
                    if mem[_4495] + mem[_7978] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12354 = mem[64]
                    mem[mem[64]] = mem[_4495] + mem[_7978] + 1
                    mem[64] = mem[64] + floor32(_11812 + _11811 + 32) + 32
                    if not _11812 + _11811 + 1:
                        _14811 = mem[_4495]
                        idx = 0
                        s = 0
                        while idx < _14811:
                            if idx >= mem[_4495]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12354]:
                                revert with 'NH{q', 50
                            mem[s + _12354 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14811 = mem[_4495]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14811 == -1:
                            revert with 'NH{q', 17
                        if _14811 >= mem[_12354]:
                            revert with 'NH{q', 50
                        mem[_14811 + _12354 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19575 = mem[_7978]
                        idx = 0
                        s = _14811 + 1
                        while idx < _19575:
                            if idx >= mem[_7978]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12354]:
                                revert with 'NH{q', 50
                            mem[s + _12354 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19575 = mem[_7978]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        _20109 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20331 = mem[_12354]
                        mem[mem[64] + 36] = mem[_12354]
                        mem[mem[64] + 68 len ceil32(_20331)] = mem[_12354 + 32 len ceil32(_20331)]
                        var160001 = ceil32(_20331)
                        if ceil32(_20331) <= _20331:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20331) + 32]
                        mem[mem[64] + _20331 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20331) + _20109 + -mem[64] + 68
                    mem[_12354 + 32 len _11812 + _11811 + 1] = call.data[calldata.size len _11812 + _11811 + 1]
                    _14812 = mem[_4495]
                    idx = 0
                    s = 0
                    while idx < _14812:
                        if idx >= mem[_4495]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12354]:
                            revert with 'NH{q', 50
                        mem[s + _12354 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14812 = mem[_4495]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14812 == -1:
                        revert with 'NH{q', 17
                    if _14812 >= mem[_12354]:
                        revert with 'NH{q', 50
                    mem[_14812 + _12354 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19576 = mem[_7978]
                    idx = 0
                    s = _14812 + 1
                    while idx < _19576:
                        if idx >= mem[_7978]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12354]:
                            revert with 'NH{q', 50
                        mem[s + _12354 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7978')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19576 = mem[_7978]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3580 > _2812:
                    _20110 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20332 = mem[_12354]
                    mem[mem[64] + 36] = mem[_12354]
                    mem[mem[64] + 68 len ceil32(_20332)] = mem[_12354 + 32 len ceil32(_20332)]
                    var161001 = ceil32(_20332)
                    if ceil32(_20332) <= _20332:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20332) + 32]
                    mem[mem[64] + _20332 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20332) + _20110 + -mem[64] + 68
                mem[_4495 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3580 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_4495]:
                        revert with 'NH{q', 50
                    mem[t + _4495 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _6101 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6101] = 26
                mem[_6101 + 32] = 'SafeMath: division by zero'
                if not _2812 / 10^18:
                    _6371 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6371] = 1
                    mem[_6371 + 32] = '0'
                    _6442 = mem[_4495]
                    if mem[_4495] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4495] + 1):
                        revert with 'NH{q', 17
                    if mem[_4495] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _6659 = mem[64]
                    mem[mem[64]] = mem[_4495] + 2
                    mem[64] = mem[64] + floor32(_6442 + 33) + 32
                    if not _6442 + 2:
                        _7797 = mem[_4495]
                        idx = 0
                        s = 0
                        while idx < _7797:
                            if idx >= mem[_4495]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6659]:
                                revert with 'NH{q', 50
                            mem[s + _6659 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7797 = mem[_4495]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7797 == -1:
                            revert with 'NH{q', 17
                        if _7797 >= mem[_6659]:
                            revert with 'NH{q', 50
                        mem[_7797 + _6659 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11523 = mem[_6371]
                        idx = 0
                        s = _7797 + 1
                        while idx < _11523:
                            if idx >= mem[_6371]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6659]:
                                revert with 'NH{q', 50
                            mem[s + _6659 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6371')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6371')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11523 = mem[_6371]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        _11819 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11949 = mem[_6659]
                        mem[mem[64] + 36] = mem[_6659]
                        mem[mem[64] + 68 len ceil32(_11949)] = mem[_6659 + 32 len ceil32(_11949)]
                        var152001 = ceil32(_11949)
                        if ceil32(_11949) <= _11949:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11949) + 32]
                        mem[mem[64] + _11949 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11949) + _11819 + -mem[64] + 68
                    mem[_6659 + 32 len _6442 + 2] = call.data[calldata.size len _6442 + 2]
                    _7798 = mem[_4495]
                    idx = 0
                    s = 0
                    while idx < _7798:
                        if idx >= mem[_4495]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6659]:
                            revert with 'NH{q', 50
                        mem[s + _6659 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7798 = mem[_4495]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7798 == -1:
                        revert with 'NH{q', 17
                    if _7798 >= mem[_6659]:
                        revert with 'NH{q', 50
                    mem[_7798 + _6659 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11524 = mem[_6371]
                    idx = 0
                    s = _7798 + 1
                    while idx < _11524:
                        if idx >= mem[_6371]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6659]:
                            revert with 'NH{q', 50
                        mem[s + _6659 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6371')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6371')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11524 = mem[_6371]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3580 > _2812:
                    _11820 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11950 = mem[_6659]
                    mem[mem[64] + 36] = mem[_6659]
                    mem[mem[64] + 68 len ceil32(_11950)] = mem[_6659 + 32 len ceil32(_11950)]
                    var153001 = ceil32(_11950)
                    if ceil32(_11950) <= _11950:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11950) + 32]
                    mem[mem[64] + _11950 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11950) + _11820 + -mem[64] + 68
                s = 0
                idx = _2812 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7981 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _2812 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7981]:
                            revert with 'NH{q', 50
                        mem[t + _7981 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11815 = mem[_7981]
                    _11816 = mem[_4495]
                    if mem[_4495] > !mem[_7981]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4495] + mem[_7981]):
                        revert with 'NH{q', 17
                    if mem[_4495] + mem[_7981] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12356 = mem[64]
                    mem[mem[64]] = mem[_4495] + mem[_7981] + 1
                    mem[64] = mem[64] + floor32(_11816 + _11815 + 32) + 32
                    if not _11816 + _11815 + 1:
                        _14813 = mem[_4495]
                        idx = 0
                        s = 0
                        while idx < _14813:
                            if idx >= mem[_4495]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12356]:
                                revert with 'NH{q', 50
                            mem[s + _12356 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14813 = mem[_4495]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14813 == -1:
                            revert with 'NH{q', 17
                        if _14813 >= mem[_12356]:
                            revert with 'NH{q', 50
                        mem[_14813 + _12356 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19577 = mem[_7981]
                        idx = 0
                        s = _14813 + 1
                        while idx < _19577:
                            if idx >= mem[_7981]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12356]:
                                revert with 'NH{q', 50
                            mem[s + _12356 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19577 = mem[_7981]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3580 > _2812:
                        _20111 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20333 = mem[_12356]
                        mem[mem[64] + 36] = mem[_12356]
                        mem[mem[64] + 68 len ceil32(_20333)] = mem[_12356 + 32 len ceil32(_20333)]
                        var160001 = ceil32(_20333)
                        if ceil32(_20333) <= _20333:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20333) + 32]
                        mem[mem[64] + _20333 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20333) + _20111 + -mem[64] + 68
                    mem[_12356 + 32 len _11816 + _11815 + 1] = call.data[calldata.size len _11816 + _11815 + 1]
                    _14814 = mem[_4495]
                    idx = 0
                    s = 0
                    while idx < _14814:
                        if idx >= mem[_4495]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12356]:
                            revert with 'NH{q', 50
                        mem[s + _12356 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14814 = mem[_4495]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14814 == -1:
                        revert with 'NH{q', 17
                    if _14814 >= mem[_12356]:
                        revert with 'NH{q', 50
                    mem[_14814 + _12356 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19578 = mem[_7981]
                    idx = 0
                    s = _14814 + 1
                    while idx < _19578:
                        if idx >= mem[_7981]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12356]:
                            revert with 'NH{q', 50
                        mem[s + _12356 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19578 = mem[_7981]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3580 > _2812:
                    _20112 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20334 = mem[_12356]
                    mem[mem[64] + 36] = mem[_12356]
                    mem[mem[64] + 68 len ceil32(_20334)] = mem[_12356 + 32 len ceil32(_20334)]
                    var161001 = ceil32(_20334)
                    if ceil32(_20334) <= _20334:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20334) + 32]
                    mem[mem[64] + _20334 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20334) + _20112 + -mem[64] + 68
                mem[_7981 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _2812 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7981]:
                        revert with 'NH{q', 50
                    mem[t + _7981 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11817 = mem[_7981]
                _11818 = mem[_4495]
                if mem[_4495] > !mem[_7981]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_4495] + mem[_7981]):
                    revert with 'NH{q', 17
                if mem[_4495] + mem[_7981] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12358 = mem[64]
                mem[mem[64]] = mem[_4495] + mem[_7981] + 1
                mem[64] = mem[64] + floor32(_11818 + _11817 + 32) + 32
                if not _11818 + _11817 + 1:
                    _14815 = mem[_4495]
                    idx = 0
                    s = 0
                    while idx < _14815:
                        if idx >= mem[_4495]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12358]:
                            revert with 'NH{q', 50
                        mem[s + _12358 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14815 = mem[_4495]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14815 == -1:
                        revert with 'NH{q', 17
                    if _14815 >= mem[_12358]:
                        revert with 'NH{q', 50
                    mem[_14815 + _12358 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19579 = mem[_7981]
                    idx = 0
                    s = _14815 + 1
                    while idx < _19579:
                        if idx >= mem[_7981]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12358]:
                            revert with 'NH{q', 50
                        mem[s + _12358 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19579 = mem[_7981]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3580 > _2812:
                    _20113 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20335 = mem[_12358]
                    mem[mem[64] + 36] = mem[_12358]
                    mem[mem[64] + 68 len ceil32(_20335)] = mem[_12358 + 32 len ceil32(_20335)]
                    var161001 = ceil32(_20335)
                    if ceil32(_20335) <= _20335:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20335) + 32]
                    mem[mem[64] + _20335 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20335) + _20113 + -mem[64] + 68
                mem[_12358 + 32 len _11818 + _11817 + 1] = call.data[calldata.size len _11818 + _11817 + 1]
                _14816 = mem[_4495]
                idx = 0
                s = 0
                while idx < _14816:
                    if idx >= mem[_4495]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12358]:
                        revert with 'NH{q', 50
                    mem[s + _12358 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4495')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14816 = mem[_4495]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14816 == -1:
                    revert with 'NH{q', 17
                if _14816 >= mem[_12358]:
                    revert with 'NH{q', 50
                mem[_14816 + _12358 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19580 = mem[_7981]
                idx = 0
                s = _14816 + 1
                while idx < _19580:
                    if idx >= mem[_7981]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12358]:
                        revert with 'NH{q', 50
                    mem[s + _12358 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7981')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19580 = mem[_7981]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3580 > _2812:
                _20114 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20336 = mem[_12358]
                mem[mem[64] + 36] = mem[_12358]
                mem[mem[64] + 68 len ceil32(_20336)] = mem[_12358 + 32 len ceil32(_20336)]
                var162001 = ceil32(_20336)
                if ceil32(_20336) <= _20336:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20336) + 32]
                mem[mem[64] + _20336 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20336) + _20114 + -mem[64] + 68
            mem[0] = 11
            mem[_2779 + 32] = address(stor11.field_0)
            idx = _2779 + 32
            s = 0
            while _2779 + (32 * stor11.length) > idx:
                mem[idx + 32] = stor11[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3502 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3526 = mem[_3502]
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            _3556 = mem[_2779 + 32]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            mem[_2779 + 32] = mem[_2779 + 76 len 20]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            mem[_2779 + 64] = address(_3556)
            _3623 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _3637 = mem[_2770]
            mem[mem[64] + 164] = mem[_2770]
            idx = 0
            s = mem[64] + 196
            t = _2770 + 32
            while idx < _3637:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3623 + 100] = this.address
            mem[_3623 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3623 + (32 * _3637) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4575 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4641 = mem[_4575]
            _4671 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _4641
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _4695 = mem[_2779]
            mem[mem[64] + 164] = mem[_2779]
            idx = 0
            s = mem[64] + 196
            t = _2779 + 32
            while idx < _4695:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4671 + 100] = this.address
            mem[_4671 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _4671 + (32 * _4695) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6198 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6243 = mem[_6198]
            _6310 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6310] = 26
            mem[_6310 + 32] = 'SafeMath: division by zero'
            if not _6243 / 10^18:
                _6584 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6584] = 1
                mem[_6584 + 32] = '0'
                _6664 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6664] = 26
                mem[_6664 + 32] = 'SafeMath: division by zero'
                if not _3526 / 10^18:
                    _7007 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_7007] = 1
                    mem[_7007 + 32] = '0'
                    _7213 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_7213 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_6584]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7213]:
                            revert with 'NH{q', 50
                        mem[s + _7213 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_7213]:
                        revert with 'NH{q', 50
                    mem[_7213 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11530 = mem[_7007]
                    idx = 0
                    s = 2
                    while idx < _11530:
                        if idx >= mem[_7007]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7213]:
                            revert with 'NH{q', 50
                        mem[s + _7213 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7007')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11530 = mem[_7007]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    _11832 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11956 = mem[_7213]
                    mem[mem[64] + 36] = mem[_7213]
                    mem[mem[64] + 68 len ceil32(_11956)] = mem[_7213 + 32 len ceil32(_11956)]
                    var148001 = ceil32(_11956)
                    if ceil32(_11956) <= _11956:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11956) + 32]
                    mem[mem[64] + _11956 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11956) + _11832 + -mem[64] + 68
                s = 0
                idx = _3526 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7989 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3526 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7989]:
                            revert with 'NH{q', 50
                        mem[t + _7989 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11827 = mem[_7989]
                    _11828 = mem[_6584]
                    if mem[_6584] > !mem[_7989]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6584] + mem[_7989]):
                        revert with 'NH{q', 17
                    if mem[_6584] + mem[_7989] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12362 = mem[64]
                    mem[mem[64]] = mem[_6584] + mem[_7989] + 1
                    mem[64] = mem[64] + floor32(_11828 + _11827 + 32) + 32
                    if not _11828 + _11827 + 1:
                        _14821 = mem[_6584]
                        idx = 0
                        s = 0
                        while idx < _14821:
                            if idx >= mem[_6584]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12362]:
                                revert with 'NH{q', 50
                            mem[s + _12362 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14821 = mem[_6584]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14821 == -1:
                            revert with 'NH{q', 17
                        if _14821 >= mem[_12362]:
                            revert with 'NH{q', 50
                        mem[_14821 + _12362 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19585 = mem[_7989]
                        idx = 0
                        s = _14821 + 1
                        while idx < _19585:
                            if idx >= mem[_7989]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12362]:
                                revert with 'NH{q', 50
                            mem[s + _12362 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19585 = mem[_7989]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6243 > _3526:
                        _20127 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20341 = mem[_12362]
                        mem[mem[64] + 36] = mem[_12362]
                        mem[mem[64] + 68 len ceil32(_20341)] = mem[_12362 + 32 len ceil32(_20341)]
                        var155001 = ceil32(_20341)
                        if ceil32(_20341) <= _20341:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20341) + 32]
                        mem[mem[64] + _20341 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20341) + _20127 + -mem[64] + 68
                    mem[_12362 + 32 len _11828 + _11827 + 1] = call.data[calldata.size len _11828 + _11827 + 1]
                    _14822 = mem[_6584]
                    idx = 0
                    s = 0
                    while idx < _14822:
                        if idx >= mem[_6584]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12362]:
                            revert with 'NH{q', 50
                        mem[s + _12362 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14822 = mem[_6584]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14822 == -1:
                        revert with 'NH{q', 17
                    if _14822 >= mem[_12362]:
                        revert with 'NH{q', 50
                    mem[_14822 + _12362 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19586 = mem[_7989]
                    idx = 0
                    s = _14822 + 1
                    while idx < _19586:
                        if idx >= mem[_7989]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12362]:
                            revert with 'NH{q', 50
                        mem[s + _12362 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19586 = mem[_7989]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    _20128 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20342 = mem[_12362]
                    mem[mem[64] + 36] = mem[_12362]
                    mem[mem[64] + 68 len ceil32(_20342)] = mem[_12362 + 32 len ceil32(_20342)]
                    var156001 = ceil32(_20342)
                    if ceil32(_20342) <= _20342:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20342) + 32]
                    mem[mem[64] + _20342 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20342) + _20128 + -mem[64] + 68
                mem[_7989 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3526 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7989]:
                        revert with 'NH{q', 50
                    mem[t + _7989 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11829 = mem[_7989]
                _11830 = mem[_6584]
                if mem[_6584] > !mem[_7989]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6584] + mem[_7989]):
                    revert with 'NH{q', 17
                if mem[_6584] + mem[_7989] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12364 = mem[64]
                mem[mem[64]] = mem[_6584] + mem[_7989] + 1
                mem[64] = mem[64] + floor32(_11830 + _11829 + 32) + 32
                if not _11830 + _11829 + 1:
                    _14823 = mem[_6584]
                    idx = 0
                    s = 0
                    while idx < _14823:
                        if idx >= mem[_6584]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12364]:
                            revert with 'NH{q', 50
                        mem[s + _12364 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14823 = mem[_6584]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14823 == -1:
                        revert with 'NH{q', 17
                    if _14823 >= mem[_12364]:
                        revert with 'NH{q', 50
                    mem[_14823 + _12364 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19587 = mem[_7989]
                    idx = 0
                    s = _14823 + 1
                    while idx < _19587:
                        if idx >= mem[_7989]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12364]:
                            revert with 'NH{q', 50
                        mem[s + _12364 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19587 = mem[_7989]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    _20129 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20343 = mem[_12364]
                    mem[mem[64] + 36] = mem[_12364]
                    mem[mem[64] + 68 len ceil32(_20343)] = mem[_12364 + 32 len ceil32(_20343)]
                    var156001 = ceil32(_20343)
                    if ceil32(_20343) <= _20343:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20343) + 32]
                    mem[mem[64] + _20343 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20343) + _20129 + -mem[64] + 68
                mem[_12364 + 32 len _11830 + _11829 + 1] = call.data[calldata.size len _11830 + _11829 + 1]
                _14824 = mem[_6584]
                idx = 0
                s = 0
                while idx < _14824:
                    if idx >= mem[_6584]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12364]:
                        revert with 'NH{q', 50
                    mem[s + _12364 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6584')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14824 = mem[_6584]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14824 == -1:
                    revert with 'NH{q', 17
                if _14824 >= mem[_12364]:
                    revert with 'NH{q', 50
                mem[_14824 + _12364 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19588 = mem[_7989]
                idx = 0
                s = _14824 + 1
                while idx < _19588:
                    if idx >= mem[_7989]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12364]:
                        revert with 'NH{q', 50
                    mem[s + _12364 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7989')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19588 = mem[_7989]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6243 > _3526:
                _20130 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20344 = mem[_12364]
                mem[mem[64] + 36] = mem[_12364]
                mem[mem[64] + 68 len ceil32(_20344)] = mem[_12364 + 32 len ceil32(_20344)]
                var157001 = ceil32(_20344)
                if ceil32(_20344) <= _20344:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20344) + 32]
                mem[mem[64] + _20344 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20344) + _20130 + -mem[64] + 68
            s = 0
            idx = _6243 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _7988 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6243 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7988]:
                        revert with 'NH{q', 50
                    mem[t + _7988 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11825 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11825] = 26
                mem[_11825 + 32] = 'SafeMath: division by zero'
                if not _3526 / 10^18:
                    _12531 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12531] = 1
                    mem[_12531 + 32] = '0'
                    _12732 = mem[_7988]
                    if mem[_7988] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7988] + 1):
                        revert with 'NH{q', 17
                    if mem[_7988] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13380 = mem[64]
                    mem[mem[64]] = mem[_7988] + 2
                    mem[64] = mem[64] + floor32(_12732 + 33) + 32
                    if not _12732 + 2:
                        _14817 = mem[_7988]
                        idx = 0
                        s = 0
                        while idx < _14817:
                            if idx >= mem[_7988]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13380]:
                                revert with 'NH{q', 50
                            mem[s + _13380 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14817 = mem[_7988]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14817 == -1:
                            revert with 'NH{q', 17
                        if _14817 >= mem[_13380]:
                            revert with 'NH{q', 50
                        mem[_14817 + _13380 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19581 = mem[_12531]
                        idx = 0
                        s = _14817 + 1
                        while idx < _19581:
                            if idx >= mem[_12531]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13380]:
                                revert with 'NH{q', 50
                            mem[s + _13380 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12531')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12531')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19581 = mem[_12531]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6243 > _3526:
                        _20119 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20337 = mem[_13380]
                        mem[mem[64] + 36] = mem[_13380]
                        mem[mem[64] + 68 len ceil32(_20337)] = mem[_13380 + 32 len ceil32(_20337)]
                        var155001 = ceil32(_20337)
                        if ceil32(_20337) <= _20337:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20337) + 32]
                        mem[mem[64] + _20337 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20337) + _20119 + -mem[64] + 68
                    mem[_13380 + 32 len _12732 + 2] = call.data[calldata.size len _12732 + 2]
                    _14818 = mem[_7988]
                    idx = 0
                    s = 0
                    while idx < _14818:
                        if idx >= mem[_7988]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13380]:
                            revert with 'NH{q', 50
                        mem[s + _13380 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14818 = mem[_7988]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14818 == -1:
                        revert with 'NH{q', 17
                    if _14818 >= mem[_13380]:
                        revert with 'NH{q', 50
                    mem[_14818 + _13380 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19582 = mem[_12531]
                    idx = 0
                    s = _14818 + 1
                    while idx < _19582:
                        if idx >= mem[_12531]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13380]:
                            revert with 'NH{q', 50
                        mem[s + _13380 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12531')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12531')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19582 = mem[_12531]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    _20120 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20338 = mem[_13380]
                    mem[mem[64] + 36] = mem[_13380]
                    mem[mem[64] + 68 len ceil32(_20338)] = mem[_13380 + 32 len ceil32(_20338)]
                    var156001 = ceil32(_20338)
                    if ceil32(_20338) <= _20338:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20338) + 32]
                    mem[mem[64] + _20338 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20338) + _20120 + -mem[64] + 68
                s = 0
                idx = _3526 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15219 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3526 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15219]:
                            revert with 'NH{q', 50
                        mem[t + _15219 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20115 = mem[_15219]
                    _20116 = mem[_7988]
                    if mem[_7988] > !mem[_15219]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7988] + mem[_15219]):
                        revert with 'NH{q', 17
                    if mem[_7988] + mem[_15219] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21097 = mem[64]
                    mem[mem[64]] = mem[_7988] + mem[_15219] + 1
                    mem[64] = mem[64] + floor32(_20116 + _20115 + 32) + 32
                    if not _20116 + _20115 + 1:
                        _23299 = mem[_7988]
                        idx = 0
                        s = 0
                        while idx < _23299:
                            if idx >= mem[_7988]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21097]:
                                revert with 'NH{q', 50
                            mem[s + _21097 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23299 = mem[_7988]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23299 == -1:
                            revert with 'NH{q', 17
                        if _23299 >= mem[_21097]:
                            revert with 'NH{q', 50
                        mem[_23299 + _21097 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26563 = mem[_15219]
                        idx = 0
                        s = _23299 + 1
                        while idx < _26563:
                            if idx >= mem[_15219]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21097]:
                                revert with 'NH{q', 50
                            mem[s + _21097 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26563 = mem[_15219]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6243 > _3526:
                        _27019 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27187 = mem[_21097]
                        mem[mem[64] + 36] = mem[_21097]
                        mem[mem[64] + 68 len ceil32(_27187)] = mem[_21097 + 32 len ceil32(_27187)]
                        var163001 = ceil32(_27187)
                        if ceil32(_27187) <= _27187:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27187) + 32]
                        mem[mem[64] + _27187 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27187) + _27019 + -mem[64] + 68
                    mem[_21097 + 32 len _20116 + _20115 + 1] = call.data[calldata.size len _20116 + _20115 + 1]
                    _23300 = mem[_7988]
                    idx = 0
                    s = 0
                    while idx < _23300:
                        if idx >= mem[_7988]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21097]:
                            revert with 'NH{q', 50
                        mem[s + _21097 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23300 = mem[_7988]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23300 == -1:
                        revert with 'NH{q', 17
                    if _23300 >= mem[_21097]:
                        revert with 'NH{q', 50
                    mem[_23300 + _21097 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26564 = mem[_15219]
                    idx = 0
                    s = _23300 + 1
                    while idx < _26564:
                        if idx >= mem[_15219]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21097]:
                            revert with 'NH{q', 50
                        mem[s + _21097 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26564 = mem[_15219]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    _27020 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27188 = mem[_21097]
                    mem[mem[64] + 36] = mem[_21097]
                    mem[mem[64] + 68 len ceil32(_27188)] = mem[_21097 + 32 len ceil32(_27188)]
                    var164001 = ceil32(_27188)
                    if ceil32(_27188) <= _27188:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27188) + 32]
                    mem[mem[64] + _27188 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27188) + _27020 + -mem[64] + 68
                mem[_15219 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3526 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15219]:
                        revert with 'NH{q', 50
                    mem[t + _15219 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20117 = mem[_15219]
                _20118 = mem[_7988]
                if mem[_7988] > !mem[_15219]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7988] + mem[_15219]):
                    revert with 'NH{q', 17
                if mem[_7988] + mem[_15219] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21099 = mem[64]
                mem[mem[64]] = mem[_7988] + mem[_15219] + 1
                mem[64] = mem[64] + floor32(_20118 + _20117 + 32) + 32
                if not _20118 + _20117 + 1:
                    _23301 = mem[_7988]
                    idx = 0
                    s = 0
                    while idx < _23301:
                        if idx >= mem[_7988]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21099]:
                            revert with 'NH{q', 50
                        mem[s + _21099 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23301 = mem[_7988]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23301 == -1:
                        revert with 'NH{q', 17
                    if _23301 >= mem[_21099]:
                        revert with 'NH{q', 50
                    mem[_23301 + _21099 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26565 = mem[_15219]
                    idx = 0
                    s = _23301 + 1
                    while idx < _26565:
                        if idx >= mem[_15219]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21099]:
                            revert with 'NH{q', 50
                        mem[s + _21099 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26565 = mem[_15219]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    _27021 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27189 = mem[_21099]
                    mem[mem[64] + 36] = mem[_21099]
                    mem[mem[64] + 68 len ceil32(_27189)] = mem[_21099 + 32 len ceil32(_27189)]
                    var164001 = ceil32(_27189)
                    if ceil32(_27189) <= _27189:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27189) + 32]
                    mem[mem[64] + _27189 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27189) + _27021 + -mem[64] + 68
                mem[_21099 + 32 len _20118 + _20117 + 1] = call.data[calldata.size len _20118 + _20117 + 1]
                _23302 = mem[_7988]
                idx = 0
                s = 0
                while idx < _23302:
                    if idx >= mem[_7988]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21099]:
                        revert with 'NH{q', 50
                    mem[s + _21099 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23302 = mem[_7988]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23302 == -1:
                    revert with 'NH{q', 17
                if _23302 >= mem[_21099]:
                    revert with 'NH{q', 50
                mem[_23302 + _21099 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26566 = mem[_15219]
                idx = 0
                s = _23302 + 1
                while idx < _26566:
                    if idx >= mem[_15219]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21099]:
                        revert with 'NH{q', 50
                    mem[s + _21099 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15219')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26566 = mem[_15219]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6243 > _3526:
                _27022 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27190 = mem[_21099]
                mem[mem[64] + 36] = mem[_21099]
                mem[mem[64] + 68 len ceil32(_27190)] = mem[_21099 + 32 len ceil32(_27190)]
                var165001 = ceil32(_27190)
                if ceil32(_27190) <= _27190:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27190) + 32]
                mem[mem[64] + _27190 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27190) + _27022 + -mem[64] + 68
            mem[_7988 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6243 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_7988]:
                    revert with 'NH{q', 50
                mem[t + _7988 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11826 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11826] = 26
            mem[_11826 + 32] = 'SafeMath: division by zero'
            if not _3526 / 10^18:
                _12532 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12532] = 1
                mem[_12532 + 32] = '0'
                _12734 = mem[_7988]
                if mem[_7988] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7988] + 1):
                    revert with 'NH{q', 17
                if mem[_7988] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13381 = mem[64]
                mem[mem[64]] = mem[_7988] + 2
                mem[64] = mem[64] + floor32(_12734 + 33) + 32
                if not _12734 + 2:
                    _14819 = mem[_7988]
                    idx = 0
                    s = 0
                    while idx < _14819:
                        if idx >= mem[_7988]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13381]:
                            revert with 'NH{q', 50
                        mem[s + _13381 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14819 = mem[_7988]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14819 == -1:
                        revert with 'NH{q', 17
                    if _14819 >= mem[_13381]:
                        revert with 'NH{q', 50
                    mem[_14819 + _13381 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19583 = mem[_12532]
                    idx = 0
                    s = _14819 + 1
                    while idx < _19583:
                        if idx >= mem[_12532]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13381]:
                            revert with 'NH{q', 50
                        mem[s + _13381 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12532')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12532')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19583 = mem[_12532]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20339 = mem[_13381]
                    mem[mem[64] + 36] = mem[_13381]
                    mem[mem[64] + 68 len ceil32(_20339)] = mem[_13381 + 32 len ceil32(_20339)]
                    var156001 = ceil32(_20339)
                    if ceil32(_20339) > _20339:
                        mem[mem[64] + _20339 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20339) + 32]
                mem[_13381 + 32 len _12734 + 2] = call.data[calldata.size len _12734 + 2]
                _14820 = mem[_7988]
                idx = 0
                s = 0
                while idx < _14820:
                    if idx >= mem[_7988]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13381]:
                        revert with 'NH{q', 50
                    mem[s + _13381 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14820 = mem[_7988]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14820 == -1:
                    revert with 'NH{q', 17
                if _14820 >= mem[_13381]:
                    revert with 'NH{q', 50
                mem[_14820 + _13381 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19584 = mem[_12532]
                idx = 0
                s = _14820 + 1
                while idx < _19584:
                    if idx >= mem[_12532]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13381]:
                        revert with 'NH{q', 50
                    mem[s + _13381 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12532')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12532')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19584 = mem[_12532]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6243 > _3526:
                _20126 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20340 = mem[_13381]
                mem[mem[64] + 36] = mem[_13381]
                mem[mem[64] + 68 len ceil32(_20340)] = mem[_13381 + 32 len ceil32(_20340)]
                var157001 = ceil32(_20340)
                if ceil32(_20340) <= _20340:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20340) + 32]
                mem[mem[64] + _20340 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20340) + _20126 + -mem[64] + 68
            s = 0
            idx = _3526 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15222 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3526 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15222]:
                        revert with 'NH{q', 50
                    mem[t + _15222 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20121 = mem[_15222]
                _20122 = mem[_7988]
                if mem[_7988] > !mem[_15222]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7988] + mem[_15222]):
                    revert with 'NH{q', 17
                if mem[_7988] + mem[_15222] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21101 = mem[64]
                mem[mem[64]] = mem[_7988] + mem[_15222] + 1
                mem[64] = mem[64] + floor32(_20122 + _20121 + 32) + 32
                if not _20122 + _20121 + 1:
                    _23303 = mem[_7988]
                    idx = 0
                    s = 0
                    while idx < _23303:
                        if idx >= mem[_7988]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21101]:
                            revert with 'NH{q', 50
                        mem[s + _21101 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23303 = mem[_7988]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23303 == -1:
                        revert with 'NH{q', 17
                    if _23303 >= mem[_21101]:
                        revert with 'NH{q', 50
                    mem[_23303 + _21101 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26567 = mem[_15222]
                    idx = 0
                    s = _23303 + 1
                    while idx < _26567:
                        if idx >= mem[_15222]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21101]:
                            revert with 'NH{q', 50
                        mem[s + _21101 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26567 = mem[_15222]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6243 > _3526:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27191 = mem[_21101]
                    mem[mem[64] + 36] = mem[_21101]
                    mem[mem[64] + 68 len ceil32(_27191)] = mem[_21101 + 32 len ceil32(_27191)]
                    var164001 = ceil32(_27191)
                    if ceil32(_27191) > _27191:
                        mem[mem[64] + _27191 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27191) + 32]
                mem[_21101 + 32 len _20122 + _20121 + 1] = call.data[calldata.size len _20122 + _20121 + 1]
                _23304 = mem[_7988]
                idx = 0
                s = 0
                while idx < _23304:
                    if idx >= mem[_7988]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21101]:
                        revert with 'NH{q', 50
                    mem[s + _21101 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23304 = mem[_7988]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23304 == -1:
                    revert with 'NH{q', 17
                if _23304 >= mem[_21101]:
                    revert with 'NH{q', 50
                mem[_23304 + _21101 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26568 = mem[_15222]
                idx = 0
                s = _23304 + 1
                while idx < _26568:
                    if idx >= mem[_15222]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21101]:
                        revert with 'NH{q', 50
                    mem[s + _21101 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26568 = mem[_15222]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6243 > _3526:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27192 = mem[_21101]
                mem[mem[64] + 36] = mem[_21101]
                mem[mem[64] + 68 len ceil32(_27192)] = mem[_21101 + 32 len ceil32(_27192)]
                var165001 = ceil32(_27192)
                if ceil32(_27192) > _27192:
                    mem[mem[64] + _27192 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27192) + 32]
            mem[_15222 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3526 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15222]:
                    revert with 'NH{q', 50
                mem[t + _15222 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20123 = mem[_15222]
            _20124 = mem[_7988]
            if mem[_7988] > !mem[_15222]:
                revert with 'NH{q', 17
            if 1 > !(mem[_7988] + mem[_15222]):
                revert with 'NH{q', 17
            if mem[_7988] + mem[_15222] + 1 > test266151307():
                revert with 'NH{q', 65
            _21103 = mem[64]
            mem[mem[64]] = mem[_7988] + mem[_15222] + 1
            mem[64] = mem[64] + floor32(_20124 + _20123 + 32) + 32
            if not _20124 + _20123 + 1:
                _23305 = mem[_7988]
                idx = 0
                s = 0
                while idx < _23305:
                    if idx >= mem[_7988]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21103]:
                        revert with 'NH{q', 50
                    mem[s + _21103 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23305 = mem[_7988]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23305 == -1:
                    revert with 'NH{q', 17
                if _23305 >= mem[_21103]:
                    revert with 'NH{q', 50
                mem[_23305 + _21103 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26569 = mem[_15222]
                idx = 0
                s = _23305 + 1
                while idx < _26569:
                    if idx >= mem[_15222]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21103]:
                        revert with 'NH{q', 50
                    mem[s + _21103 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26569 = mem[_15222]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6243 > _3526:
                _27025 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27193 = mem[_21103]
                mem[mem[64] + 36] = mem[_21103]
                mem[mem[64] + 68 len ceil32(_27193)] = mem[_21103 + 32 len ceil32(_27193)]
                var165001 = ceil32(_27193)
                if ceil32(_27193) <= _27193:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27193) + 32]
                mem[mem[64] + _27193 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27193) + _27025 + -mem[64] + 68
            mem[_21103 + 32 len _20124 + _20123 + 1] = call.data[calldata.size len _20124 + _20123 + 1]
            _23306 = mem[_7988]
            idx = 0
            s = 0
            while idx < _23306:
                if idx >= mem[_7988]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21103]:
                    revert with 'NH{q', 50
                mem[s + _21103 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7988')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23306 = mem[_7988]
                idx = idx + 1
                s = s + 1
                continue 
            if _23306 == -1:
                revert with 'NH{q', 17
            if _23306 >= mem[_21103]:
                revert with 'NH{q', 50
            mem[_23306 + _21103 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26570 = mem[_15222]
            idx = 0
            s = _23306 + 1
            while idx < _26570:
                if idx >= mem[_15222]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21103]:
                    revert with 'NH{q', 50
                mem[s + _21103 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15222')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26570 = mem[_15222]
                idx = idx + 1
                s = s + 1
                continue 
            if _6243 > _3526:
            _27026 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27194 = mem[_21103]
            mem[mem[64] + 36] = mem[_21103]
            mem[mem[64] + 68 len ceil32(_27194)] = mem[_21103 + 32 len ceil32(_27194)]
            var166001 = ceil32(_27194)
            if ceil32(_27194) <= _27194:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27194) + 32]
            mem[mem[64] + _27194 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27194) + _27026 + -mem[64] + 68
        mem[0] = 10
        mem[_2770 + 32] = address(stor10.field_0)
        idx = _2770 + 32
        s = 0
        while _2770 + (32 * stor10.length) > idx:
            mem[idx + 32] = stor10[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        _3454 = mem[64]
        mem[64] = mem[64] + (32 * stor11.length) + 32
        mem[_3454] = stor11.length
        if not stor11.length:
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3516 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3540 = mem[_3516]
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            _3583 = mem[_3454 + 32]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            mem[_3454 + 32] = mem[_3454 + 76 len 20]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            mem[_3454 + 64] = address(_3583)
            _3638 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            mem[mem[64] + 164] = stor10.length
            idx = 0
            s = mem[64] + 196
            t = _2770 + 32
            while idx < stor10.length:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3638 + 100] = this.address
            mem[_3638 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3638 + (32 * stor10.length) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4576 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4642 = mem[_4576]
            _4672 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _4642
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _4696 = mem[_3454]
            mem[mem[64] + 164] = mem[_3454]
            idx = 0
            s = mem[64] + 196
            t = _3454 + 32
            while idx < _4696:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4672 + 100] = this.address
            mem[_4672 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _4672 + (32 * _4696) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6199 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6244 = mem[_6199]
            _6311 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6311] = 26
            mem[_6311 + 32] = 'SafeMath: division by zero'
            if not _6244 / 10^18:
                _6585 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6585] = 1
                mem[_6585 + 32] = '0'
                _6665 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6665] = 26
                mem[_6665 + 32] = 'SafeMath: division by zero'
                if not _3540 / 10^18:
                    _7008 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_7008] = 1
                    mem[_7008 + 32] = '0'
                    _7214 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_7214 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_6585]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7214]:
                            revert with 'NH{q', 50
                        mem[s + _7214 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_7214]:
                        revert with 'NH{q', 50
                    mem[_7214 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11532 = mem[_7008]
                    idx = 0
                    s = 2
                    while idx < _11532:
                        if idx >= mem[_7008]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7214]:
                            revert with 'NH{q', 50
                        mem[s + _7214 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7008')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7008')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11532 = mem[_7008]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    _11840 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11958 = mem[_7214]
                    mem[mem[64] + 36] = mem[_7214]
                    mem[mem[64] + 68 len ceil32(_11958)] = mem[_7214 + 32 len ceil32(_11958)]
                    var148001 = ceil32(_11958)
                    if ceil32(_11958) <= _11958:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11958) + 32]
                    mem[mem[64] + _11958 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11958) + _11840 + -mem[64] + 68
                s = 0
                idx = _3540 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _7993 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3540 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7993]:
                            revert with 'NH{q', 50
                        mem[t + _7993 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11835 = mem[_7993]
                    _11836 = mem[_6585]
                    if mem[_6585] > !mem[_7993]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6585] + mem[_7993]):
                        revert with 'NH{q', 17
                    if mem[_6585] + mem[_7993] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12368 = mem[64]
                    mem[mem[64]] = mem[_6585] + mem[_7993] + 1
                    mem[64] = mem[64] + floor32(_11836 + _11835 + 32) + 32
                    if not _11836 + _11835 + 1:
                        _14829 = mem[_6585]
                        idx = 0
                        s = 0
                        while idx < _14829:
                            if idx >= mem[_6585]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12368]:
                                revert with 'NH{q', 50
                            mem[s + _12368 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14829 = mem[_6585]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14829 == -1:
                            revert with 'NH{q', 17
                        if _14829 >= mem[_12368]:
                            revert with 'NH{q', 50
                        mem[_14829 + _12368 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19593 = mem[_7993]
                        idx = 0
                        s = _14829 + 1
                        while idx < _19593:
                            if idx >= mem[_7993]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12368]:
                                revert with 'NH{q', 50
                            mem[s + _12368 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19593 = mem[_7993]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6244 > _3540:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20349 = mem[_12368]
                        mem[mem[64] + 36] = mem[_12368]
                        mem[mem[64] + 68 len ceil32(_20349)] = mem[_12368 + 32 len ceil32(_20349)]
                        var155001 = ceil32(_20349)
                        if ceil32(_20349) > _20349:
                            mem[mem[64] + _20349 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20349) + 32]
                    mem[_12368 + 32 len _11836 + _11835 + 1] = call.data[calldata.size len _11836 + _11835 + 1]
                    _14830 = mem[_6585]
                    idx = 0
                    s = 0
                    while idx < _14830:
                        if idx >= mem[_6585]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12368]:
                            revert with 'NH{q', 50
                        mem[s + _12368 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14830 = mem[_6585]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14830 == -1:
                        revert with 'NH{q', 17
                    if _14830 >= mem[_12368]:
                        revert with 'NH{q', 50
                    mem[_14830 + _12368 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19594 = mem[_7993]
                    idx = 0
                    s = _14830 + 1
                    while idx < _19594:
                        if idx >= mem[_7993]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12368]:
                            revert with 'NH{q', 50
                        mem[s + _12368 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19594 = mem[_7993]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    _20144 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20350 = mem[_12368]
                    mem[mem[64] + 36] = mem[_12368]
                    mem[mem[64] + 68 len ceil32(_20350)] = mem[_12368 + 32 len ceil32(_20350)]
                    var156001 = ceil32(_20350)
                    if ceil32(_20350) <= _20350:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20350) + 32]
                    mem[mem[64] + _20350 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20350) + _20144 + -mem[64] + 68
                mem[_7993 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3540 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7993]:
                        revert with 'NH{q', 50
                    mem[t + _7993 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11837 = mem[_7993]
                _11838 = mem[_6585]
                if mem[_6585] > !mem[_7993]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6585] + mem[_7993]):
                    revert with 'NH{q', 17
                if mem[_6585] + mem[_7993] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12370 = mem[64]
                mem[mem[64]] = mem[_6585] + mem[_7993] + 1
                mem[64] = mem[64] + floor32(_11838 + _11837 + 32) + 32
                if not _11838 + _11837 + 1:
                    _14831 = mem[_6585]
                    idx = 0
                    s = 0
                    while idx < _14831:
                        if idx >= mem[_6585]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12370]:
                            revert with 'NH{q', 50
                        mem[s + _12370 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14831 = mem[_6585]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14831 == -1:
                        revert with 'NH{q', 17
                    if _14831 >= mem[_12370]:
                        revert with 'NH{q', 50
                    mem[_14831 + _12370 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19595 = mem[_7993]
                    idx = 0
                    s = _14831 + 1
                    while idx < _19595:
                        if idx >= mem[_7993]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12370]:
                            revert with 'NH{q', 50
                        mem[s + _12370 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19595 = mem[_7993]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    _20145 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20351 = mem[_12370]
                    mem[mem[64] + 36] = mem[_12370]
                    mem[mem[64] + 68 len ceil32(_20351)] = mem[_12370 + 32 len ceil32(_20351)]
                    var156001 = ceil32(_20351)
                    if ceil32(_20351) <= _20351:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20351) + 32]
                    mem[mem[64] + _20351 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20351) + _20145 + -mem[64] + 68
                mem[_12370 + 32 len _11838 + _11837 + 1] = call.data[calldata.size len _11838 + _11837 + 1]
                _14832 = mem[_6585]
                idx = 0
                s = 0
                while idx < _14832:
                    if idx >= mem[_6585]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12370]:
                        revert with 'NH{q', 50
                    mem[s + _12370 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6585')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14832 = mem[_6585]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14832 == -1:
                    revert with 'NH{q', 17
                if _14832 >= mem[_12370]:
                    revert with 'NH{q', 50
                mem[_14832 + _12370 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19596 = mem[_7993]
                idx = 0
                s = _14832 + 1
                while idx < _19596:
                    if idx >= mem[_7993]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12370]:
                        revert with 'NH{q', 50
                    mem[s + _12370 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7993')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19596 = mem[_7993]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6244 > _3540:
                _20146 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20352 = mem[_12370]
                mem[mem[64] + 36] = mem[_12370]
                mem[mem[64] + 68 len ceil32(_20352)] = mem[_12370 + 32 len ceil32(_20352)]
                var157001 = ceil32(_20352)
                if ceil32(_20352) <= _20352:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20352) + 32]
                mem[mem[64] + _20352 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20352) + _20146 + -mem[64] + 68
            s = 0
            idx = _6244 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _7992 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6244 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_7992]:
                        revert with 'NH{q', 50
                    mem[t + _7992 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11833 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11833] = 26
                mem[_11833 + 32] = 'SafeMath: division by zero'
                if not _3540 / 10^18:
                    _12537 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12537] = 1
                    mem[_12537 + 32] = '0'
                    _12738 = mem[_7992]
                    if mem[_7992] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7992] + 1):
                        revert with 'NH{q', 17
                    if mem[_7992] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13386 = mem[64]
                    mem[mem[64]] = mem[_7992] + 2
                    mem[64] = mem[64] + floor32(_12738 + 33) + 32
                    if not _12738 + 2:
                        _14825 = mem[_7992]
                        idx = 0
                        s = 0
                        while idx < _14825:
                            if idx >= mem[_7992]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13386]:
                                revert with 'NH{q', 50
                            mem[s + _13386 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14825 = mem[_7992]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14825 == -1:
                            revert with 'NH{q', 17
                        if _14825 >= mem[_13386]:
                            revert with 'NH{q', 50
                        mem[_14825 + _13386 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19589 = mem[_12537]
                        idx = 0
                        s = _14825 + 1
                        while idx < _19589:
                            if idx >= mem[_12537]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13386]:
                                revert with 'NH{q', 50
                            mem[s + _13386 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12537')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12537')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19589 = mem[_12537]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6244 > _3540:
                        _20135 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20345 = mem[_13386]
                        mem[mem[64] + 36] = mem[_13386]
                        mem[mem[64] + 68 len ceil32(_20345)] = mem[_13386 + 32 len ceil32(_20345)]
                        var155001 = ceil32(_20345)
                        if ceil32(_20345) <= _20345:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20345) + 32]
                        mem[mem[64] + _20345 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20345) + _20135 + -mem[64] + 68
                    mem[_13386 + 32 len _12738 + 2] = call.data[calldata.size len _12738 + 2]
                    _14826 = mem[_7992]
                    idx = 0
                    s = 0
                    while idx < _14826:
                        if idx >= mem[_7992]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13386]:
                            revert with 'NH{q', 50
                        mem[s + _13386 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14826 = mem[_7992]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14826 == -1:
                        revert with 'NH{q', 17
                    if _14826 >= mem[_13386]:
                        revert with 'NH{q', 50
                    mem[_14826 + _13386 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19590 = mem[_12537]
                    idx = 0
                    s = _14826 + 1
                    while idx < _19590:
                        if idx >= mem[_12537]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13386]:
                            revert with 'NH{q', 50
                        mem[s + _13386 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12537')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12537')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19590 = mem[_12537]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    _20136 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20346 = mem[_13386]
                    mem[mem[64] + 36] = mem[_13386]
                    mem[mem[64] + 68 len ceil32(_20346)] = mem[_13386 + 32 len ceil32(_20346)]
                    var156001 = ceil32(_20346)
                    if ceil32(_20346) <= _20346:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20346) + 32]
                    mem[mem[64] + _20346 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20346) + _20136 + -mem[64] + 68
                s = 0
                idx = _3540 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15229 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3540 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15229]:
                            revert with 'NH{q', 50
                        mem[t + _15229 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20131 = mem[_15229]
                    _20132 = mem[_7992]
                    if mem[_7992] > !mem[_15229]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_7992] + mem[_15229]):
                        revert with 'NH{q', 17
                    if mem[_7992] + mem[_15229] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21105 = mem[64]
                    mem[mem[64]] = mem[_7992] + mem[_15229] + 1
                    mem[64] = mem[64] + floor32(_20132 + _20131 + 32) + 32
                    if not _20132 + _20131 + 1:
                        _23307 = mem[_7992]
                        idx = 0
                        s = 0
                        while idx < _23307:
                            if idx >= mem[_7992]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21105]:
                                revert with 'NH{q', 50
                            mem[s + _21105 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23307 = mem[_7992]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23307 == -1:
                            revert with 'NH{q', 17
                        if _23307 >= mem[_21105]:
                            revert with 'NH{q', 50
                        mem[_23307 + _21105 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26571 = mem[_15229]
                        idx = 0
                        s = _23307 + 1
                        while idx < _26571:
                            if idx >= mem[_15229]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21105]:
                                revert with 'NH{q', 50
                            mem[s + _21105 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26571 = mem[_15229]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6244 > _3540:
                        _27027 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27195 = mem[_21105]
                        mem[mem[64] + 36] = mem[_21105]
                        mem[mem[64] + 68 len ceil32(_27195)] = mem[_21105 + 32 len ceil32(_27195)]
                        var163001 = ceil32(_27195)
                        if ceil32(_27195) <= _27195:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27195) + 32]
                        mem[mem[64] + _27195 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27195) + _27027 + -mem[64] + 68
                    mem[_21105 + 32 len _20132 + _20131 + 1] = call.data[calldata.size len _20132 + _20131 + 1]
                    _23308 = mem[_7992]
                    idx = 0
                    s = 0
                    while idx < _23308:
                        if idx >= mem[_7992]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21105]:
                            revert with 'NH{q', 50
                        mem[s + _21105 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23308 = mem[_7992]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23308 == -1:
                        revert with 'NH{q', 17
                    if _23308 >= mem[_21105]:
                        revert with 'NH{q', 50
                    mem[_23308 + _21105 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26572 = mem[_15229]
                    idx = 0
                    s = _23308 + 1
                    while idx < _26572:
                        if idx >= mem[_15229]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21105]:
                            revert with 'NH{q', 50
                        mem[s + _21105 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26572 = mem[_15229]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27196 = mem[_21105]
                    mem[mem[64] + 36] = mem[_21105]
                    mem[mem[64] + 68 len ceil32(_27196)] = mem[_21105 + 32 len ceil32(_27196)]
                    var164001 = ceil32(_27196)
                    if ceil32(_27196) > _27196:
                        mem[mem[64] + _27196 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27196) + 32]
                mem[_15229 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3540 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15229]:
                        revert with 'NH{q', 50
                    mem[t + _15229 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20133 = mem[_15229]
                _20134 = mem[_7992]
                if mem[_7992] > !mem[_15229]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7992] + mem[_15229]):
                    revert with 'NH{q', 17
                if mem[_7992] + mem[_15229] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21107 = mem[64]
                mem[mem[64]] = mem[_7992] + mem[_15229] + 1
                mem[64] = mem[64] + floor32(_20134 + _20133 + 32) + 32
                if not _20134 + _20133 + 1:
                    _23309 = mem[_7992]
                    idx = 0
                    s = 0
                    while idx < _23309:
                        if idx >= mem[_7992]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21107]:
                            revert with 'NH{q', 50
                        mem[s + _21107 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23309 = mem[_7992]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23309 == -1:
                        revert with 'NH{q', 17
                    if _23309 >= mem[_21107]:
                        revert with 'NH{q', 50
                    mem[_23309 + _21107 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26573 = mem[_15229]
                    idx = 0
                    s = _23309 + 1
                    while idx < _26573:
                        if idx >= mem[_15229]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21107]:
                            revert with 'NH{q', 50
                        mem[s + _21107 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26573 = mem[_15229]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    _27029 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27197 = mem[_21107]
                    mem[mem[64] + 36] = mem[_21107]
                    mem[mem[64] + 68 len ceil32(_27197)] = mem[_21107 + 32 len ceil32(_27197)]
                    var164001 = ceil32(_27197)
                    if ceil32(_27197) <= _27197:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27197) + 32]
                    mem[mem[64] + _27197 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27197) + _27029 + -mem[64] + 68
                mem[_21107 + 32 len _20134 + _20133 + 1] = call.data[calldata.size len _20134 + _20133 + 1]
                _23310 = mem[_7992]
                idx = 0
                s = 0
                while idx < _23310:
                    if idx >= mem[_7992]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21107]:
                        revert with 'NH{q', 50
                    mem[s + _21107 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23310 = mem[_7992]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23310 == -1:
                    revert with 'NH{q', 17
                if _23310 >= mem[_21107]:
                    revert with 'NH{q', 50
                mem[_23310 + _21107 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26574 = mem[_15229]
                idx = 0
                s = _23310 + 1
                while idx < _26574:
                    if idx >= mem[_15229]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21107]:
                        revert with 'NH{q', 50
                    mem[s + _21107 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15229')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26574 = mem[_15229]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6244 > _3540:
                _27030 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27198 = mem[_21107]
                mem[mem[64] + 36] = mem[_21107]
                mem[mem[64] + 68 len ceil32(_27198)] = mem[_21107 + 32 len ceil32(_27198)]
                var165001 = ceil32(_27198)
                if ceil32(_27198) <= _27198:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27198) + 32]
                mem[mem[64] + _27198 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27198) + _27030 + -mem[64] + 68
            mem[_7992 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6244 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_7992]:
                    revert with 'NH{q', 50
                mem[t + _7992 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11834 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11834] = 26
            mem[_11834 + 32] = 'SafeMath: division by zero'
            if not _3540 / 10^18:
                _12538 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12538] = 1
                mem[_12538 + 32] = '0'
                _12740 = mem[_7992]
                if mem[_7992] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7992] + 1):
                    revert with 'NH{q', 17
                if mem[_7992] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13387 = mem[64]
                mem[mem[64]] = mem[_7992] + 2
                mem[64] = mem[64] + floor32(_12740 + 33) + 32
                if not _12740 + 2:
                    _14827 = mem[_7992]
                    idx = 0
                    s = 0
                    while idx < _14827:
                        if idx >= mem[_7992]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13387]:
                            revert with 'NH{q', 50
                        mem[s + _13387 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14827 = mem[_7992]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14827 == -1:
                        revert with 'NH{q', 17
                    if _14827 >= mem[_13387]:
                        revert with 'NH{q', 50
                    mem[_14827 + _13387 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19591 = mem[_12538]
                    idx = 0
                    s = _14827 + 1
                    while idx < _19591:
                        if idx >= mem[_12538]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13387]:
                            revert with 'NH{q', 50
                        mem[s + _13387 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12538')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12538')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19591 = mem[_12538]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    _20141 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20347 = mem[_13387]
                    mem[mem[64] + 36] = mem[_13387]
                    mem[mem[64] + 68 len ceil32(_20347)] = mem[_13387 + 32 len ceil32(_20347)]
                    var156001 = ceil32(_20347)
                    if ceil32(_20347) <= _20347:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20347) + 32]
                    mem[mem[64] + _20347 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20347) + _20141 + -mem[64] + 68
                mem[_13387 + 32 len _12740 + 2] = call.data[calldata.size len _12740 + 2]
                _14828 = mem[_7992]
                idx = 0
                s = 0
                while idx < _14828:
                    if idx >= mem[_7992]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13387]:
                        revert with 'NH{q', 50
                    mem[s + _13387 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14828 = mem[_7992]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14828 == -1:
                    revert with 'NH{q', 17
                if _14828 >= mem[_13387]:
                    revert with 'NH{q', 50
                mem[_14828 + _13387 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19592 = mem[_12538]
                idx = 0
                s = _14828 + 1
                while idx < _19592:
                    if idx >= mem[_12538]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13387]:
                        revert with 'NH{q', 50
                    mem[s + _13387 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12538')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12538')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19592 = mem[_12538]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6244 > _3540:
                _20142 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20348 = mem[_13387]
                mem[mem[64] + 36] = mem[_13387]
                mem[mem[64] + 68 len ceil32(_20348)] = mem[_13387 + 32 len ceil32(_20348)]
                var157001 = ceil32(_20348)
                if ceil32(_20348) <= _20348:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20348) + 32]
                mem[mem[64] + _20348 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20348) + _20142 + -mem[64] + 68
            s = 0
            idx = _3540 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15232 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3540 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15232]:
                        revert with 'NH{q', 50
                    mem[t + _15232 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20137 = mem[_15232]
                _20138 = mem[_7992]
                if mem[_7992] > !mem[_15232]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_7992] + mem[_15232]):
                    revert with 'NH{q', 17
                if mem[_7992] + mem[_15232] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21109 = mem[64]
                mem[mem[64]] = mem[_7992] + mem[_15232] + 1
                mem[64] = mem[64] + floor32(_20138 + _20137 + 32) + 32
                if not _20138 + _20137 + 1:
                    _23311 = mem[_7992]
                    idx = 0
                    s = 0
                    while idx < _23311:
                        if idx >= mem[_7992]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21109]:
                            revert with 'NH{q', 50
                        mem[s + _21109 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23311 = mem[_7992]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23311 == -1:
                        revert with 'NH{q', 17
                    if _23311 >= mem[_21109]:
                        revert with 'NH{q', 50
                    mem[_23311 + _21109 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26575 = mem[_15232]
                    idx = 0
                    s = _23311 + 1
                    while idx < _26575:
                        if idx >= mem[_15232]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21109]:
                            revert with 'NH{q', 50
                        mem[s + _21109 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26575 = mem[_15232]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6244 > _3540:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27199 = mem[_21109]
                    mem[mem[64] + 36] = mem[_21109]
                    mem[mem[64] + 68 len ceil32(_27199)] = mem[_21109 + 32 len ceil32(_27199)]
                    var164001 = ceil32(_27199)
                    if ceil32(_27199) > _27199:
                        mem[mem[64] + _27199 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27199) + 32]
                mem[_21109 + 32 len _20138 + _20137 + 1] = call.data[calldata.size len _20138 + _20137 + 1]
                _23312 = mem[_7992]
                idx = 0
                s = 0
                while idx < _23312:
                    if idx >= mem[_7992]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21109]:
                        revert with 'NH{q', 50
                    mem[s + _21109 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23312 = mem[_7992]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23312 == -1:
                    revert with 'NH{q', 17
                if _23312 >= mem[_21109]:
                    revert with 'NH{q', 50
                mem[_23312 + _21109 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26576 = mem[_15232]
                idx = 0
                s = _23312 + 1
                while idx < _26576:
                    if idx >= mem[_15232]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21109]:
                        revert with 'NH{q', 50
                    mem[s + _21109 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26576 = mem[_15232]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6244 > _3540:
                _27032 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27200 = mem[_21109]
                mem[mem[64] + 36] = mem[_21109]
                mem[mem[64] + 68 len ceil32(_27200)] = mem[_21109 + 32 len ceil32(_27200)]
                var165001 = ceil32(_27200)
                if ceil32(_27200) <= _27200:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27200) + 32]
                mem[mem[64] + _27200 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27200) + _27032 + -mem[64] + 68
            mem[_15232 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3540 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15232]:
                    revert with 'NH{q', 50
                mem[t + _15232 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20139 = mem[_15232]
            _20140 = mem[_7992]
            if mem[_7992] > !mem[_15232]:
                revert with 'NH{q', 17
            if 1 > !(mem[_7992] + mem[_15232]):
                revert with 'NH{q', 17
            if mem[_7992] + mem[_15232] + 1 > test266151307():
                revert with 'NH{q', 65
            _21111 = mem[64]
            mem[mem[64]] = mem[_7992] + mem[_15232] + 1
            mem[64] = mem[64] + floor32(_20140 + _20139 + 32) + 32
            if not _20140 + _20139 + 1:
                _23313 = mem[_7992]
                idx = 0
                s = 0
                while idx < _23313:
                    if idx >= mem[_7992]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21111]:
                        revert with 'NH{q', 50
                    mem[s + _21111 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23313 = mem[_7992]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23313 == -1:
                    revert with 'NH{q', 17
                if _23313 >= mem[_21111]:
                    revert with 'NH{q', 50
                mem[_23313 + _21111 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26577 = mem[_15232]
                idx = 0
                s = _23313 + 1
                while idx < _26577:
                    if idx >= mem[_15232]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21111]:
                        revert with 'NH{q', 50
                    mem[s + _21111 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26577 = mem[_15232]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6244 > _3540:
                _27033 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27201 = mem[_21111]
                mem[mem[64] + 36] = mem[_21111]
                mem[mem[64] + 68 len ceil32(_27201)] = mem[_21111 + 32 len ceil32(_27201)]
                var165001 = ceil32(_27201)
                if ceil32(_27201) <= _27201:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27201) + 32]
                mem[mem[64] + _27201 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27201) + _27033 + -mem[64] + 68
            mem[_21111 + 32 len _20140 + _20139 + 1] = call.data[calldata.size len _20140 + _20139 + 1]
            _23314 = mem[_7992]
            idx = 0
            s = 0
            while idx < _23314:
                if idx >= mem[_7992]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21111]:
                    revert with 'NH{q', 50
                mem[s + _21111 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7992')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23314 = mem[_7992]
                idx = idx + 1
                s = s + 1
                continue 
            if _23314 == -1:
                revert with 'NH{q', 17
            if _23314 >= mem[_21111]:
                revert with 'NH{q', 50
            mem[_23314 + _21111 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26578 = mem[_15232]
            idx = 0
            s = _23314 + 1
            while idx < _26578:
                if idx >= mem[_15232]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21111]:
                    revert with 'NH{q', 50
                mem[s + _21111 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15232')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26578 = mem[_15232]
                idx = idx + 1
                s = s + 1
                continue 
            if _6244 > _3540:
            _27034 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27202 = mem[_21111]
            mem[mem[64] + 36] = mem[_21111]
            mem[mem[64] + 68 len ceil32(_27202)] = mem[_21111 + 32 len ceil32(_27202)]
            var166001 = ceil32(_27202)
            if ceil32(_27202) <= _27202:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27202) + 32]
            mem[mem[64] + _27202 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27202) + _27034 + -mem[64] + 68
        mem[0] = 11
        mem[_3454 + 32] = address(stor11.field_0)
        idx = _3454 + 32
        s = 0
        while _3454 + (32 * stor11.length) > idx:
            mem[idx + 32] = stor11[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6108 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6174 = mem[_6108]
        if 0 >= stor11.length:
            revert with 'NH{q', 50
        _6217 = mem[_3454 + 32]
        if 1 >= stor11.length:
            revert with 'NH{q', 50
        if 0 >= stor11.length:
            revert with 'NH{q', 50
        mem[_3454 + 32] = mem[_3454 + 76 len 20]
        if 1 >= stor11.length:
            revert with 'NH{q', 50
        mem[_3454 + 64] = address(_6217)
        _6312 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _6334 = mem[_2770]
        mem[mem[64] + 164] = mem[_2770]
        idx = 0
        s = mem[64] + 196
        t = _2770 + 32
        while idx < _6334:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_6312 + 100] = this.address
        mem[_6312 + 132] = test266151307()
        require ext_code.size(sub_2354c7aeAddress)
        call sub_2354c7aeAddress.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _6312 + (32 * _6334) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(tokenAddr)
        staticcall tokenAddr.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8266 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8516 = mem[_8266]
        _8614 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _8516
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _8692 = mem[_3454]
        mem[mem[64] + 164] = mem[_3454]
        idx = 0
        s = mem[64] + 196
        t = _3454 + 32
        while idx < _8692:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_8614 + 100] = this.address
        mem[_8614 + 132] = test266151307()
        require ext_code.size(sub_16a84344Address)
        call sub_16a84344Address.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _8614 + (32 * _8692) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _12112 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _12190 = mem[_12112]
        _12372 = mem[64]
        mem[64] = mem[64] + 64
        mem[_12372] = 26
        mem[_12372 + 32] = 'SafeMath: division by zero'
        if not _12190 / 10^18:
            _13178 = mem[64]
            mem[64] = mem[64] + 64
            mem[_13178] = 1
            mem[_13178 + 32] = '0'
            _13392 = mem[64]
            mem[64] = mem[64] + 64
            mem[_13392] = 26
            mem[_13392 + 32] = 'SafeMath: division by zero'
            if not _6174 / 10^18:
                _14214 = mem[64]
                mem[64] = mem[64] + 64
                mem[_14214] = 1
                mem[_14214 + 32] = '0'
                _14560 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 64
                mem[_14560 + 32 len 3] = call.data[calldata.size len 3]
                idx = 0
                s = 0
                while idx < 1:
                    if idx >= mem[_13178]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_14560]:
                        revert with 'NH{q', 50
                    mem[s + _14560 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                if 1 >= mem[_14560]:
                    revert with 'NH{q', 50
                mem[_14560 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19598 = mem[_14214]
                idx = 0
                s = 2
                while idx < _19598:
                    if idx >= mem[_14214]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_14560]:
                        revert with 'NH{q', 50
                    mem[s + _14560 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14214')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14214')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19598 = mem[_14214]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _20154 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20354 = mem[_14560]
                mem[mem[64] + 36] = mem[_14560]
                mem[mem[64] + 68 len ceil32(_20354)] = mem[_14560 + 32 len ceil32(_20354)]
                var152001 = ceil32(_20354)
                if ceil32(_20354) <= _20354:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20354) + 32]
                mem[mem[64] + _20354 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20354) + _20154 + -mem[64] + 68
            s = 0
            idx = _6174 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15240 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6174 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15240]:
                        revert with 'NH{q', 50
                    mem[t + _15240 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20149 = mem[_15240]
                _20150 = mem[_13178]
                if mem[_13178] > !mem[_15240]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_13178] + mem[_15240]):
                    revert with 'NH{q', 17
                if mem[_13178] + mem[_15240] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21115 = mem[64]
                mem[mem[64]] = mem[_13178] + mem[_15240] + 1
                mem[64] = mem[64] + floor32(_20150 + _20149 + 32) + 32
                if not _20150 + _20149 + 1:
                    _23319 = mem[_13178]
                    idx = 0
                    s = 0
                    while idx < _23319:
                        if idx >= mem[_13178]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21115]:
                            revert with 'NH{q', 50
                        mem[s + _21115 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23319 = mem[_13178]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23319 == -1:
                        revert with 'NH{q', 17
                    if _23319 >= mem[_21115]:
                        revert with 'NH{q', 50
                    mem[_23319 + _21115 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26583 = mem[_15240]
                    idx = 0
                    s = _23319 + 1
                    while idx < _26583:
                        if idx >= mem[_15240]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21115]:
                            revert with 'NH{q', 50
                        mem[s + _21115 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26583 = mem[_15240]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12190 > _6174:
                    _27047 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27207 = mem[_21115]
                    mem[mem[64] + 36] = mem[_21115]
                    mem[mem[64] + 68 len ceil32(_27207)] = mem[_21115 + 32 len ceil32(_27207)]
                    var159001 = ceil32(_27207)
                    if ceil32(_27207) <= _27207:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27207) + 32]
                    mem[mem[64] + _27207 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27207) + _27047 + -mem[64] + 68
                mem[_21115 + 32 len _20150 + _20149 + 1] = call.data[calldata.size len _20150 + _20149 + 1]
                _23320 = mem[_13178]
                idx = 0
                s = 0
                while idx < _23320:
                    if idx >= mem[_13178]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21115]:
                        revert with 'NH{q', 50
                    mem[s + _21115 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23320 = mem[_13178]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23320 == -1:
                    revert with 'NH{q', 17
                if _23320 >= mem[_21115]:
                    revert with 'NH{q', 50
                mem[_23320 + _21115 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26584 = mem[_15240]
                idx = 0
                s = _23320 + 1
                while idx < _26584:
                    if idx >= mem[_15240]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21115]:
                        revert with 'NH{q', 50
                    mem[s + _21115 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26584 = mem[_15240]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _27048 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27208 = mem[_21115]
                mem[mem[64] + 36] = mem[_21115]
                mem[mem[64] + 68 len ceil32(_27208)] = mem[_21115 + 32 len ceil32(_27208)]
                var160001 = ceil32(_27208)
                if ceil32(_27208) <= _27208:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27208) + 32]
                mem[mem[64] + _27208 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27208) + _27048 + -mem[64] + 68
            mem[_15240 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6174 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15240]:
                    revert with 'NH{q', 50
                mem[t + _15240 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20151 = mem[_15240]
            _20152 = mem[_13178]
            if mem[_13178] > !mem[_15240]:
                revert with 'NH{q', 17
            if 1 > !(mem[_13178] + mem[_15240]):
                revert with 'NH{q', 17
            if mem[_13178] + mem[_15240] + 1 > test266151307():
                revert with 'NH{q', 65
            _21117 = mem[64]
            mem[mem[64]] = mem[_13178] + mem[_15240] + 1
            mem[64] = mem[64] + floor32(_20152 + _20151 + 32) + 32
            if not _20152 + _20151 + 1:
                _23321 = mem[_13178]
                idx = 0
                s = 0
                while idx < _23321:
                    if idx >= mem[_13178]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21117]:
                        revert with 'NH{q', 50
                    mem[s + _21117 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23321 = mem[_13178]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23321 == -1:
                    revert with 'NH{q', 17
                if _23321 >= mem[_21117]:
                    revert with 'NH{q', 50
                mem[_23321 + _21117 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26585 = mem[_15240]
                idx = 0
                s = _23321 + 1
                while idx < _26585:
                    if idx >= mem[_15240]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21117]:
                        revert with 'NH{q', 50
                    mem[s + _21117 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26585 = mem[_15240]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _27049 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27209 = mem[_21117]
                mem[mem[64] + 36] = mem[_21117]
                mem[mem[64] + 68 len ceil32(_27209)] = mem[_21117 + 32 len ceil32(_27209)]
                var160001 = ceil32(_27209)
                if ceil32(_27209) <= _27209:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27209) + 32]
                mem[mem[64] + _27209 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27209) + _27049 + -mem[64] + 68
            mem[_21117 + 32 len _20152 + _20151 + 1] = call.data[calldata.size len _20152 + _20151 + 1]
            _23322 = mem[_13178]
            idx = 0
            s = 0
            while idx < _23322:
                if idx >= mem[_13178]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21117]:
                    revert with 'NH{q', 50
                mem[s + _21117 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13178')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23322 = mem[_13178]
                idx = idx + 1
                s = s + 1
                continue 
            if _23322 == -1:
                revert with 'NH{q', 17
            if _23322 >= mem[_21117]:
                revert with 'NH{q', 50
            mem[_23322 + _21117 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26586 = mem[_15240]
            idx = 0
            s = _23322 + 1
            while idx < _26586:
                if idx >= mem[_15240]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21117]:
                    revert with 'NH{q', 50
                mem[s + _21117 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15240')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26586 = mem[_15240]
                idx = idx + 1
                s = s + 1
                continue 
            if _12190 > _6174:
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27210 = mem[_21117]
            mem[mem[64] + 36] = mem[_21117]
            mem[mem[64] + 68 len ceil32(_27210)] = mem[_21117 + 32 len ceil32(_27210)]
            var161001 = ceil32(_27210)
            if ceil32(_27210) > _27210:
                mem[mem[64] + _27210 + 68] = 0
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27210) + 32]
        s = 0
        idx = _12190 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _15239 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _12190 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15239]:
                    revert with 'NH{q', 50
                mem[t + _15239 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20147 = mem[64]
            mem[64] = mem[64] + 64
            mem[_20147] = 26
            mem[_20147 + 32] = 'SafeMath: division by zero'
            if not _6174 / 10^18:
                _21305 = mem[64]
                mem[64] = mem[64] + 64
                mem[_21305] = 1
                mem[_21305 + 32] = '0'
                _21526 = mem[_15239]
                if mem[_15239] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15239] + 1):
                    revert with 'NH{q', 17
                if mem[_15239] + 2 > test266151307():
                    revert with 'NH{q', 65
                _22301 = mem[64]
                mem[mem[64]] = mem[_15239] + 2
                mem[64] = mem[64] + floor32(_21526 + 33) + 32
                if not _21526 + 2:
                    _23315 = mem[_15239]
                    idx = 0
                    s = 0
                    while idx < _23315:
                        if idx >= mem[_15239]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22301]:
                            revert with 'NH{q', 50
                        mem[s + _22301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23315 = mem[_15239]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23315 == -1:
                        revert with 'NH{q', 17
                    if _23315 >= mem[_22301]:
                        revert with 'NH{q', 50
                    mem[_23315 + _22301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26579 = mem[_21305]
                    idx = 0
                    s = _23315 + 1
                    while idx < _26579:
                        if idx >= mem[_21305]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22301]:
                            revert with 'NH{q', 50
                        mem[s + _22301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21305')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21305')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26579 = mem[_21305]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12190 > _6174:
                    _27039 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27203 = mem[_22301]
                    mem[mem[64] + 36] = mem[_22301]
                    mem[mem[64] + 68 len ceil32(_27203)] = mem[_22301 + 32 len ceil32(_27203)]
                    var159001 = ceil32(_27203)
                    if ceil32(_27203) <= _27203:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27203) + 32]
                    mem[mem[64] + _27203 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27203) + _27039 + -mem[64] + 68
                mem[_22301 + 32 len _21526 + 2] = call.data[calldata.size len _21526 + 2]
                _23316 = mem[_15239]
                idx = 0
                s = 0
                while idx < _23316:
                    if idx >= mem[_15239]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22301]:
                        revert with 'NH{q', 50
                    mem[s + _22301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23316 = mem[_15239]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23316 == -1:
                    revert with 'NH{q', 17
                if _23316 >= mem[_22301]:
                    revert with 'NH{q', 50
                mem[_23316 + _22301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26580 = mem[_21305]
                idx = 0
                s = _23316 + 1
                while idx < _26580:
                    if idx >= mem[_21305]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22301]:
                        revert with 'NH{q', 50
                    mem[s + _22301 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21305')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21305')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26580 = mem[_21305]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _27040 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27204 = mem[_22301]
                mem[mem[64] + 36] = mem[_22301]
                mem[mem[64] + 68 len ceil32(_27204)] = mem[_22301 + 32 len ceil32(_27204)]
                var160001 = ceil32(_27204)
                if ceil32(_27204) <= _27204:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27204) + 32]
                mem[mem[64] + _27204 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27204) + _27040 + -mem[64] + 68
            s = 0
            idx = _6174 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _23765 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6174 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23765]:
                        revert with 'NH{q', 50
                    mem[t + _23765 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _27035 = mem[_23765]
                _27036 = mem[_15239]
                if mem[_15239] > !mem[_23765]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15239] + mem[_23765]):
                    revert with 'NH{q', 17
                if mem[_15239] + mem[_23765] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27859 = mem[64]
                mem[mem[64]] = mem[_15239] + mem[_23765] + 1
                mem[64] = mem[64] + floor32(_27036 + _27035 + 32) + 32
                if not _27036 + _27035 + 1:
                    _28579 = mem[_15239]
                    idx = 0
                    s = 0
                    while idx < _28579:
                        if idx >= mem[_15239]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27859]:
                            revert with 'NH{q', 50
                        mem[s + _27859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28579 = mem[_15239]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28579 == -1:
                        revert with 'NH{q', 17
                    if _28579 >= mem[_27859]:
                        revert with 'NH{q', 50
                    mem[_28579 + _27859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29683 = mem[_23765]
                    idx = 0
                    s = _28579 + 1
                    while idx < _29683:
                        if idx >= mem[_23765]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27859]:
                            revert with 'NH{q', 50
                        mem[s + _27859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29683 = mem[_23765]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12190 > _6174:
                    _29827 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29875 = mem[_27859]
                    mem[mem[64] + 36] = mem[_27859]
                    mem[mem[64] + 68 len ceil32(_29875)] = mem[_27859 + 32 len ceil32(_29875)]
                    var167001 = ceil32(_29875)
                    if ceil32(_29875) <= _29875:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29875) + 32]
                    mem[mem[64] + _29875 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29875) + _29827 + -mem[64] + 68
                mem[_27859 + 32 len _27036 + _27035 + 1] = call.data[calldata.size len _27036 + _27035 + 1]
                _28580 = mem[_15239]
                idx = 0
                s = 0
                while idx < _28580:
                    if idx >= mem[_15239]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27859]:
                        revert with 'NH{q', 50
                    mem[s + _27859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28580 = mem[_15239]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28580 == -1:
                    revert with 'NH{q', 17
                if _28580 >= mem[_27859]:
                    revert with 'NH{q', 50
                mem[_28580 + _27859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29684 = mem[_23765]
                idx = 0
                s = _28580 + 1
                while idx < _29684:
                    if idx >= mem[_23765]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27859]:
                        revert with 'NH{q', 50
                    mem[s + _27859 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29684 = mem[_23765]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _29828 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29876 = mem[_27859]
                mem[mem[64] + 36] = mem[_27859]
                mem[mem[64] + 68 len ceil32(_29876)] = mem[_27859 + 32 len ceil32(_29876)]
                var168001 = ceil32(_29876)
                if ceil32(_29876) <= _29876:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29876) + 32]
                mem[mem[64] + _29876 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29876) + _29828 + -mem[64] + 68
            mem[_23765 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6174 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23765]:
                    revert with 'NH{q', 50
                mem[t + _23765 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _27037 = mem[_23765]
            _27038 = mem[_15239]
            if mem[_15239] > !mem[_23765]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15239] + mem[_23765]):
                revert with 'NH{q', 17
            if mem[_15239] + mem[_23765] + 1 > test266151307():
                revert with 'NH{q', 65
            _27861 = mem[64]
            mem[mem[64]] = mem[_15239] + mem[_23765] + 1
            mem[64] = mem[64] + floor32(_27038 + _27037 + 32) + 32
            if not _27038 + _27037 + 1:
                _28581 = mem[_15239]
                idx = 0
                s = 0
                while idx < _28581:
                    if idx >= mem[_15239]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27861]:
                        revert with 'NH{q', 50
                    mem[s + _27861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28581 = mem[_15239]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28581 == -1:
                    revert with 'NH{q', 17
                if _28581 >= mem[_27861]:
                    revert with 'NH{q', 50
                mem[_28581 + _27861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29685 = mem[_23765]
                idx = 0
                s = _28581 + 1
                while idx < _29685:
                    if idx >= mem[_23765]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27861]:
                        revert with 'NH{q', 50
                    mem[s + _27861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29685 = mem[_23765]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _29829 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29877 = mem[_27861]
                mem[mem[64] + 36] = mem[_27861]
                mem[mem[64] + 68 len ceil32(_29877)] = mem[_27861 + 32 len ceil32(_29877)]
                var168001 = ceil32(_29877)
                if ceil32(_29877) <= _29877:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29877) + 32]
                mem[mem[64] + _29877 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29877) + _29829 + -mem[64] + 68
            mem[_27861 + 32 len _27038 + _27037 + 1] = call.data[calldata.size len _27038 + _27037 + 1]
            _28582 = mem[_15239]
            idx = 0
            s = 0
            while idx < _28582:
                if idx >= mem[_15239]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27861]:
                    revert with 'NH{q', 50
                mem[s + _27861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28582 = mem[_15239]
                idx = idx + 1
                s = s + 1
                continue 
            if _28582 == -1:
                revert with 'NH{q', 17
            if _28582 >= mem[_27861]:
                revert with 'NH{q', 50
            mem[_28582 + _27861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29686 = mem[_23765]
            idx = 0
            s = _28582 + 1
            while idx < _29686:
                if idx >= mem[_23765]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27861]:
                    revert with 'NH{q', 50
                mem[s + _27861 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23765')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29686 = mem[_23765]
                idx = idx + 1
                s = s + 1
                continue 
            if _12190 > _6174:
            _29830 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29878 = mem[_27861]
            mem[mem[64] + 36] = mem[_27861]
            mem[mem[64] + 68 len ceil32(_29878)] = mem[_27861 + 32 len ceil32(_29878)]
            var169001 = ceil32(_29878)
            if ceil32(_29878) <= _29878:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29878) + 32]
            mem[mem[64] + _29878 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29878) + _29830 + -mem[64] + 68
        mem[_15239 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _12190 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15239]:
                revert with 'NH{q', 50
            mem[t + _15239 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20148 = mem[64]
        mem[64] = mem[64] + 64
        mem[_20148] = 26
        mem[_20148 + 32] = 'SafeMath: division by zero'
        if not _6174 / 10^18:
            _21306 = mem[64]
            mem[64] = mem[64] + 64
            mem[_21306] = 1
            mem[_21306 + 32] = '0'
            _21528 = mem[_15239]
            if mem[_15239] > !1:
                revert with 'NH{q', 17
            if 1 > !(mem[_15239] + 1):
                revert with 'NH{q', 17
            if mem[_15239] + 2 > test266151307():
                revert with 'NH{q', 65
            _22302 = mem[64]
            mem[mem[64]] = mem[_15239] + 2
            mem[64] = mem[64] + floor32(_21528 + 33) + 32
            if not _21528 + 2:
                _23317 = mem[_15239]
                idx = 0
                s = 0
                while idx < _23317:
                    if idx >= mem[_15239]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22302]:
                        revert with 'NH{q', 50
                    mem[s + _22302 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23317 = mem[_15239]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23317 == -1:
                    revert with 'NH{q', 17
                if _23317 >= mem[_22302]:
                    revert with 'NH{q', 50
                mem[_23317 + _22302 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26581 = mem[_21306]
                idx = 0
                s = _23317 + 1
                while idx < _26581:
                    if idx >= mem[_21306]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22302]:
                        revert with 'NH{q', 50
                    mem[s + _22302 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21306')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21306')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26581 = mem[_21306]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                _27045 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27205 = mem[_22302]
                mem[mem[64] + 36] = mem[_22302]
                mem[mem[64] + 68 len ceil32(_27205)] = mem[_22302 + 32 len ceil32(_27205)]
                var160001 = ceil32(_27205)
                if ceil32(_27205) <= _27205:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27205) + 32]
                mem[mem[64] + _27205 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27205) + _27045 + -mem[64] + 68
            mem[_22302 + 32 len _21528 + 2] = call.data[calldata.size len _21528 + 2]
            _23318 = mem[_15239]
            idx = 0
            s = 0
            while idx < _23318:
                if idx >= mem[_15239]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22302]:
                    revert with 'NH{q', 50
                mem[s + _22302 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23318 = mem[_15239]
                idx = idx + 1
                s = s + 1
                continue 
            if _23318 == -1:
                revert with 'NH{q', 17
            if _23318 >= mem[_22302]:
                revert with 'NH{q', 50
            mem[_23318 + _22302 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26582 = mem[_21306]
            idx = 0
            s = _23318 + 1
            while idx < _26582:
                if idx >= mem[_21306]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22302]:
                    revert with 'NH{q', 50
                mem[s + _22302 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21306')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21306')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26582 = mem[_21306]
                idx = idx + 1
                s = s + 1
                continue 
            if _12190 > _6174:
            _27046 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27206 = mem[_22302]
            mem[mem[64] + 36] = mem[_22302]
            mem[mem[64] + 68 len ceil32(_27206)] = mem[_22302 + 32 len ceil32(_27206)]
            var161001 = ceil32(_27206)
            if ceil32(_27206) <= _27206:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27206) + 32]
            mem[mem[64] + _27206 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27206) + _27046 + -mem[64] + 68
        s = 0
        idx = _6174 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _23768 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6174 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23768]:
                    revert with 'NH{q', 50
                mem[t + _23768 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _27041 = mem[_23768]
            _27042 = mem[_15239]
            if mem[_15239] > !mem[_23768]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15239] + mem[_23768]):
                revert with 'NH{q', 17
            if mem[_15239] + mem[_23768] + 1 > test266151307():
                revert with 'NH{q', 65
            _27863 = mem[64]
            mem[mem[64]] = mem[_15239] + mem[_23768] + 1
            mem[64] = mem[64] + floor32(_27042 + _27041 + 32) + 32
            if not _27042 + _27041 + 1:
                _28583 = mem[_15239]
                idx = 0
                s = 0
                while idx < _28583:
                    if idx >= mem[_15239]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27863]:
                        revert with 'NH{q', 50
                    mem[s + _27863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28583 = mem[_15239]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28583 == -1:
                    revert with 'NH{q', 17
                if _28583 >= mem[_27863]:
                    revert with 'NH{q', 50
                mem[_28583 + _27863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29687 = mem[_23768]
                idx = 0
                s = _28583 + 1
                while idx < _29687:
                    if idx >= mem[_23768]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27863]:
                        revert with 'NH{q', 50
                    mem[s + _27863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29687 = mem[_23768]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12190 > _6174:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29879 = mem[_27863]
                mem[mem[64] + 36] = mem[_27863]
                mem[mem[64] + 68 len ceil32(_29879)] = mem[_27863 + 32 len ceil32(_29879)]
                var168001 = ceil32(_29879)
                if ceil32(_29879) > _29879:
                    mem[mem[64] + _29879 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29879) + 32]
            mem[_27863 + 32 len _27042 + _27041 + 1] = call.data[calldata.size len _27042 + _27041 + 1]
            _28584 = mem[_15239]
            idx = 0
            s = 0
            while idx < _28584:
                if idx >= mem[_15239]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27863]:
                    revert with 'NH{q', 50
                mem[s + _27863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28584 = mem[_15239]
                idx = idx + 1
                s = s + 1
                continue 
            if _28584 == -1:
                revert with 'NH{q', 17
            if _28584 >= mem[_27863]:
                revert with 'NH{q', 50
            mem[_28584 + _27863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29688 = mem[_23768]
            idx = 0
            s = _28584 + 1
            while idx < _29688:
                if idx >= mem[_23768]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27863]:
                    revert with 'NH{q', 50
                mem[s + _27863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29688 = mem[_23768]
                idx = idx + 1
                s = s + 1
                continue 
            if _12190 > _6174:
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29880 = mem[_27863]
            mem[mem[64] + 36] = mem[_27863]
            mem[mem[64] + 68 len ceil32(_29880)] = mem[_27863 + 32 len ceil32(_29880)]
            var169001 = ceil32(_29880)
            if ceil32(_29880) > _29880:
                mem[mem[64] + _29880 + 68] = 0
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29880) + 32]
        mem[_23768 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6174 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_23768]:
                revert with 'NH{q', 50
            mem[t + _23768 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _27043 = mem[_23768]
        _27044 = mem[_15239]
        if mem[_15239] > !mem[_23768]:
            revert with 'NH{q', 17
        if 1 > !(mem[_15239] + mem[_23768]):
            revert with 'NH{q', 17
        if mem[_15239] + mem[_23768] + 1 > test266151307():
            revert with 'NH{q', 65
        _27865 = mem[64]
        mem[mem[64]] = mem[_15239] + mem[_23768] + 1
        mem[64] = mem[64] + floor32(_27044 + _27043 + 32) + 32
        if not _27044 + _27043 + 1:
            _28585 = mem[_15239]
            idx = 0
            s = 0
            while idx < _28585:
                if idx >= mem[_15239]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27865]:
                    revert with 'NH{q', 50
                mem[s + _27865 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28585 = mem[_15239]
                idx = idx + 1
                s = s + 1
                continue 
            if _28585 == -1:
                revert with 'NH{q', 17
            if _28585 >= mem[_27865]:
                revert with 'NH{q', 50
            mem[_28585 + _27865 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29689 = mem[_23768]
            idx = 0
            s = _28585 + 1
            while idx < _29689:
                if idx >= mem[_23768]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27865]:
                    revert with 'NH{q', 50
                mem[s + _27865 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29689 = mem[_23768]
                idx = idx + 1
                s = s + 1
                continue 
            if _12190 > _6174:
            _29833 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29881 = mem[_27865]
            mem[mem[64] + 36] = mem[_27865]
            mem[mem[64] + 68 len ceil32(_29881)] = mem[_27865 + 32 len ceil32(_29881)]
            var169001 = ceil32(_29881)
            if ceil32(_29881) <= _29881:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29881) + 32]
            mem[mem[64] + _29881 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29881) + _29833 + -mem[64] + 68
        mem[_27865 + 32 len _27044 + _27043 + 1] = call.data[calldata.size len _27044 + _27043 + 1]
        _28586 = mem[_15239]
        idx = 0
        s = 0
        while idx < _28586:
            if idx >= mem[_15239]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27865]:
                revert with 'NH{q', 50
            mem[s + _27865 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15239')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _28586 = mem[_15239]
            idx = idx + 1
            s = s + 1
            continue 
        if _28586 == -1:
            revert with 'NH{q', 17
        if _28586 >= mem[_27865]:
            revert with 'NH{q', 50
        mem[_28586 + _27865 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _29690 = mem[_23768]
        idx = 0
        s = _28586 + 1
        while idx < _29690:
            if idx >= mem[_23768]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27865]:
                revert with 'NH{q', 50
            mem[s + _27865 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23768')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _29690 = mem[_23768]
            idx = idx + 1
            s = s + 1
            continue 
        if _12190 > _6174:
        _29834 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _29882 = mem[_27865]
        mem[mem[64] + 36] = mem[_27865]
        mem[mem[64] + 68 len ceil32(_29882)] = mem[_27865 + 32 len ceil32(_29882)]
        var170001 = ceil32(_29882)
        if ceil32(_29882) <= _29882:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29882) + 32]
        mem[mem[64] + _29882 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_29882) + _29834 + -mem[64] + 68
    if creatorAddress != msg.sender:
        revert with 0, 'white only'
    mem[128] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
    mem[132] = arg1
    mem[164] = 64
    mem[196] = stor10.length
    mem[0] = 10
    idx = 0
    s = 228
    t = 0
    while idx < stor10.length:
        mem[s] = stor10[t].field_0
        idx = idx + 1
        s = s + 32
        t = t + 1
        continue 
    require ext_code.size(sub_2354c7aeAddress)
    staticcall sub_2354c7aeAddress.getAmountsOut(uint256 arg1, address[] arg2) with:
            gas gas_remaining wei
           args arg1, Array(len=stor10.length, data=mem[228 len 32 * stor10.length])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[128 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 128
    require return_data.size >= 32
    _1167 = mem[128 len 4], Mask(224, 32, arg1) >> 32
    require mem[128 len 4], Mask(224, 32, arg1) >> 32 <= test266151307()
    require mem[128 len 4], Mask(224, 32, arg1) >> 32 + 159 < return_data.size + 128
    _1176 = mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]
    if mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128] > test266151307():
        revert with 'NH{q', 65
    if ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 1 < 0 or ceil32(return_data.size) + ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 129 > test266151307():
        revert with 'NH{q', 65
    mem[64] = ceil32(return_data.size) + ceil32(32 * mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]) + 129
    mem[ceil32(return_data.size) + 128] = mem[mem[128 len 4], Mask(224, 32, arg1) >> 32 + 128]
    require return_data.size >= _1167 + (32 * _1176) + 32
    mem[ceil32(return_data.size) + 160 len 32 * _1176] = mem[_1167 + 160 len 32 * _1176]
    if 1 >= _1176:
        revert with 'NH{q', 50
    _1885 = mem[ceil32(return_data.size) + 192]
    _1886 = mem[64]
    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = arg1
    mem[mem[64] + 36] = 64
    mem[mem[64] + 68] = stor11.length
    mem[0] = 11
    idx = 0
    s = mem[64] + 100
    t = 0
    while idx < stor11.length:
        mem[s] = stor[t + sha3(mem[0])]
        idx = idx + 1
        s = s + 32
        t = t + 1
        continue 
    require ext_code.size(sub_16a84344Address)
    staticcall sub_16a84344Address.mem[mem[64] len 4] with:
            gas gas_remaining wei
           args mem[mem[64] + 4 len _1886 + (32 * stor11.length) + -mem[64] + 96]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _2349 = mem[64]
    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _2352 = mem[_2349]
    require mem[_2349] <= test266151307()
    require _2349 + mem[_2349] + 31 < _2349 + return_data.size
    _2355 = mem[_2349 + mem[_2349]]
    if mem[_2349 + mem[_2349]] > test266151307():
        revert with 'NH{q', 65
    if ceil32(32 * mem[_2349 + mem[_2349]]) + 1 < 0 or _2349 + ceil32(return_data.size) + ceil32(32 * mem[_2349 + mem[_2349]]) + 1 > test266151307():
        revert with 'NH{q', 65
    mem[64] = _2349 + ceil32(return_data.size) + ceil32(32 * mem[_2349 + mem[_2349]]) + 1
    mem[_2349 + ceil32(return_data.size)] = _2355
    require return_data.size >= _2352 + (32 * _2355) + 32
    mem[_2349 + ceil32(return_data.size) + 32 len 32 * _2355] = mem[_2349 + _2352 + 32 len 32 * _2355]
    if 1 >= _2355:
        revert with 'NH{q', 50
    if _1885 <= mem[_2349 + ceil32(return_data.size) + 64]:
        _2771 = mem[64]
        mem[64] = mem[64] + (32 * stor11.length) + 32
        mem[_2771] = stor11.length
        if not stor11.length:
            _2781 = mem[64]
            mem[64] = mem[64] + (32 * stor10.length) + 32
            mem[_2781] = stor10.length
            if not stor10.length:
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2807 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2813 = mem[_2807]
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                _2829 = mem[_2781 + 32]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                if 0 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_2781 + 32] = mem[_2781 + 76 len 20]
                if 1 >= stor10.length:
                    revert with 'NH{q', 50
                mem[_2781 + 64] = address(_2829)
                _2855 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                mem[mem[64] + 164] = stor11.length
                idx = 0
                s = mem[64] + 196
                t = _2771 + 32
                while idx < stor11.length:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_2855 + 100] = this.address
                mem[_2855 + 132] = test266151307()
                require ext_code.size(sub_16a84344Address)
                call sub_16a84344Address.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _2855 + (32 * stor11.length) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(tokenAddr)
                staticcall tokenAddr.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3185 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3191 = mem[_3185]
                _3197 = mem[64]
                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3191
                mem[mem[64] + 36] = 0
                mem[mem[64] + 68] = 160
                _3203 = mem[_2781]
                mem[mem[64] + 164] = mem[_2781]
                idx = 0
                s = mem[64] + 196
                t = _2781 + 32
                while idx < _3203:
                    mem[s] = mem[t + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_3197 + 100] = this.address
                mem[_3197 + 132] = test266151307()
                require ext_code.size(sub_2354c7aeAddress)
                call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3197 + (32 * _3203) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[mem[64] + 4] = this.address
                require ext_code.size(sub_13764611Address)
                staticcall sub_13764611Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3541 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3585 = mem[_3541]
                _3625 = mem[64]
                mem[64] = mem[64] + 64
                mem[_3625] = 26
                mem[_3625 + 32] = 'SafeMath: division by zero'
                if not _3585 / 10^18:
                    _3717 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3717] = 1
                    mem[_3717 + 32] = '0'
                    _3745 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3745] = 26
                    mem[_3745 + 32] = 'SafeMath: division by zero'
                    if not _2813 / 10^18:
                        _3831 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_3831] = 1
                        mem[_3831 + 32] = '0'
                        _3863 = mem[64]
                        mem[mem[64]] = 3
                        mem[64] = mem[64] + 64
                        mem[_3863 + 32 len 3] = call.data[calldata.size len 3]
                        idx = 0
                        s = 0
                        while idx < 1:
                            if idx >= mem[_3717]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_3863]:
                                revert with 'NH{q', 50
                            mem[s + _3863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if 1 >= mem[_3863]:
                            revert with 'NH{q', 50
                        mem[_3863 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _6010 = mem[_3831]
                        idx = 0
                        s = 2
                        while idx < _6010:
                            if idx >= mem[_3831]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_3863]:
                                revert with 'NH{q', 50
                            mem[s + _3863 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3831')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3831')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _6010 = mem[_3831]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _6116 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _6152 = mem[_3863]
                        mem[mem[64] + 36] = mem[_3863]
                        mem[mem[64] + 68 len ceil32(_6152)] = mem[_3863 + 32 len ceil32(_6152)]
                        if ceil32(_6152) <= _6152:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_6152) + 32]
                        mem[mem[64] + _6152 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_6152) + _6116 + -mem[64] + 68
                    s = 0
                    idx = _2813 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _4502 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2813 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_4502]:
                                revert with 'NH{q', 50
                            mem[t + _4502 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _6111 = mem[_4502]
                        _6112 = mem[_3717]
                        if mem[_3717] > !mem[_4502]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_3717] + mem[_4502]):
                            revert with 'NH{q', 17
                        if mem[_3717] + mem[_4502] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _6315 = mem[64]
                        mem[mem[64]] = mem[_3717] + mem[_4502] + 1
                        mem[64] = mem[64] + floor32(_6112 + _6111 + 32) + 32
                        if not _6112 + _6111 + 1:
                            _7811 = mem[_3717]
                            idx = 0
                            s = 0
                            while idx < _7811:
                                if idx >= mem[_3717]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6315]:
                                    revert with 'NH{q', 50
                                mem[s + _6315 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7811 = mem[_3717]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7811 == -1:
                                revert with 'NH{q', 17
                            if _7811 >= mem[_6315]:
                                revert with 'NH{q', 50
                            mem[_7811 + _6315 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11537 = mem[_4502]
                            idx = 0
                            s = _7811 + 1
                            while idx < _11537:
                                if idx >= mem[_4502]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6315]:
                                    revert with 'NH{q', 50
                                mem[s + _6315 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11537 = mem[_4502]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3585 > _2813:
                            _11853 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11965 = mem[_6315]
                            mem[mem[64] + 36] = mem[_6315]
                            mem[mem[64] + 68 len ceil32(_11965)] = mem[_6315 + 32 len ceil32(_11965)]
                            var152001 = ceil32(_11965)
                            if ceil32(_11965) <= _11965:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11965) + 32]
                            mem[mem[64] + _11965 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11965) + _11853 + -mem[64] + 68
                        mem[_6315 + 32 len _6112 + _6111 + 1] = call.data[calldata.size len _6112 + _6111 + 1]
                        _7812 = mem[_3717]
                        idx = 0
                        s = 0
                        while idx < _7812:
                            if idx >= mem[_3717]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6315]:
                                revert with 'NH{q', 50
                            mem[s + _6315 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7812 = mem[_3717]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7812 == -1:
                            revert with 'NH{q', 17
                        if _7812 >= mem[_6315]:
                            revert with 'NH{q', 50
                        mem[_7812 + _6315 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11538 = mem[_4502]
                        idx = 0
                        s = _7812 + 1
                        while idx < _11538:
                            if idx >= mem[_4502]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6315]:
                                revert with 'NH{q', 50
                            mem[s + _6315 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11538 = mem[_4502]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _11854 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11966 = mem[_6315]
                        mem[mem[64] + 36] = mem[_6315]
                        mem[mem[64] + 68 len ceil32(_11966)] = mem[_6315 + 32 len ceil32(_11966)]
                        var153001 = ceil32(_11966)
                        if ceil32(_11966) <= _11966:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11966) + 32]
                        mem[mem[64] + _11966 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11966) + _11854 + -mem[64] + 68
                    mem[_4502 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2813 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4502]:
                            revert with 'NH{q', 50
                        mem[t + _4502 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6113 = mem[_4502]
                    _6114 = mem[_3717]
                    if mem[_3717] > !mem[_4502]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_3717] + mem[_4502]):
                        revert with 'NH{q', 17
                    if mem[_3717] + mem[_4502] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _6317 = mem[64]
                    mem[mem[64]] = mem[_3717] + mem[_4502] + 1
                    mem[64] = mem[64] + floor32(_6114 + _6113 + 32) + 32
                    if not _6114 + _6113 + 1:
                        _7813 = mem[_3717]
                        idx = 0
                        s = 0
                        while idx < _7813:
                            if idx >= mem[_3717]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6317]:
                                revert with 'NH{q', 50
                            mem[s + _6317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7813 = mem[_3717]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7813 == -1:
                            revert with 'NH{q', 17
                        if _7813 >= mem[_6317]:
                            revert with 'NH{q', 50
                        mem[_7813 + _6317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11539 = mem[_4502]
                        idx = 0
                        s = _7813 + 1
                        while idx < _11539:
                            if idx >= mem[_4502]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6317]:
                                revert with 'NH{q', 50
                            mem[s + _6317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11539 = mem[_4502]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _11855 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11967 = mem[_6317]
                        mem[mem[64] + 36] = mem[_6317]
                        mem[mem[64] + 68 len ceil32(_11967)] = mem[_6317 + 32 len ceil32(_11967)]
                        var153001 = ceil32(_11967)
                        if ceil32(_11967) <= _11967:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11967) + 32]
                        mem[mem[64] + _11967 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11967) + _11855 + -mem[64] + 68
                    mem[_6317 + 32 len _6114 + _6113 + 1] = call.data[calldata.size len _6114 + _6113 + 1]
                    _7814 = mem[_3717]
                    idx = 0
                    s = 0
                    while idx < _7814:
                        if idx >= mem[_3717]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6317]:
                            revert with 'NH{q', 50
                        mem[s + _6317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3717')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7814 = mem[_3717]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7814 == -1:
                        revert with 'NH{q', 17
                    if _7814 >= mem[_6317]:
                        revert with 'NH{q', 50
                    mem[_7814 + _6317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11540 = mem[_4502]
                    idx = 0
                    s = _7814 + 1
                    while idx < _11540:
                        if idx >= mem[_4502]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6317]:
                            revert with 'NH{q', 50
                        mem[s + _6317 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4502')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11540 = mem[_4502]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3585 > _2813:
                    _11856 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11968 = mem[_6317]
                    mem[mem[64] + 36] = mem[_6317]
                    mem[mem[64] + 68 len ceil32(_11968)] = mem[_6317 + 32 len ceil32(_11968)]
                    var154001 = ceil32(_11968)
                    if ceil32(_11968) <= _11968:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11968) + 32]
                    mem[mem[64] + _11968 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11968) + _11856 + -mem[64] + 68
                s = 0
                idx = _3585 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _4501 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3585 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4501]:
                            revert with 'NH{q', 50
                        mem[t + _4501 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6109 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6109] = 26
                    mem[_6109 + 32] = 'SafeMath: division by zero'
                    if not _2813 / 10^18:
                        _6377 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_6377] = 1
                        mem[_6377 + 32] = '0'
                        _6446 = mem[_4501]
                        if mem[_4501] > !1:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4501] + 1):
                            revert with 'NH{q', 17
                        if mem[_4501] + 2 > test266151307():
                            revert with 'NH{q', 65
                        _6667 = mem[64]
                        mem[mem[64]] = mem[_4501] + 2
                        mem[64] = mem[64] + floor32(_6446 + 33) + 32
                        if not _6446 + 2:
                            _7807 = mem[_4501]
                            idx = 0
                            s = 0
                            while idx < _7807:
                                if idx >= mem[_4501]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6667]:
                                    revert with 'NH{q', 50
                                mem[s + _6667 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _7807 = mem[_4501]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _7807 == -1:
                                revert with 'NH{q', 17
                            if _7807 >= mem[_6667]:
                                revert with 'NH{q', 50
                            mem[_7807 + _6667 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _11533 = mem[_6377]
                            idx = 0
                            s = _7807 + 1
                            while idx < _11533:
                                if idx >= mem[_6377]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_6667]:
                                    revert with 'NH{q', 50
                                mem[s + _6667 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6377')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6377')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _11533 = mem[_6377]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3585 > _2813:
                            _11845 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _11961 = mem[_6667]
                            mem[mem[64] + 36] = mem[_6667]
                            mem[mem[64] + 68 len ceil32(_11961)] = mem[_6667 + 32 len ceil32(_11961)]
                            var152001 = ceil32(_11961)
                            if ceil32(_11961) <= _11961:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11961) + 32]
                            mem[mem[64] + _11961 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_11961) + _11845 + -mem[64] + 68
                        mem[_6667 + 32 len _6446 + 2] = call.data[calldata.size len _6446 + 2]
                        _7808 = mem[_4501]
                        idx = 0
                        s = 0
                        while idx < _7808:
                            if idx >= mem[_4501]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6667]:
                                revert with 'NH{q', 50
                            mem[s + _6667 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7808 = mem[_4501]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7808 == -1:
                            revert with 'NH{q', 17
                        if _7808 >= mem[_6667]:
                            revert with 'NH{q', 50
                        mem[_7808 + _6667 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11534 = mem[_6377]
                        idx = 0
                        s = _7808 + 1
                        while idx < _11534:
                            if idx >= mem[_6377]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6667]:
                                revert with 'NH{q', 50
                            mem[s + _6667 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6377')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6377')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11534 = mem[_6377]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _11846 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11962 = mem[_6667]
                        mem[mem[64] + 36] = mem[_6667]
                        mem[mem[64] + 68 len ceil32(_11962)] = mem[_6667 + 32 len ceil32(_11962)]
                        var153001 = ceil32(_11962)
                        if ceil32(_11962) <= _11962:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11962) + 32]
                        mem[mem[64] + _11962 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11962) + _11846 + -mem[64] + 68
                    s = 0
                    idx = _2813 / 10^18
                    while idx:
                        if s == -1:
                            revert with 'NH{q', 17
                        s = s + 1
                        idx = idx / 10
                        continue 
                    if s > test266151307():
                        revert with 'NH{q', 65
                    _7997 = mem[64]
                    mem[mem[64]] = s
                    mem[64] = mem[64] + ceil32(s) + 32
                    if not s:
                        t = s
                        idx = _2813 / 10^18
                        while idx:
                            if 48 > !(idx % 10):
                                revert with 'NH{q', 17
                            if not t:
                                revert with 'NH{q', 17
                            if t - 1 >= mem[_7997]:
                                revert with 'NH{q', 50
                            mem[t + _7997 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                            t = t - 1
                            idx = idx / 10
                            continue 
                        _11841 = mem[_7997]
                        _11842 = mem[_4501]
                        if mem[_4501] > !mem[_7997]:
                            revert with 'NH{q', 17
                        if 1 > !(mem[_4501] + mem[_7997]):
                            revert with 'NH{q', 17
                        if mem[_4501] + mem[_7997] + 1 > test266151307():
                            revert with 'NH{q', 65
                        _12373 = mem[64]
                        mem[mem[64]] = mem[_4501] + mem[_7997] + 1
                        mem[64] = mem[64] + floor32(_11842 + _11841 + 32) + 32
                        if not _11842 + _11841 + 1:
                            _14835 = mem[_4501]
                            idx = 0
                            s = 0
                            while idx < _14835:
                                if idx >= mem[_4501]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12373]:
                                    revert with 'NH{q', 50
                                mem[s + _12373 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _14835 = mem[_4501]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _14835 == -1:
                                revert with 'NH{q', 17
                            if _14835 >= mem[_12373]:
                                revert with 'NH{q', 50
                            mem[_14835 + _12373 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                            _19599 = mem[_7997]
                            idx = 0
                            s = _14835 + 1
                            while idx < _19599:
                                if idx >= mem[_7997]:
                                    revert with 'NH{q', 50
                                if s == -1:
                                    revert with 'NH{q', 17
                                if s >= mem[_12373]:
                                    revert with 'NH{q', 50
                                mem[s + _12373 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) - 256
                                if idx == -1:
                                    revert with 'NH{q', 17
                                _19599 = mem[_7997]
                                idx = idx + 1
                                s = s + 1
                                continue 
                            if _3585 > _2813:
                            _20155 = mem[64]
                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = 32
                            _20355 = mem[_12373]
                            mem[mem[64] + 36] = mem[_12373]
                            mem[mem[64] + 68 len ceil32(_20355)] = mem[_12373 + 32 len ceil32(_20355)]
                            var160001 = ceil32(_20355)
                            if ceil32(_20355) <= _20355:
                                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20355) + 32]
                            mem[mem[64] + _20355 + 68] = 0
                            revert with memory
                              from mem[64]
                               len ceil32(_20355) + _20155 + -mem[64] + 68
                        mem[_12373 + 32 len _11842 + _11841 + 1] = call.data[calldata.size len _11842 + _11841 + 1]
                        _14836 = mem[_4501]
                        idx = 0
                        s = 0
                        while idx < _14836:
                            if idx >= mem[_4501]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12373]:
                                revert with 'NH{q', 50
                            mem[s + _12373 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14836 = mem[_4501]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14836 == -1:
                            revert with 'NH{q', 17
                        if _14836 >= mem[_12373]:
                            revert with 'NH{q', 50
                        mem[_14836 + _12373 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19600 = mem[_7997]
                        idx = 0
                        s = _14836 + 1
                        while idx < _19600:
                            if idx >= mem[_7997]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12373]:
                                revert with 'NH{q', 50
                            mem[s + _12373 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19600 = mem[_7997]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _20156 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20356 = mem[_12373]
                        mem[mem[64] + 36] = mem[_12373]
                        mem[mem[64] + 68 len ceil32(_20356)] = mem[_12373 + 32 len ceil32(_20356)]
                        var161001 = ceil32(_20356)
                        if ceil32(_20356) <= _20356:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20356) + 32]
                        mem[mem[64] + _20356 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20356) + _20156 + -mem[64] + 68
                    mem[_7997 + 32 len s] = call.data[calldata.size len s]
                    t = s
                    idx = _2813 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_7997]:
                            revert with 'NH{q', 50
                        mem[t + _7997 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11843 = mem[_7997]
                    _11844 = mem[_4501]
                    if mem[_4501] > !mem[_7997]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4501] + mem[_7997]):
                        revert with 'NH{q', 17
                    if mem[_4501] + mem[_7997] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12375 = mem[64]
                    mem[mem[64]] = mem[_4501] + mem[_7997] + 1
                    mem[64] = mem[64] + floor32(_11844 + _11843 + 32) + 32
                    if not _11844 + _11843 + 1:
                        _14837 = mem[_4501]
                        idx = 0
                        s = 0
                        while idx < _14837:
                            if idx >= mem[_4501]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12375]:
                                revert with 'NH{q', 50
                            mem[s + _12375 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14837 = mem[_4501]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14837 == -1:
                            revert with 'NH{q', 17
                        if _14837 >= mem[_12375]:
                            revert with 'NH{q', 50
                        mem[_14837 + _12375 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19601 = mem[_7997]
                        idx = 0
                        s = _14837 + 1
                        while idx < _19601:
                            if idx >= mem[_7997]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12375]:
                                revert with 'NH{q', 50
                            mem[s + _12375 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19601 = mem[_7997]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _20157 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20357 = mem[_12375]
                        mem[mem[64] + 36] = mem[_12375]
                        mem[mem[64] + 68 len ceil32(_20357)] = mem[_12375 + 32 len ceil32(_20357)]
                        var161001 = ceil32(_20357)
                        if ceil32(_20357) <= _20357:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20357) + 32]
                        mem[mem[64] + _20357 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20357) + _20157 + -mem[64] + 68
                    mem[_12375 + 32 len _11844 + _11843 + 1] = call.data[calldata.size len _11844 + _11843 + 1]
                    _14838 = mem[_4501]
                    idx = 0
                    s = 0
                    while idx < _14838:
                        if idx >= mem[_4501]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12375]:
                            revert with 'NH{q', 50
                        mem[s + _12375 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14838 = mem[_4501]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14838 == -1:
                        revert with 'NH{q', 17
                    if _14838 >= mem[_12375]:
                        revert with 'NH{q', 50
                    mem[_14838 + _12375 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19602 = mem[_7997]
                    idx = 0
                    s = _14838 + 1
                    while idx < _19602:
                        if idx >= mem[_7997]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12375]:
                            revert with 'NH{q', 50
                        mem[s + _12375 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7997')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19602 = mem[_7997]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3585 > _2813:
                    _20158 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20358 = mem[_12375]
                    mem[mem[64] + 36] = mem[_12375]
                    mem[mem[64] + 68 len ceil32(_20358)] = mem[_12375 + 32 len ceil32(_20358)]
                    var162001 = ceil32(_20358)
                    if ceil32(_20358) <= _20358:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20358) + 32]
                    mem[mem[64] + _20358 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20358) + _20158 + -mem[64] + 68
                mem[_4501 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3585 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_4501]:
                        revert with 'NH{q', 50
                    mem[t + _4501 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _6110 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6110] = 26
                mem[_6110 + 32] = 'SafeMath: division by zero'
                if not _2813 / 10^18:
                    _6378 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6378] = 1
                    mem[_6378 + 32] = '0'
                    _6448 = mem[_4501]
                    if mem[_4501] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4501] + 1):
                        revert with 'NH{q', 17
                    if mem[_4501] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _6668 = mem[64]
                    mem[mem[64]] = mem[_4501] + 2
                    mem[64] = mem[64] + floor32(_6448 + 33) + 32
                    if not _6448 + 2:
                        _7809 = mem[_4501]
                        idx = 0
                        s = 0
                        while idx < _7809:
                            if idx >= mem[_4501]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6668]:
                                revert with 'NH{q', 50
                            mem[s + _6668 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7809 = mem[_4501]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7809 == -1:
                            revert with 'NH{q', 17
                        if _7809 >= mem[_6668]:
                            revert with 'NH{q', 50
                        mem[_7809 + _6668 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11535 = mem[_6378]
                        idx = 0
                        s = _7809 + 1
                        while idx < _11535:
                            if idx >= mem[_6378]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6668]:
                                revert with 'NH{q', 50
                            mem[s + _6668 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6378')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6378')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11535 = mem[_6378]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _11851 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11963 = mem[_6668]
                        mem[mem[64] + 36] = mem[_6668]
                        mem[mem[64] + 68 len ceil32(_11963)] = mem[_6668 + 32 len ceil32(_11963)]
                        var153001 = ceil32(_11963)
                        if ceil32(_11963) <= _11963:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11963) + 32]
                        mem[mem[64] + _11963 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11963) + _11851 + -mem[64] + 68
                    mem[_6668 + 32 len _6448 + 2] = call.data[calldata.size len _6448 + 2]
                    _7810 = mem[_4501]
                    idx = 0
                    s = 0
                    while idx < _7810:
                        if idx >= mem[_4501]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6668]:
                            revert with 'NH{q', 50
                        mem[s + _6668 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7810 = mem[_4501]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7810 == -1:
                        revert with 'NH{q', 17
                    if _7810 >= mem[_6668]:
                        revert with 'NH{q', 50
                    mem[_7810 + _6668 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11536 = mem[_6378]
                    idx = 0
                    s = _7810 + 1
                    while idx < _11536:
                        if idx >= mem[_6378]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6668]:
                            revert with 'NH{q', 50
                        mem[s + _6668 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6378')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6378')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11536 = mem[_6378]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3585 > _2813:
                    _11852 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11964 = mem[_6668]
                    mem[mem[64] + 36] = mem[_6668]
                    mem[mem[64] + 68 len ceil32(_11964)] = mem[_6668 + 32 len ceil32(_11964)]
                    var154001 = ceil32(_11964)
                    if ceil32(_11964) <= _11964:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11964) + 32]
                    mem[mem[64] + _11964 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11964) + _11852 + -mem[64] + 68
                s = 0
                idx = _2813 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _8000 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _2813 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_8000]:
                            revert with 'NH{q', 50
                        mem[t + _8000 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11847 = mem[_8000]
                    _11848 = mem[_4501]
                    if mem[_4501] > !mem[_8000]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4501] + mem[_8000]):
                        revert with 'NH{q', 17
                    if mem[_4501] + mem[_8000] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12377 = mem[64]
                    mem[mem[64]] = mem[_4501] + mem[_8000] + 1
                    mem[64] = mem[64] + floor32(_11848 + _11847 + 32) + 32
                    if not _11848 + _11847 + 1:
                        _14839 = mem[_4501]
                        idx = 0
                        s = 0
                        while idx < _14839:
                            if idx >= mem[_4501]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12377]:
                                revert with 'NH{q', 50
                            mem[s + _12377 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14839 = mem[_4501]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14839 == -1:
                            revert with 'NH{q', 17
                        if _14839 >= mem[_12377]:
                            revert with 'NH{q', 50
                        mem[_14839 + _12377 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19603 = mem[_8000]
                        idx = 0
                        s = _14839 + 1
                        while idx < _19603:
                            if idx >= mem[_8000]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12377]:
                                revert with 'NH{q', 50
                            mem[s + _12377 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19603 = mem[_8000]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3585 > _2813:
                        _20159 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20359 = mem[_12377]
                        mem[mem[64] + 36] = mem[_12377]
                        mem[mem[64] + 68 len ceil32(_20359)] = mem[_12377 + 32 len ceil32(_20359)]
                        var161001 = ceil32(_20359)
                        if ceil32(_20359) <= _20359:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20359) + 32]
                        mem[mem[64] + _20359 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20359) + _20159 + -mem[64] + 68
                    mem[_12377 + 32 len _11848 + _11847 + 1] = call.data[calldata.size len _11848 + _11847 + 1]
                    _14840 = mem[_4501]
                    idx = 0
                    s = 0
                    while idx < _14840:
                        if idx >= mem[_4501]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12377]:
                            revert with 'NH{q', 50
                        mem[s + _12377 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14840 = mem[_4501]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14840 == -1:
                        revert with 'NH{q', 17
                    if _14840 >= mem[_12377]:
                        revert with 'NH{q', 50
                    mem[_14840 + _12377 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19604 = mem[_8000]
                    idx = 0
                    s = _14840 + 1
                    while idx < _19604:
                        if idx >= mem[_8000]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12377]:
                            revert with 'NH{q', 50
                        mem[s + _12377 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19604 = mem[_8000]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3585 > _2813:
                    _20160 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20360 = mem[_12377]
                    mem[mem[64] + 36] = mem[_12377]
                    mem[mem[64] + 68 len ceil32(_20360)] = mem[_12377 + 32 len ceil32(_20360)]
                    var162001 = ceil32(_20360)
                    if ceil32(_20360) <= _20360:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20360) + 32]
                    mem[mem[64] + _20360 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20360) + _20160 + -mem[64] + 68
                mem[_8000 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _2813 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8000]:
                        revert with 'NH{q', 50
                    mem[t + _8000 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11849 = mem[_8000]
                _11850 = mem[_4501]
                if mem[_4501] > !mem[_8000]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_4501] + mem[_8000]):
                    revert with 'NH{q', 17
                if mem[_4501] + mem[_8000] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12379 = mem[64]
                mem[mem[64]] = mem[_4501] + mem[_8000] + 1
                mem[64] = mem[64] + floor32(_11850 + _11849 + 32) + 32
                if not _11850 + _11849 + 1:
                    _14841 = mem[_4501]
                    idx = 0
                    s = 0
                    while idx < _14841:
                        if idx >= mem[_4501]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12379]:
                            revert with 'NH{q', 50
                        mem[s + _12379 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14841 = mem[_4501]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14841 == -1:
                        revert with 'NH{q', 17
                    if _14841 >= mem[_12379]:
                        revert with 'NH{q', 50
                    mem[_14841 + _12379 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19605 = mem[_8000]
                    idx = 0
                    s = _14841 + 1
                    while idx < _19605:
                        if idx >= mem[_8000]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12379]:
                            revert with 'NH{q', 50
                        mem[s + _12379 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19605 = mem[_8000]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3585 > _2813:
                    _20161 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20361 = mem[_12379]
                    mem[mem[64] + 36] = mem[_12379]
                    mem[mem[64] + 68 len ceil32(_20361)] = mem[_12379 + 32 len ceil32(_20361)]
                    var162001 = ceil32(_20361)
                    if ceil32(_20361) <= _20361:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20361) + 32]
                    mem[mem[64] + _20361 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20361) + _20161 + -mem[64] + 68
                mem[_12379 + 32 len _11850 + _11849 + 1] = call.data[calldata.size len _11850 + _11849 + 1]
                _14842 = mem[_4501]
                idx = 0
                s = 0
                while idx < _14842:
                    if idx >= mem[_4501]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12379]:
                        revert with 'NH{q', 50
                    mem[s + _12379 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4501')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14842 = mem[_4501]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14842 == -1:
                    revert with 'NH{q', 17
                if _14842 >= mem[_12379]:
                    revert with 'NH{q', 50
                mem[_14842 + _12379 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19606 = mem[_8000]
                idx = 0
                s = _14842 + 1
                while idx < _19606:
                    if idx >= mem[_8000]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12379]:
                        revert with 'NH{q', 50
                    mem[s + _12379 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8000')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19606 = mem[_8000]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3585 > _2813:
                _20162 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20362 = mem[_12379]
                mem[mem[64] + 36] = mem[_12379]
                mem[mem[64] + 68 len ceil32(_20362)] = mem[_12379 + 32 len ceil32(_20362)]
                var163001 = ceil32(_20362)
                if ceil32(_20362) <= _20362:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20362) + 32]
                mem[mem[64] + _20362 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20362) + _20162 + -mem[64] + 68
            mem[0] = 10
            mem[_2781 + 32] = address(stor10.field_0)
            idx = _2781 + 32
            s = 0
            while _2781 + (32 * stor10.length) > idx:
                mem[idx + 32] = stor10[s].field_256
                idx = idx + 32
                s = s + 1
                continue 
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3503 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3527 = mem[_3503]
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            _3559 = mem[_2781 + 32]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            mem[_2781 + 32] = mem[_2781 + 76 len 20]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            mem[_2781 + 64] = address(_3559)
            _3626 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _3639 = mem[_2771]
            mem[mem[64] + 164] = mem[_2771]
            idx = 0
            s = mem[64] + 196
            t = _2771 + 32
            while idx < _3639:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3626 + 100] = this.address
            mem[_3626 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3626 + (32 * _3639) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4579 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4648 = mem[_4579]
            _4675 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _4648
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _4699 = mem[_2781]
            mem[mem[64] + 164] = mem[_2781]
            idx = 0
            s = mem[64] + 196
            t = _2781 + 32
            while idx < _4699:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4675 + 100] = this.address
            mem[_4675 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _4675 + (32 * _4699) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6203 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6249 = mem[_6203]
            _6319 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6319] = 26
            mem[_6319 + 32] = 'SafeMath: division by zero'
            if not _6249 / 10^18:
                _6591 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6591] = 1
                mem[_6591 + 32] = '0'
                _6673 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6673] = 26
                mem[_6673 + 32] = 'SafeMath: division by zero'
                if not _3527 / 10^18:
                    _7013 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_7013] = 1
                    mem[_7013 + 32] = '0'
                    _7215 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_7215 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_6591]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7215]:
                            revert with 'NH{q', 50
                        mem[s + _7215 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_7215]:
                        revert with 'NH{q', 50
                    mem[_7215 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11542 = mem[_7013]
                    idx = 0
                    s = 2
                    while idx < _11542:
                        if idx >= mem[_7013]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7215]:
                            revert with 'NH{q', 50
                        mem[s + _7215 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7013')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7013')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11542 = mem[_7013]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    _11864 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11970 = mem[_7215]
                    mem[mem[64] + 36] = mem[_7215]
                    mem[mem[64] + 68 len ceil32(_11970)] = mem[_7215 + 32 len ceil32(_11970)]
                    var149001 = ceil32(_11970)
                    if ceil32(_11970) <= _11970:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11970) + 32]
                    mem[mem[64] + _11970 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11970) + _11864 + -mem[64] + 68
                s = 0
                idx = _3527 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _8008 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3527 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_8008]:
                            revert with 'NH{q', 50
                        mem[t + _8008 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11859 = mem[_8008]
                    _11860 = mem[_6591]
                    if mem[_6591] > !mem[_8008]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6591] + mem[_8008]):
                        revert with 'NH{q', 17
                    if mem[_6591] + mem[_8008] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12383 = mem[64]
                    mem[mem[64]] = mem[_6591] + mem[_8008] + 1
                    mem[64] = mem[64] + floor32(_11860 + _11859 + 32) + 32
                    if not _11860 + _11859 + 1:
                        _14847 = mem[_6591]
                        idx = 0
                        s = 0
                        while idx < _14847:
                            if idx >= mem[_6591]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12383]:
                                revert with 'NH{q', 50
                            mem[s + _12383 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14847 = mem[_6591]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14847 == -1:
                            revert with 'NH{q', 17
                        if _14847 >= mem[_12383]:
                            revert with 'NH{q', 50
                        mem[_14847 + _12383 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19611 = mem[_8008]
                        idx = 0
                        s = _14847 + 1
                        while idx < _19611:
                            if idx >= mem[_8008]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12383]:
                                revert with 'NH{q', 50
                            mem[s + _12383 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19611 = mem[_8008]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6249 > _3527:
                        _20175 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20367 = mem[_12383]
                        mem[mem[64] + 36] = mem[_12383]
                        mem[mem[64] + 68 len ceil32(_20367)] = mem[_12383 + 32 len ceil32(_20367)]
                        var156001 = ceil32(_20367)
                        if ceil32(_20367) <= _20367:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20367) + 32]
                        mem[mem[64] + _20367 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20367) + _20175 + -mem[64] + 68
                    mem[_12383 + 32 len _11860 + _11859 + 1] = call.data[calldata.size len _11860 + _11859 + 1]
                    _14848 = mem[_6591]
                    idx = 0
                    s = 0
                    while idx < _14848:
                        if idx >= mem[_6591]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12383]:
                            revert with 'NH{q', 50
                        mem[s + _12383 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14848 = mem[_6591]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14848 == -1:
                        revert with 'NH{q', 17
                    if _14848 >= mem[_12383]:
                        revert with 'NH{q', 50
                    mem[_14848 + _12383 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19612 = mem[_8008]
                    idx = 0
                    s = _14848 + 1
                    while idx < _19612:
                        if idx >= mem[_8008]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12383]:
                            revert with 'NH{q', 50
                        mem[s + _12383 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19612 = mem[_8008]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    _20176 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20368 = mem[_12383]
                    mem[mem[64] + 36] = mem[_12383]
                    mem[mem[64] + 68 len ceil32(_20368)] = mem[_12383 + 32 len ceil32(_20368)]
                    var157001 = ceil32(_20368)
                    if ceil32(_20368) <= _20368:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20368) + 32]
                    mem[mem[64] + _20368 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20368) + _20176 + -mem[64] + 68
                mem[_8008 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3527 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8008]:
                        revert with 'NH{q', 50
                    mem[t + _8008 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11861 = mem[_8008]
                _11862 = mem[_6591]
                if mem[_6591] > !mem[_8008]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6591] + mem[_8008]):
                    revert with 'NH{q', 17
                if mem[_6591] + mem[_8008] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12385 = mem[64]
                mem[mem[64]] = mem[_6591] + mem[_8008] + 1
                mem[64] = mem[64] + floor32(_11862 + _11861 + 32) + 32
                if not _11862 + _11861 + 1:
                    _14849 = mem[_6591]
                    idx = 0
                    s = 0
                    while idx < _14849:
                        if idx >= mem[_6591]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12385]:
                            revert with 'NH{q', 50
                        mem[s + _12385 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14849 = mem[_6591]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14849 == -1:
                        revert with 'NH{q', 17
                    if _14849 >= mem[_12385]:
                        revert with 'NH{q', 50
                    mem[_14849 + _12385 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19613 = mem[_8008]
                    idx = 0
                    s = _14849 + 1
                    while idx < _19613:
                        if idx >= mem[_8008]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12385]:
                            revert with 'NH{q', 50
                        mem[s + _12385 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19613 = mem[_8008]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    _20177 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20369 = mem[_12385]
                    mem[mem[64] + 36] = mem[_12385]
                    mem[mem[64] + 68 len ceil32(_20369)] = mem[_12385 + 32 len ceil32(_20369)]
                    var157001 = ceil32(_20369)
                    if ceil32(_20369) <= _20369:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20369) + 32]
                    mem[mem[64] + _20369 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20369) + _20177 + -mem[64] + 68
                mem[_12385 + 32 len _11862 + _11861 + 1] = call.data[calldata.size len _11862 + _11861 + 1]
                _14850 = mem[_6591]
                idx = 0
                s = 0
                while idx < _14850:
                    if idx >= mem[_6591]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12385]:
                        revert with 'NH{q', 50
                    mem[s + _12385 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6591')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14850 = mem[_6591]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14850 == -1:
                    revert with 'NH{q', 17
                if _14850 >= mem[_12385]:
                    revert with 'NH{q', 50
                mem[_14850 + _12385 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19614 = mem[_8008]
                idx = 0
                s = _14850 + 1
                while idx < _19614:
                    if idx >= mem[_8008]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12385]:
                        revert with 'NH{q', 50
                    mem[s + _12385 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8008')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19614 = mem[_8008]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6249 > _3527:
                _20178 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20370 = mem[_12385]
                mem[mem[64] + 36] = mem[_12385]
                mem[mem[64] + 68 len ceil32(_20370)] = mem[_12385 + 32 len ceil32(_20370)]
                var158001 = ceil32(_20370)
                if ceil32(_20370) <= _20370:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20370) + 32]
                mem[mem[64] + _20370 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20370) + _20178 + -mem[64] + 68
            s = 0
            idx = _6249 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _8007 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6249 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8007]:
                        revert with 'NH{q', 50
                    mem[t + _8007 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11857 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11857] = 26
                mem[_11857 + 32] = 'SafeMath: division by zero'
                if not _3527 / 10^18:
                    _12551 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12551] = 1
                    mem[_12551 + 32] = '0'
                    _12748 = mem[_8007]
                    if mem[_8007] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_8007] + 1):
                        revert with 'NH{q', 17
                    if mem[_8007] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13401 = mem[64]
                    mem[mem[64]] = mem[_8007] + 2
                    mem[64] = mem[64] + floor32(_12748 + 33) + 32
                    if not _12748 + 2:
                        _14843 = mem[_8007]
                        idx = 0
                        s = 0
                        while idx < _14843:
                            if idx >= mem[_8007]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13401]:
                                revert with 'NH{q', 50
                            mem[s + _13401 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14843 = mem[_8007]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14843 == -1:
                            revert with 'NH{q', 17
                        if _14843 >= mem[_13401]:
                            revert with 'NH{q', 50
                        mem[_14843 + _13401 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19607 = mem[_12551]
                        idx = 0
                        s = _14843 + 1
                        while idx < _19607:
                            if idx >= mem[_12551]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13401]:
                                revert with 'NH{q', 50
                            mem[s + _13401 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12551')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12551')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19607 = mem[_12551]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6249 > _3527:
                        _20167 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20363 = mem[_13401]
                        mem[mem[64] + 36] = mem[_13401]
                        mem[mem[64] + 68 len ceil32(_20363)] = mem[_13401 + 32 len ceil32(_20363)]
                        var156001 = ceil32(_20363)
                        if ceil32(_20363) <= _20363:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20363) + 32]
                        mem[mem[64] + _20363 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20363) + _20167 + -mem[64] + 68
                    mem[_13401 + 32 len _12748 + 2] = call.data[calldata.size len _12748 + 2]
                    _14844 = mem[_8007]
                    idx = 0
                    s = 0
                    while idx < _14844:
                        if idx >= mem[_8007]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13401]:
                            revert with 'NH{q', 50
                        mem[s + _13401 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14844 = mem[_8007]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14844 == -1:
                        revert with 'NH{q', 17
                    if _14844 >= mem[_13401]:
                        revert with 'NH{q', 50
                    mem[_14844 + _13401 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19608 = mem[_12551]
                    idx = 0
                    s = _14844 + 1
                    while idx < _19608:
                        if idx >= mem[_12551]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13401]:
                            revert with 'NH{q', 50
                        mem[s + _13401 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12551')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12551')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19608 = mem[_12551]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    _20168 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20364 = mem[_13401]
                    mem[mem[64] + 36] = mem[_13401]
                    mem[mem[64] + 68 len ceil32(_20364)] = mem[_13401 + 32 len ceil32(_20364)]
                    var157001 = ceil32(_20364)
                    if ceil32(_20364) <= _20364:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20364) + 32]
                    mem[mem[64] + _20364 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20364) + _20168 + -mem[64] + 68
                s = 0
                idx = _3527 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15251 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3527 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15251]:
                            revert with 'NH{q', 50
                        mem[t + _15251 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20163 = mem[_15251]
                    _20164 = mem[_8007]
                    if mem[_8007] > !mem[_15251]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_8007] + mem[_15251]):
                        revert with 'NH{q', 17
                    if mem[_8007] + mem[_15251] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21119 = mem[64]
                    mem[mem[64]] = mem[_8007] + mem[_15251] + 1
                    mem[64] = mem[64] + floor32(_20164 + _20163 + 32) + 32
                    if not _20164 + _20163 + 1:
                        _23323 = mem[_8007]
                        idx = 0
                        s = 0
                        while idx < _23323:
                            if idx >= mem[_8007]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21119]:
                                revert with 'NH{q', 50
                            mem[s + _21119 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23323 = mem[_8007]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23323 == -1:
                            revert with 'NH{q', 17
                        if _23323 >= mem[_21119]:
                            revert with 'NH{q', 50
                        mem[_23323 + _21119 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26587 = mem[_15251]
                        idx = 0
                        s = _23323 + 1
                        while idx < _26587:
                            if idx >= mem[_15251]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21119]:
                                revert with 'NH{q', 50
                            mem[s + _21119 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26587 = mem[_15251]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6249 > _3527:
                        _27051 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27211 = mem[_21119]
                        mem[mem[64] + 36] = mem[_21119]
                        mem[mem[64] + 68 len ceil32(_27211)] = mem[_21119 + 32 len ceil32(_27211)]
                        var164001 = ceil32(_27211)
                        if ceil32(_27211) <= _27211:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27211) + 32]
                        mem[mem[64] + _27211 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_27211) + _27051 + -mem[64] + 68
                    mem[_21119 + 32 len _20164 + _20163 + 1] = call.data[calldata.size len _20164 + _20163 + 1]
                    _23324 = mem[_8007]
                    idx = 0
                    s = 0
                    while idx < _23324:
                        if idx >= mem[_8007]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21119]:
                            revert with 'NH{q', 50
                        mem[s + _21119 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23324 = mem[_8007]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23324 == -1:
                        revert with 'NH{q', 17
                    if _23324 >= mem[_21119]:
                        revert with 'NH{q', 50
                    mem[_23324 + _21119 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26588 = mem[_15251]
                    idx = 0
                    s = _23324 + 1
                    while idx < _26588:
                        if idx >= mem[_15251]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21119]:
                            revert with 'NH{q', 50
                        mem[s + _21119 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26588 = mem[_15251]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    _27052 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27212 = mem[_21119]
                    mem[mem[64] + 36] = mem[_21119]
                    mem[mem[64] + 68 len ceil32(_27212)] = mem[_21119 + 32 len ceil32(_27212)]
                    var165001 = ceil32(_27212)
                    if ceil32(_27212) <= _27212:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27212) + 32]
                    mem[mem[64] + _27212 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27212) + _27052 + -mem[64] + 68
                mem[_15251 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3527 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15251]:
                        revert with 'NH{q', 50
                    mem[t + _15251 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20165 = mem[_15251]
                _20166 = mem[_8007]
                if mem[_8007] > !mem[_15251]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8007] + mem[_15251]):
                    revert with 'NH{q', 17
                if mem[_8007] + mem[_15251] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21121 = mem[64]
                mem[mem[64]] = mem[_8007] + mem[_15251] + 1
                mem[64] = mem[64] + floor32(_20166 + _20165 + 32) + 32
                if not _20166 + _20165 + 1:
                    _23325 = mem[_8007]
                    idx = 0
                    s = 0
                    while idx < _23325:
                        if idx >= mem[_8007]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21121]:
                            revert with 'NH{q', 50
                        mem[s + _21121 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23325 = mem[_8007]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23325 == -1:
                        revert with 'NH{q', 17
                    if _23325 >= mem[_21121]:
                        revert with 'NH{q', 50
                    mem[_23325 + _21121 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26589 = mem[_15251]
                    idx = 0
                    s = _23325 + 1
                    while idx < _26589:
                        if idx >= mem[_15251]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21121]:
                            revert with 'NH{q', 50
                        mem[s + _21121 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26589 = mem[_15251]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    _27053 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27213 = mem[_21121]
                    mem[mem[64] + 36] = mem[_21121]
                    mem[mem[64] + 68 len ceil32(_27213)] = mem[_21121 + 32 len ceil32(_27213)]
                    var165001 = ceil32(_27213)
                    if ceil32(_27213) <= _27213:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27213) + 32]
                    mem[mem[64] + _27213 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27213) + _27053 + -mem[64] + 68
                mem[_21121 + 32 len _20166 + _20165 + 1] = call.data[calldata.size len _20166 + _20165 + 1]
                _23326 = mem[_8007]
                idx = 0
                s = 0
                while idx < _23326:
                    if idx >= mem[_8007]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21121]:
                        revert with 'NH{q', 50
                    mem[s + _21121 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23326 = mem[_8007]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23326 == -1:
                    revert with 'NH{q', 17
                if _23326 >= mem[_21121]:
                    revert with 'NH{q', 50
                mem[_23326 + _21121 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26590 = mem[_15251]
                idx = 0
                s = _23326 + 1
                while idx < _26590:
                    if idx >= mem[_15251]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21121]:
                        revert with 'NH{q', 50
                    mem[s + _21121 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15251')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26590 = mem[_15251]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6249 > _3527:
                _27054 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27214 = mem[_21121]
                mem[mem[64] + 36] = mem[_21121]
                mem[mem[64] + 68 len ceil32(_27214)] = mem[_21121 + 32 len ceil32(_27214)]
                var166001 = ceil32(_27214)
                if ceil32(_27214) <= _27214:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27214) + 32]
                mem[mem[64] + _27214 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27214) + _27054 + -mem[64] + 68
            mem[_8007 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6249 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8007]:
                    revert with 'NH{q', 50
                mem[t + _8007 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11858 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11858] = 26
            mem[_11858 + 32] = 'SafeMath: division by zero'
            if not _3527 / 10^18:
                _12552 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12552] = 1
                mem[_12552 + 32] = '0'
                _12750 = mem[_8007]
                if mem[_8007] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8007] + 1):
                    revert with 'NH{q', 17
                if mem[_8007] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13402 = mem[64]
                mem[mem[64]] = mem[_8007] + 2
                mem[64] = mem[64] + floor32(_12750 + 33) + 32
                if not _12750 + 2:
                    _14845 = mem[_8007]
                    idx = 0
                    s = 0
                    while idx < _14845:
                        if idx >= mem[_8007]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13402]:
                            revert with 'NH{q', 50
                        mem[s + _13402 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14845 = mem[_8007]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14845 == -1:
                        revert with 'NH{q', 17
                    if _14845 >= mem[_13402]:
                        revert with 'NH{q', 50
                    mem[_14845 + _13402 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19609 = mem[_12552]
                    idx = 0
                    s = _14845 + 1
                    while idx < _19609:
                        if idx >= mem[_12552]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13402]:
                            revert with 'NH{q', 50
                        mem[s + _13402 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12552')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12552')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19609 = mem[_12552]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20365 = mem[_13402]
                    mem[mem[64] + 36] = mem[_13402]
                    mem[mem[64] + 68 len ceil32(_20365)] = mem[_13402 + 32 len ceil32(_20365)]
                    var157001 = ceil32(_20365)
                    if ceil32(_20365) > _20365:
                        mem[mem[64] + _20365 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20365) + 32]
                mem[_13402 + 32 len _12750 + 2] = call.data[calldata.size len _12750 + 2]
                _14846 = mem[_8007]
                idx = 0
                s = 0
                while idx < _14846:
                    if idx >= mem[_8007]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13402]:
                        revert with 'NH{q', 50
                    mem[s + _13402 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14846 = mem[_8007]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14846 == -1:
                    revert with 'NH{q', 17
                if _14846 >= mem[_13402]:
                    revert with 'NH{q', 50
                mem[_14846 + _13402 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19610 = mem[_12552]
                idx = 0
                s = _14846 + 1
                while idx < _19610:
                    if idx >= mem[_12552]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13402]:
                        revert with 'NH{q', 50
                    mem[s + _13402 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12552')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12552')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19610 = mem[_12552]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6249 > _3527:
                _20174 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20366 = mem[_13402]
                mem[mem[64] + 36] = mem[_13402]
                mem[mem[64] + 68 len ceil32(_20366)] = mem[_13402 + 32 len ceil32(_20366)]
                var158001 = ceil32(_20366)
                if ceil32(_20366) <= _20366:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20366) + 32]
                mem[mem[64] + _20366 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20366) + _20174 + -mem[64] + 68
            s = 0
            idx = _3527 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15254 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3527 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15254]:
                        revert with 'NH{q', 50
                    mem[t + _15254 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20169 = mem[_15254]
                _20170 = mem[_8007]
                if mem[_8007] > !mem[_15254]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8007] + mem[_15254]):
                    revert with 'NH{q', 17
                if mem[_8007] + mem[_15254] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21123 = mem[64]
                mem[mem[64]] = mem[_8007] + mem[_15254] + 1
                mem[64] = mem[64] + floor32(_20170 + _20169 + 32) + 32
                if not _20170 + _20169 + 1:
                    _23327 = mem[_8007]
                    idx = 0
                    s = 0
                    while idx < _23327:
                        if idx >= mem[_8007]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21123]:
                            revert with 'NH{q', 50
                        mem[s + _21123 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23327 = mem[_8007]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23327 == -1:
                        revert with 'NH{q', 17
                    if _23327 >= mem[_21123]:
                        revert with 'NH{q', 50
                    mem[_23327 + _21123 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26591 = mem[_15254]
                    idx = 0
                    s = _23327 + 1
                    while idx < _26591:
                        if idx >= mem[_15254]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21123]:
                            revert with 'NH{q', 50
                        mem[s + _21123 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26591 = mem[_15254]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6249 > _3527:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27215 = mem[_21123]
                    mem[mem[64] + 36] = mem[_21123]
                    mem[mem[64] + 68 len ceil32(_27215)] = mem[_21123 + 32 len ceil32(_27215)]
                    var165001 = ceil32(_27215)
                    if ceil32(_27215) > _27215:
                        mem[mem[64] + _27215 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27215) + 32]
                mem[_21123 + 32 len _20170 + _20169 + 1] = call.data[calldata.size len _20170 + _20169 + 1]
                _23328 = mem[_8007]
                idx = 0
                s = 0
                while idx < _23328:
                    if idx >= mem[_8007]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21123]:
                        revert with 'NH{q', 50
                    mem[s + _21123 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23328 = mem[_8007]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23328 == -1:
                    revert with 'NH{q', 17
                if _23328 >= mem[_21123]:
                    revert with 'NH{q', 50
                mem[_23328 + _21123 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26592 = mem[_15254]
                idx = 0
                s = _23328 + 1
                while idx < _26592:
                    if idx >= mem[_15254]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21123]:
                        revert with 'NH{q', 50
                    mem[s + _21123 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26592 = mem[_15254]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6249 > _3527:
                _27056 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27216 = mem[_21123]
                mem[mem[64] + 36] = mem[_21123]
                mem[mem[64] + 68 len ceil32(_27216)] = mem[_21123 + 32 len ceil32(_27216)]
                var166001 = ceil32(_27216)
                if ceil32(_27216) <= _27216:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27216) + 32]
                mem[mem[64] + _27216 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27216) + _27056 + -mem[64] + 68
            mem[_15254 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3527 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15254]:
                    revert with 'NH{q', 50
                mem[t + _15254 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20171 = mem[_15254]
            _20172 = mem[_8007]
            if mem[_8007] > !mem[_15254]:
                revert with 'NH{q', 17
            if 1 > !(mem[_8007] + mem[_15254]):
                revert with 'NH{q', 17
            if mem[_8007] + mem[_15254] + 1 > test266151307():
                revert with 'NH{q', 65
            _21125 = mem[64]
            mem[mem[64]] = mem[_8007] + mem[_15254] + 1
            mem[64] = mem[64] + floor32(_20172 + _20171 + 32) + 32
            if not _20172 + _20171 + 1:
                _23329 = mem[_8007]
                idx = 0
                s = 0
                while idx < _23329:
                    if idx >= mem[_8007]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21125]:
                        revert with 'NH{q', 50
                    mem[s + _21125 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23329 = mem[_8007]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23329 == -1:
                    revert with 'NH{q', 17
                if _23329 >= mem[_21125]:
                    revert with 'NH{q', 50
                mem[_23329 + _21125 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26593 = mem[_15254]
                idx = 0
                s = _23329 + 1
                while idx < _26593:
                    if idx >= mem[_15254]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21125]:
                        revert with 'NH{q', 50
                    mem[s + _21125 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26593 = mem[_15254]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6249 > _3527:
                _27057 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27217 = mem[_21125]
                mem[mem[64] + 36] = mem[_21125]
                mem[mem[64] + 68 len ceil32(_27217)] = mem[_21125 + 32 len ceil32(_27217)]
                var166001 = ceil32(_27217)
                if ceil32(_27217) <= _27217:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27217) + 32]
                mem[mem[64] + _27217 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27217) + _27057 + -mem[64] + 68
            mem[_21125 + 32 len _20172 + _20171 + 1] = call.data[calldata.size len _20172 + _20171 + 1]
            _23330 = mem[_8007]
            idx = 0
            s = 0
            while idx < _23330:
                if idx >= mem[_8007]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21125]:
                    revert with 'NH{q', 50
                mem[s + _21125 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8007')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23330 = mem[_8007]
                idx = idx + 1
                s = s + 1
                continue 
            if _23330 == -1:
                revert with 'NH{q', 17
            if _23330 >= mem[_21125]:
                revert with 'NH{q', 50
            mem[_23330 + _21125 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26594 = mem[_15254]
            idx = 0
            s = _23330 + 1
            while idx < _26594:
                if idx >= mem[_15254]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21125]:
                    revert with 'NH{q', 50
                mem[s + _21125 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15254')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26594 = mem[_15254]
                idx = idx + 1
                s = s + 1
                continue 
            if _6249 > _3527:
            _27058 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27218 = mem[_21125]
            mem[mem[64] + 36] = mem[_21125]
            mem[mem[64] + 68 len ceil32(_27218)] = mem[_21125 + 32 len ceil32(_27218)]
            var167001 = ceil32(_27218)
            if ceil32(_27218) <= _27218:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27218) + 32]
            mem[mem[64] + _27218 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27218) + _27058 + -mem[64] + 68
        mem[0] = 11
        mem[_2771 + 32] = address(stor11.field_0)
        idx = _2771 + 32
        s = 0
        while _2771 + (32 * stor11.length) > idx:
            mem[idx + 32] = stor11[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        _3455 = mem[64]
        mem[64] = mem[64] + (32 * stor10.length) + 32
        mem[_3455] = stor10.length
        if not stor10.length:
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3519 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3543 = mem[_3519]
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            _3588 = mem[_3455 + 32]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            if 0 >= stor10.length:
                revert with 'NH{q', 50
            mem[_3455 + 32] = mem[_3455 + 76 len 20]
            if 1 >= stor10.length:
                revert with 'NH{q', 50
            mem[_3455 + 64] = address(_3588)
            _3640 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            mem[mem[64] + 164] = stor11.length
            idx = 0
            s = mem[64] + 196
            t = _2771 + 32
            while idx < stor11.length:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3640 + 100] = this.address
            mem[_3640 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3640 + (32 * stor11.length) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4580 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4649 = mem[_4580]
            _4676 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _4649
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _4700 = mem[_3455]
            mem[mem[64] + 164] = mem[_3455]
            idx = 0
            s = mem[64] + 196
            t = _3455 + 32
            while idx < _4700:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_4676 + 100] = this.address
            mem[_4676 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _4676 + (32 * _4700) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6204 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6250 = mem[_6204]
            _6320 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6320] = 26
            mem[_6320 + 32] = 'SafeMath: division by zero'
            if not _6250 / 10^18:
                _6592 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6592] = 1
                mem[_6592 + 32] = '0'
                _6674 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6674] = 26
                mem[_6674 + 32] = 'SafeMath: division by zero'
                if not _3543 / 10^18:
                    _7014 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_7014] = 1
                    mem[_7014 + 32] = '0'
                    _7216 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_7216 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_6592]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7216]:
                            revert with 'NH{q', 50
                        mem[s + _7216 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_7216]:
                        revert with 'NH{q', 50
                    mem[_7216 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11544 = mem[_7014]
                    idx = 0
                    s = 2
                    while idx < _11544:
                        if idx >= mem[_7014]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_7216]:
                            revert with 'NH{q', 50
                        mem[s + _7216 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7014')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7014')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11544 = mem[_7014]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11972 = mem[_7216]
                    mem[mem[64] + 36] = mem[_7216]
                    mem[mem[64] + 68 len ceil32(_11972)] = mem[_7216 + 32 len ceil32(_11972)]
                    var149001 = ceil32(_11972)
                    if ceil32(_11972) > _11972:
                        mem[mem[64] + _11972 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11972) + 32]
                s = 0
                idx = _3543 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _8012 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3543 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_8012]:
                            revert with 'NH{q', 50
                        mem[t + _8012 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11867 = mem[_8012]
                    _11868 = mem[_6592]
                    if mem[_6592] > !mem[_8012]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_6592] + mem[_8012]):
                        revert with 'NH{q', 17
                    if mem[_6592] + mem[_8012] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12389 = mem[64]
                    mem[mem[64]] = mem[_6592] + mem[_8012] + 1
                    mem[64] = mem[64] + floor32(_11868 + _11867 + 32) + 32
                    if not _11868 + _11867 + 1:
                        _14855 = mem[_6592]
                        idx = 0
                        s = 0
                        while idx < _14855:
                            if idx >= mem[_6592]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12389]:
                                revert with 'NH{q', 50
                            mem[s + _12389 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14855 = mem[_6592]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14855 == -1:
                            revert with 'NH{q', 17
                        if _14855 >= mem[_12389]:
                            revert with 'NH{q', 50
                        mem[_14855 + _12389 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19619 = mem[_8012]
                        idx = 0
                        s = _14855 + 1
                        while idx < _19619:
                            if idx >= mem[_8012]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12389]:
                                revert with 'NH{q', 50
                            mem[s + _12389 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19619 = mem[_8012]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6250 > _3543:
                        _20191 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20375 = mem[_12389]
                        mem[mem[64] + 36] = mem[_12389]
                        mem[mem[64] + 68 len ceil32(_20375)] = mem[_12389 + 32 len ceil32(_20375)]
                        var156001 = ceil32(_20375)
                        if ceil32(_20375) <= _20375:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20375) + 32]
                        mem[mem[64] + _20375 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20375) + _20191 + -mem[64] + 68
                    mem[_12389 + 32 len _11868 + _11867 + 1] = call.data[calldata.size len _11868 + _11867 + 1]
                    _14856 = mem[_6592]
                    idx = 0
                    s = 0
                    while idx < _14856:
                        if idx >= mem[_6592]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12389]:
                            revert with 'NH{q', 50
                        mem[s + _12389 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14856 = mem[_6592]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14856 == -1:
                        revert with 'NH{q', 17
                    if _14856 >= mem[_12389]:
                        revert with 'NH{q', 50
                    mem[_14856 + _12389 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19620 = mem[_8012]
                    idx = 0
                    s = _14856 + 1
                    while idx < _19620:
                        if idx >= mem[_8012]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12389]:
                            revert with 'NH{q', 50
                        mem[s + _12389 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19620 = mem[_8012]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20376 = mem[_12389]
                    mem[mem[64] + 36] = mem[_12389]
                    mem[mem[64] + 68 len ceil32(_20376)] = mem[_12389 + 32 len ceil32(_20376)]
                    var157001 = ceil32(_20376)
                    if ceil32(_20376) > _20376:
                        mem[mem[64] + _20376 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20376) + 32]
                mem[_8012 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3543 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8012]:
                        revert with 'NH{q', 50
                    mem[t + _8012 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11869 = mem[_8012]
                _11870 = mem[_6592]
                if mem[_6592] > !mem[_8012]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6592] + mem[_8012]):
                    revert with 'NH{q', 17
                if mem[_6592] + mem[_8012] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12391 = mem[64]
                mem[mem[64]] = mem[_6592] + mem[_8012] + 1
                mem[64] = mem[64] + floor32(_11870 + _11869 + 32) + 32
                if not _11870 + _11869 + 1:
                    _14857 = mem[_6592]
                    idx = 0
                    s = 0
                    while idx < _14857:
                        if idx >= mem[_6592]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12391]:
                            revert with 'NH{q', 50
                        mem[s + _12391 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14857 = mem[_6592]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14857 == -1:
                        revert with 'NH{q', 17
                    if _14857 >= mem[_12391]:
                        revert with 'NH{q', 50
                    mem[_14857 + _12391 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19621 = mem[_8012]
                    idx = 0
                    s = _14857 + 1
                    while idx < _19621:
                        if idx >= mem[_8012]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12391]:
                            revert with 'NH{q', 50
                        mem[s + _12391 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19621 = mem[_8012]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    _20193 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20377 = mem[_12391]
                    mem[mem[64] + 36] = mem[_12391]
                    mem[mem[64] + 68 len ceil32(_20377)] = mem[_12391 + 32 len ceil32(_20377)]
                    var157001 = ceil32(_20377)
                    if ceil32(_20377) <= _20377:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20377) + 32]
                    mem[mem[64] + _20377 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20377) + _20193 + -mem[64] + 68
                mem[_12391 + 32 len _11870 + _11869 + 1] = call.data[calldata.size len _11870 + _11869 + 1]
                _14858 = mem[_6592]
                idx = 0
                s = 0
                while idx < _14858:
                    if idx >= mem[_6592]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12391]:
                        revert with 'NH{q', 50
                    mem[s + _12391 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6592')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14858 = mem[_6592]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14858 == -1:
                    revert with 'NH{q', 17
                if _14858 >= mem[_12391]:
                    revert with 'NH{q', 50
                mem[_14858 + _12391 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19622 = mem[_8012]
                idx = 0
                s = _14858 + 1
                while idx < _19622:
                    if idx >= mem[_8012]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12391]:
                        revert with 'NH{q', 50
                    mem[s + _12391 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8012')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19622 = mem[_8012]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6250 > _3543:
                _20194 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20378 = mem[_12391]
                mem[mem[64] + 36] = mem[_12391]
                mem[mem[64] + 68 len ceil32(_20378)] = mem[_12391 + 32 len ceil32(_20378)]
                var158001 = ceil32(_20378)
                if ceil32(_20378) <= _20378:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20378) + 32]
                mem[mem[64] + _20378 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20378) + _20194 + -mem[64] + 68
            s = 0
            idx = _6250 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _8011 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6250 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8011]:
                        revert with 'NH{q', 50
                    mem[t + _8011 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11865 = mem[64]
                mem[64] = mem[64] + 64
                mem[_11865] = 26
                mem[_11865 + 32] = 'SafeMath: division by zero'
                if not _3543 / 10^18:
                    _12557 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_12557] = 1
                    mem[_12557 + 32] = '0'
                    _12754 = mem[_8011]
                    if mem[_8011] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_8011] + 1):
                        revert with 'NH{q', 17
                    if mem[_8011] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _13407 = mem[64]
                    mem[mem[64]] = mem[_8011] + 2
                    mem[64] = mem[64] + floor32(_12754 + 33) + 32
                    if not _12754 + 2:
                        _14851 = mem[_8011]
                        idx = 0
                        s = 0
                        while idx < _14851:
                            if idx >= mem[_8011]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13407]:
                                revert with 'NH{q', 50
                            mem[s + _13407 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14851 = mem[_8011]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14851 == -1:
                            revert with 'NH{q', 17
                        if _14851 >= mem[_13407]:
                            revert with 'NH{q', 50
                        mem[_14851 + _13407 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19615 = mem[_12557]
                        idx = 0
                        s = _14851 + 1
                        while idx < _19615:
                            if idx >= mem[_12557]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_13407]:
                                revert with 'NH{q', 50
                            mem[s + _13407 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12557')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12557')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19615 = mem[_12557]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6250 > _3543:
                        _20183 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20371 = mem[_13407]
                        mem[mem[64] + 36] = mem[_13407]
                        mem[mem[64] + 68 len ceil32(_20371)] = mem[_13407 + 32 len ceil32(_20371)]
                        var156001 = ceil32(_20371)
                        if ceil32(_20371) <= _20371:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20371) + 32]
                        mem[mem[64] + _20371 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_20371) + _20183 + -mem[64] + 68
                    mem[_13407 + 32 len _12754 + 2] = call.data[calldata.size len _12754 + 2]
                    _14852 = mem[_8011]
                    idx = 0
                    s = 0
                    while idx < _14852:
                        if idx >= mem[_8011]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13407]:
                            revert with 'NH{q', 50
                        mem[s + _13407 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14852 = mem[_8011]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14852 == -1:
                        revert with 'NH{q', 17
                    if _14852 >= mem[_13407]:
                        revert with 'NH{q', 50
                    mem[_14852 + _13407 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19616 = mem[_12557]
                    idx = 0
                    s = _14852 + 1
                    while idx < _19616:
                        if idx >= mem[_12557]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13407]:
                            revert with 'NH{q', 50
                        mem[s + _13407 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12557')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12557')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19616 = mem[_12557]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    _20184 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20372 = mem[_13407]
                    mem[mem[64] + 36] = mem[_13407]
                    mem[mem[64] + 68 len ceil32(_20372)] = mem[_13407 + 32 len ceil32(_20372)]
                    var157001 = ceil32(_20372)
                    if ceil32(_20372) <= _20372:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20372) + 32]
                    mem[mem[64] + _20372 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20372) + _20184 + -mem[64] + 68
                s = 0
                idx = _3543 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _15261 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _3543 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_15261]:
                            revert with 'NH{q', 50
                        mem[t + _15261 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _20179 = mem[_15261]
                    _20180 = mem[_8011]
                    if mem[_8011] > !mem[_15261]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_8011] + mem[_15261]):
                        revert with 'NH{q', 17
                    if mem[_8011] + mem[_15261] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _21127 = mem[64]
                    mem[mem[64]] = mem[_8011] + mem[_15261] + 1
                    mem[64] = mem[64] + floor32(_20180 + _20179 + 32) + 32
                    if not _20180 + _20179 + 1:
                        _23331 = mem[_8011]
                        idx = 0
                        s = 0
                        while idx < _23331:
                            if idx >= mem[_8011]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21127]:
                                revert with 'NH{q', 50
                            mem[s + _21127 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _23331 = mem[_8011]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _23331 == -1:
                            revert with 'NH{q', 17
                        if _23331 >= mem[_21127]:
                            revert with 'NH{q', 50
                        mem[_23331 + _21127 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _26595 = mem[_15261]
                        idx = 0
                        s = _23331 + 1
                        while idx < _26595:
                            if idx >= mem[_15261]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_21127]:
                                revert with 'NH{q', 50
                            mem[s + _21127 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _26595 = mem[_15261]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _6250 > _3543:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _27219 = mem[_21127]
                        mem[mem[64] + 36] = mem[_21127]
                        mem[mem[64] + 68 len ceil32(_27219)] = mem[_21127 + 32 len ceil32(_27219)]
                        var164001 = ceil32(_27219)
                        if ceil32(_27219) > _27219:
                            mem[mem[64] + _27219 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27219) + 32]
                    mem[_21127 + 32 len _20180 + _20179 + 1] = call.data[calldata.size len _20180 + _20179 + 1]
                    _23332 = mem[_8011]
                    idx = 0
                    s = 0
                    while idx < _23332:
                        if idx >= mem[_8011]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21127]:
                            revert with 'NH{q', 50
                        mem[s + _21127 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23332 = mem[_8011]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23332 == -1:
                        revert with 'NH{q', 17
                    if _23332 >= mem[_21127]:
                        revert with 'NH{q', 50
                    mem[_23332 + _21127 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26596 = mem[_15261]
                    idx = 0
                    s = _23332 + 1
                    while idx < _26596:
                        if idx >= mem[_15261]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21127]:
                            revert with 'NH{q', 50
                        mem[s + _21127 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26596 = mem[_15261]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    _27060 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27220 = mem[_21127]
                    mem[mem[64] + 36] = mem[_21127]
                    mem[mem[64] + 68 len ceil32(_27220)] = mem[_21127 + 32 len ceil32(_27220)]
                    var165001 = ceil32(_27220)
                    if ceil32(_27220) <= _27220:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27220) + 32]
                    mem[mem[64] + _27220 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27220) + _27060 + -mem[64] + 68
                mem[_15261 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _3543 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15261]:
                        revert with 'NH{q', 50
                    mem[t + _15261 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20181 = mem[_15261]
                _20182 = mem[_8011]
                if mem[_8011] > !mem[_15261]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8011] + mem[_15261]):
                    revert with 'NH{q', 17
                if mem[_8011] + mem[_15261] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21129 = mem[64]
                mem[mem[64]] = mem[_8011] + mem[_15261] + 1
                mem[64] = mem[64] + floor32(_20182 + _20181 + 32) + 32
                if not _20182 + _20181 + 1:
                    _23333 = mem[_8011]
                    idx = 0
                    s = 0
                    while idx < _23333:
                        if idx >= mem[_8011]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21129]:
                            revert with 'NH{q', 50
                        mem[s + _21129 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23333 = mem[_8011]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23333 == -1:
                        revert with 'NH{q', 17
                    if _23333 >= mem[_21129]:
                        revert with 'NH{q', 50
                    mem[_23333 + _21129 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26597 = mem[_15261]
                    idx = 0
                    s = _23333 + 1
                    while idx < _26597:
                        if idx >= mem[_15261]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21129]:
                            revert with 'NH{q', 50
                        mem[s + _21129 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26597 = mem[_15261]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    _27061 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27221 = mem[_21129]
                    mem[mem[64] + 36] = mem[_21129]
                    mem[mem[64] + 68 len ceil32(_27221)] = mem[_21129 + 32 len ceil32(_27221)]
                    var165001 = ceil32(_27221)
                    if ceil32(_27221) <= _27221:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27221) + 32]
                    mem[mem[64] + _27221 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27221) + _27061 + -mem[64] + 68
                mem[_21129 + 32 len _20182 + _20181 + 1] = call.data[calldata.size len _20182 + _20181 + 1]
                _23334 = mem[_8011]
                idx = 0
                s = 0
                while idx < _23334:
                    if idx >= mem[_8011]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21129]:
                        revert with 'NH{q', 50
                    mem[s + _21129 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23334 = mem[_8011]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23334 == -1:
                    revert with 'NH{q', 17
                if _23334 >= mem[_21129]:
                    revert with 'NH{q', 50
                mem[_23334 + _21129 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26598 = mem[_15261]
                idx = 0
                s = _23334 + 1
                while idx < _26598:
                    if idx >= mem[_15261]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21129]:
                        revert with 'NH{q', 50
                    mem[s + _21129 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15261')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26598 = mem[_15261]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6250 > _3543:
                _27062 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27222 = mem[_21129]
                mem[mem[64] + 36] = mem[_21129]
                mem[mem[64] + 68 len ceil32(_27222)] = mem[_21129 + 32 len ceil32(_27222)]
                var166001 = ceil32(_27222)
                if ceil32(_27222) <= _27222:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27222) + 32]
                mem[mem[64] + _27222 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27222) + _27062 + -mem[64] + 68
            mem[_8011 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6250 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8011]:
                    revert with 'NH{q', 50
                mem[t + _8011 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11866 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11866] = 26
            mem[_11866 + 32] = 'SafeMath: division by zero'
            if not _3543 / 10^18:
                _12558 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12558] = 1
                mem[_12558 + 32] = '0'
                _12756 = mem[_8011]
                if mem[_8011] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8011] + 1):
                    revert with 'NH{q', 17
                if mem[_8011] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13408 = mem[64]
                mem[mem[64]] = mem[_8011] + 2
                mem[64] = mem[64] + floor32(_12756 + 33) + 32
                if not _12756 + 2:
                    _14853 = mem[_8011]
                    idx = 0
                    s = 0
                    while idx < _14853:
                        if idx >= mem[_8011]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13408]:
                            revert with 'NH{q', 50
                        mem[s + _13408 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14853 = mem[_8011]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14853 == -1:
                        revert with 'NH{q', 17
                    if _14853 >= mem[_13408]:
                        revert with 'NH{q', 50
                    mem[_14853 + _13408 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19617 = mem[_12558]
                    idx = 0
                    s = _14853 + 1
                    while idx < _19617:
                        if idx >= mem[_12558]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13408]:
                            revert with 'NH{q', 50
                        mem[s + _13408 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12558')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12558')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19617 = mem[_12558]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    _20189 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20373 = mem[_13408]
                    mem[mem[64] + 36] = mem[_13408]
                    mem[mem[64] + 68 len ceil32(_20373)] = mem[_13408 + 32 len ceil32(_20373)]
                    var157001 = ceil32(_20373)
                    if ceil32(_20373) <= _20373:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20373) + 32]
                    mem[mem[64] + _20373 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20373) + _20189 + -mem[64] + 68
                mem[_13408 + 32 len _12756 + 2] = call.data[calldata.size len _12756 + 2]
                _14854 = mem[_8011]
                idx = 0
                s = 0
                while idx < _14854:
                    if idx >= mem[_8011]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13408]:
                        revert with 'NH{q', 50
                    mem[s + _13408 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14854 = mem[_8011]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14854 == -1:
                    revert with 'NH{q', 17
                if _14854 >= mem[_13408]:
                    revert with 'NH{q', 50
                mem[_14854 + _13408 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19618 = mem[_12558]
                idx = 0
                s = _14854 + 1
                while idx < _19618:
                    if idx >= mem[_12558]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13408]:
                        revert with 'NH{q', 50
                    mem[s + _13408 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12558')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12558')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19618 = mem[_12558]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6250 > _3543:
                _20190 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20374 = mem[_13408]
                mem[mem[64] + 36] = mem[_13408]
                mem[mem[64] + 68 len ceil32(_20374)] = mem[_13408 + 32 len ceil32(_20374)]
                var158001 = ceil32(_20374)
                if ceil32(_20374) <= _20374:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20374) + 32]
                mem[mem[64] + _20374 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20374) + _20190 + -mem[64] + 68
            s = 0
            idx = _3543 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15264 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3543 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15264]:
                        revert with 'NH{q', 50
                    mem[t + _15264 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20185 = mem[_15264]
                _20186 = mem[_8011]
                if mem[_8011] > !mem[_15264]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8011] + mem[_15264]):
                    revert with 'NH{q', 17
                if mem[_8011] + mem[_15264] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21131 = mem[64]
                mem[mem[64]] = mem[_8011] + mem[_15264] + 1
                mem[64] = mem[64] + floor32(_20186 + _20185 + 32) + 32
                if not _20186 + _20185 + 1:
                    _23335 = mem[_8011]
                    idx = 0
                    s = 0
                    while idx < _23335:
                        if idx >= mem[_8011]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21131]:
                            revert with 'NH{q', 50
                        mem[s + _21131 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23335 = mem[_8011]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23335 == -1:
                        revert with 'NH{q', 17
                    if _23335 >= mem[_21131]:
                        revert with 'NH{q', 50
                    mem[_23335 + _21131 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26599 = mem[_15264]
                    idx = 0
                    s = _23335 + 1
                    while idx < _26599:
                        if idx >= mem[_15264]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21131]:
                            revert with 'NH{q', 50
                        mem[s + _21131 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26599 = mem[_15264]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6250 > _3543:
                    _27063 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27223 = mem[_21131]
                    mem[mem[64] + 36] = mem[_21131]
                    mem[mem[64] + 68 len ceil32(_27223)] = mem[_21131 + 32 len ceil32(_27223)]
                    var165001 = ceil32(_27223)
                    if ceil32(_27223) <= _27223:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27223) + 32]
                    mem[mem[64] + _27223 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27223) + _27063 + -mem[64] + 68
                mem[_21131 + 32 len _20186 + _20185 + 1] = call.data[calldata.size len _20186 + _20185 + 1]
                _23336 = mem[_8011]
                idx = 0
                s = 0
                while idx < _23336:
                    if idx >= mem[_8011]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21131]:
                        revert with 'NH{q', 50
                    mem[s + _21131 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23336 = mem[_8011]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23336 == -1:
                    revert with 'NH{q', 17
                if _23336 >= mem[_21131]:
                    revert with 'NH{q', 50
                mem[_23336 + _21131 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26600 = mem[_15264]
                idx = 0
                s = _23336 + 1
                while idx < _26600:
                    if idx >= mem[_15264]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21131]:
                        revert with 'NH{q', 50
                    mem[s + _21131 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26600 = mem[_15264]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6250 > _3543:
                _27064 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27224 = mem[_21131]
                mem[mem[64] + 36] = mem[_21131]
                mem[mem[64] + 68 len ceil32(_27224)] = mem[_21131 + 32 len ceil32(_27224)]
                var166001 = ceil32(_27224)
                if ceil32(_27224) <= _27224:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27224) + 32]
                mem[mem[64] + _27224 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27224) + _27064 + -mem[64] + 68
            mem[_15264 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3543 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15264]:
                    revert with 'NH{q', 50
                mem[t + _15264 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20187 = mem[_15264]
            _20188 = mem[_8011]
            if mem[_8011] > !mem[_15264]:
                revert with 'NH{q', 17
            if 1 > !(mem[_8011] + mem[_15264]):
                revert with 'NH{q', 17
            if mem[_8011] + mem[_15264] + 1 > test266151307():
                revert with 'NH{q', 65
            _21133 = mem[64]
            mem[mem[64]] = mem[_8011] + mem[_15264] + 1
            mem[64] = mem[64] + floor32(_20188 + _20187 + 32) + 32
            if not _20188 + _20187 + 1:
                _23337 = mem[_8011]
                idx = 0
                s = 0
                while idx < _23337:
                    if idx >= mem[_8011]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21133]:
                        revert with 'NH{q', 50
                    mem[s + _21133 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23337 = mem[_8011]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23337 == -1:
                    revert with 'NH{q', 17
                if _23337 >= mem[_21133]:
                    revert with 'NH{q', 50
                mem[_23337 + _21133 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26601 = mem[_15264]
                idx = 0
                s = _23337 + 1
                while idx < _26601:
                    if idx >= mem[_15264]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21133]:
                        revert with 'NH{q', 50
                    mem[s + _21133 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26601 = mem[_15264]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6250 > _3543:
                _27065 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27225 = mem[_21133]
                mem[mem[64] + 36] = mem[_21133]
                mem[mem[64] + 68 len ceil32(_27225)] = mem[_21133 + 32 len ceil32(_27225)]
                var166001 = ceil32(_27225)
                if ceil32(_27225) <= _27225:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27225) + 32]
                mem[mem[64] + _27225 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27225) + _27065 + -mem[64] + 68
            mem[_21133 + 32 len _20188 + _20187 + 1] = call.data[calldata.size len _20188 + _20187 + 1]
            _23338 = mem[_8011]
            idx = 0
            s = 0
            while idx < _23338:
                if idx >= mem[_8011]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21133]:
                    revert with 'NH{q', 50
                mem[s + _21133 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8011')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23338 = mem[_8011]
                idx = idx + 1
                s = s + 1
                continue 
            if _23338 == -1:
                revert with 'NH{q', 17
            if _23338 >= mem[_21133]:
                revert with 'NH{q', 50
            mem[_23338 + _21133 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26602 = mem[_15264]
            idx = 0
            s = _23338 + 1
            while idx < _26602:
                if idx >= mem[_15264]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21133]:
                    revert with 'NH{q', 50
                mem[s + _21133 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15264')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26602 = mem[_15264]
                idx = idx + 1
                s = s + 1
                continue 
            if _6250 > _3543:
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27226 = mem[_21133]
            mem[mem[64] + 36] = mem[_21133]
            mem[mem[64] + 68 len ceil32(_27226)] = mem[_21133 + 32 len ceil32(_27226)]
            var167001 = ceil32(_27226)
            if ceil32(_27226) > _27226:
                mem[mem[64] + _27226 + 68] = 0
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27226) + 32]
        mem[0] = 10
        mem[_3455 + 32] = address(stor10.field_0)
        idx = _3455 + 32
        s = 0
        while _3455 + (32 * stor10.length) > idx:
            mem[idx + 32] = stor10[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6117 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6177 = mem[_6117]
        if 0 >= stor10.length:
            revert with 'NH{q', 50
        _6219 = mem[_3455 + 32]
        if 1 >= stor10.length:
            revert with 'NH{q', 50
        if 0 >= stor10.length:
            revert with 'NH{q', 50
        mem[_3455 + 32] = mem[_3455 + 76 len 20]
        if 1 >= stor10.length:
            revert with 'NH{q', 50
        mem[_3455 + 64] = address(_6219)
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _6335 = mem[_2771]
        mem[mem[64] + 164] = mem[_2771]
        idx = 0
        s = mem[64] + 196
        t = _2771 + 32
        while idx < _6335:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 100] = this.address
        mem[mem[64] + 132] = test266151307()
        require ext_code.size(sub_16a84344Address)
        call sub_16a84344Address.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
             gas gas_remaining wei
            args arg1, 0, 160, address(this.address), test266151307(), mem[mem[64] + 164 len (32 * _6335) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(tokenAddr)
        staticcall tokenAddr.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8279 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8539 = mem[_8279]
        _8627 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _8539
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _8705 = mem[_3455]
        mem[mem[64] + 164] = mem[_3455]
        idx = 0
        s = mem[64] + 196
        t = _3455 + 32
        while idx < _8705:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_8627 + 100] = this.address
        mem[_8627 + 132] = test266151307()
        require ext_code.size(sub_2354c7aeAddress)
        call sub_2354c7aeAddress.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _8627 + (32 * _8705) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _12125 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _12203 = mem[_12125]
        _12393 = mem[64]
        mem[64] = mem[64] + 64
        mem[_12393] = 26
        mem[_12393 + 32] = 'SafeMath: division by zero'
        if not _12203 / 10^18:
            _13195 = mem[64]
            mem[64] = mem[64] + 64
            mem[_13195] = 1
            mem[_13195 + 32] = '0'
            _13413 = mem[64]
            mem[64] = mem[64] + 64
            mem[_13413] = 26
            mem[_13413 + 32] = 'SafeMath: division by zero'
            if not _6177 / 10^18:
                _14223 = mem[64]
                mem[64] = mem[64] + 64
                mem[_14223] = 1
                mem[_14223 + 32] = '0'
                _14561 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 64
                mem[_14561 + 32 len 3] = call.data[calldata.size len 3]
                idx = 0
                s = 0
                while idx < 1:
                    if idx >= mem[_13195]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_14561]:
                        revert with 'NH{q', 50
                    mem[s + _14561 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                if 1 >= mem[_14561]:
                    revert with 'NH{q', 50
                mem[_14561 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19624 = mem[_14223]
                idx = 0
                s = 2
                while idx < _19624:
                    if idx >= mem[_14223]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_14561]:
                        revert with 'NH{q', 50
                    mem[s + _14561 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14223')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14223')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19624 = mem[_14223]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                _20202 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20380 = mem[_14561]
                mem[mem[64] + 36] = mem[_14561]
                mem[mem[64] + 68 len ceil32(_20380)] = mem[_14561 + 32 len ceil32(_20380)]
                var153001 = ceil32(_20380)
                if ceil32(_20380) <= _20380:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20380) + 32]
                mem[mem[64] + _20380 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20380) + _20202 + -mem[64] + 68
            s = 0
            idx = _6177 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15272 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6177 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15272]:
                        revert with 'NH{q', 50
                    mem[t + _15272 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20197 = mem[_15272]
                _20198 = mem[_13195]
                if mem[_13195] > !mem[_15272]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_13195] + mem[_15272]):
                    revert with 'NH{q', 17
                if mem[_13195] + mem[_15272] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21137 = mem[64]
                mem[mem[64]] = mem[_13195] + mem[_15272] + 1
                mem[64] = mem[64] + floor32(_20198 + _20197 + 32) + 32
                if not _20198 + _20197 + 1:
                    _23343 = mem[_13195]
                    idx = 0
                    s = 0
                    while idx < _23343:
                        if idx >= mem[_13195]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21137]:
                            revert with 'NH{q', 50
                        mem[s + _21137 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23343 = mem[_13195]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23343 == -1:
                        revert with 'NH{q', 17
                    if _23343 >= mem[_21137]:
                        revert with 'NH{q', 50
                    mem[_23343 + _21137 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26607 = mem[_15272]
                    idx = 0
                    s = _23343 + 1
                    while idx < _26607:
                        if idx >= mem[_15272]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21137]:
                            revert with 'NH{q', 50
                        mem[s + _21137 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26607 = mem[_15272]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12203 > _6177:
                    _27079 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27231 = mem[_21137]
                    mem[mem[64] + 36] = mem[_21137]
                    mem[mem[64] + 68 len ceil32(_27231)] = mem[_21137 + 32 len ceil32(_27231)]
                    var160001 = ceil32(_27231)
                    if ceil32(_27231) <= _27231:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27231) + 32]
                    mem[mem[64] + _27231 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27231) + _27079 + -mem[64] + 68
                mem[_21137 + 32 len _20198 + _20197 + 1] = call.data[calldata.size len _20198 + _20197 + 1]
                _23344 = mem[_13195]
                idx = 0
                s = 0
                while idx < _23344:
                    if idx >= mem[_13195]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21137]:
                        revert with 'NH{q', 50
                    mem[s + _21137 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23344 = mem[_13195]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23344 == -1:
                    revert with 'NH{q', 17
                if _23344 >= mem[_21137]:
                    revert with 'NH{q', 50
                mem[_23344 + _21137 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26608 = mem[_15272]
                idx = 0
                s = _23344 + 1
                while idx < _26608:
                    if idx >= mem[_15272]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21137]:
                        revert with 'NH{q', 50
                    mem[s + _21137 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26608 = mem[_15272]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                _27080 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27232 = mem[_21137]
                mem[mem[64] + 36] = mem[_21137]
                mem[mem[64] + 68 len ceil32(_27232)] = mem[_21137 + 32 len ceil32(_27232)]
                var161001 = ceil32(_27232)
                if ceil32(_27232) <= _27232:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27232) + 32]
                mem[mem[64] + _27232 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27232) + _27080 + -mem[64] + 68
            mem[_15272 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6177 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15272]:
                    revert with 'NH{q', 50
                mem[t + _15272 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20199 = mem[_15272]
            _20200 = mem[_13195]
            if mem[_13195] > !mem[_15272]:
                revert with 'NH{q', 17
            if 1 > !(mem[_13195] + mem[_15272]):
                revert with 'NH{q', 17
            if mem[_13195] + mem[_15272] + 1 > test266151307():
                revert with 'NH{q', 65
            _21139 = mem[64]
            mem[mem[64]] = mem[_13195] + mem[_15272] + 1
            mem[64] = mem[64] + floor32(_20200 + _20199 + 32) + 32
            if not _20200 + _20199 + 1:
                _23345 = mem[_13195]
                idx = 0
                s = 0
                while idx < _23345:
                    if idx >= mem[_13195]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21139]:
                        revert with 'NH{q', 50
                    mem[s + _21139 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23345 = mem[_13195]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23345 == -1:
                    revert with 'NH{q', 17
                if _23345 >= mem[_21139]:
                    revert with 'NH{q', 50
                mem[_23345 + _21139 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26609 = mem[_15272]
                idx = 0
                s = _23345 + 1
                while idx < _26609:
                    if idx >= mem[_15272]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21139]:
                        revert with 'NH{q', 50
                    mem[s + _21139 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26609 = mem[_15272]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27233 = mem[_21139]
                mem[mem[64] + 36] = mem[_21139]
                mem[mem[64] + 68 len ceil32(_27233)] = mem[_21139 + 32 len ceil32(_27233)]
                var161001 = ceil32(_27233)
                if ceil32(_27233) > _27233:
                    mem[mem[64] + _27233 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27233) + 32]
            mem[_21139 + 32 len _20200 + _20199 + 1] = call.data[calldata.size len _20200 + _20199 + 1]
            _23346 = mem[_13195]
            idx = 0
            s = 0
            while idx < _23346:
                if idx >= mem[_13195]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21139]:
                    revert with 'NH{q', 50
                mem[s + _21139 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13195')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23346 = mem[_13195]
                idx = idx + 1
                s = s + 1
                continue 
            if _23346 == -1:
                revert with 'NH{q', 17
            if _23346 >= mem[_21139]:
                revert with 'NH{q', 50
            mem[_23346 + _21139 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26610 = mem[_15272]
            idx = 0
            s = _23346 + 1
            while idx < _26610:
                if idx >= mem[_15272]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21139]:
                    revert with 'NH{q', 50
                mem[s + _21139 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15272')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26610 = mem[_15272]
                idx = idx + 1
                s = s + 1
                continue 
            if _12203 > _6177:
            _27082 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27234 = mem[_21139]
            mem[mem[64] + 36] = mem[_21139]
            mem[mem[64] + 68 len ceil32(_27234)] = mem[_21139 + 32 len ceil32(_27234)]
            var162001 = ceil32(_27234)
            if ceil32(_27234) <= _27234:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27234) + 32]
            mem[mem[64] + _27234 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27234) + _27082 + -mem[64] + 68
        s = 0
        idx = _12203 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _15271 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _12203 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15271]:
                    revert with 'NH{q', 50
                mem[t + _15271 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20195 = mem[64]
            mem[64] = mem[64] + 64
            mem[_20195] = 26
            mem[_20195 + 32] = 'SafeMath: division by zero'
            if not _6177 / 10^18:
                _21327 = mem[64]
                mem[64] = mem[64] + 64
                mem[_21327] = 1
                mem[_21327 + 32] = '0'
                _21540 = mem[_15271]
                if mem[_15271] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15271] + 1):
                    revert with 'NH{q', 17
                if mem[_15271] + 2 > test266151307():
                    revert with 'NH{q', 65
                _22323 = mem[64]
                mem[mem[64]] = mem[_15271] + 2
                mem[64] = mem[64] + floor32(_21540 + 33) + 32
                if not _21540 + 2:
                    _23339 = mem[_15271]
                    idx = 0
                    s = 0
                    while idx < _23339:
                        if idx >= mem[_15271]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22323]:
                            revert with 'NH{q', 50
                        mem[s + _22323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23339 = mem[_15271]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23339 == -1:
                        revert with 'NH{q', 17
                    if _23339 >= mem[_22323]:
                        revert with 'NH{q', 50
                    mem[_23339 + _22323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26603 = mem[_21327]
                    idx = 0
                    s = _23339 + 1
                    while idx < _26603:
                        if idx >= mem[_21327]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_22323]:
                            revert with 'NH{q', 50
                        mem[s + _22323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21327')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21327')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26603 = mem[_21327]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12203 > _6177:
                    _27071 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27227 = mem[_22323]
                    mem[mem[64] + 36] = mem[_22323]
                    mem[mem[64] + 68 len ceil32(_27227)] = mem[_22323 + 32 len ceil32(_27227)]
                    var160001 = ceil32(_27227)
                    if ceil32(_27227) <= _27227:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27227) + 32]
                    mem[mem[64] + _27227 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27227) + _27071 + -mem[64] + 68
                mem[_22323 + 32 len _21540 + 2] = call.data[calldata.size len _21540 + 2]
                _23340 = mem[_15271]
                idx = 0
                s = 0
                while idx < _23340:
                    if idx >= mem[_15271]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22323]:
                        revert with 'NH{q', 50
                    mem[s + _22323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23340 = mem[_15271]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23340 == -1:
                    revert with 'NH{q', 17
                if _23340 >= mem[_22323]:
                    revert with 'NH{q', 50
                mem[_23340 + _22323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26604 = mem[_21327]
                idx = 0
                s = _23340 + 1
                while idx < _26604:
                    if idx >= mem[_21327]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22323]:
                        revert with 'NH{q', 50
                    mem[s + _22323 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21327')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21327')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26604 = mem[_21327]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27228 = mem[_22323]
                mem[mem[64] + 36] = mem[_22323]
                mem[mem[64] + 68 len ceil32(_27228)] = mem[_22323 + 32 len ceil32(_27228)]
                var161001 = ceil32(_27228)
                if ceil32(_27228) > _27228:
                    mem[mem[64] + _27228 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27228) + 32]
            s = 0
            idx = _6177 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _23791 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _6177 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_23791]:
                        revert with 'NH{q', 50
                    mem[t + _23791 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _27067 = mem[_23791]
                _27068 = mem[_15271]
                if mem[_15271] > !mem[_23791]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_15271] + mem[_23791]):
                    revert with 'NH{q', 17
                if mem[_15271] + mem[_23791] + 1 > test266151307():
                    revert with 'NH{q', 65
                _27867 = mem[64]
                mem[mem[64]] = mem[_15271] + mem[_23791] + 1
                mem[64] = mem[64] + floor32(_27068 + _27067 + 32) + 32
                if not _27068 + _27067 + 1:
                    _28587 = mem[_15271]
                    idx = 0
                    s = 0
                    while idx < _28587:
                        if idx >= mem[_15271]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27867]:
                            revert with 'NH{q', 50
                        mem[s + _27867 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _28587 = mem[_15271]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _28587 == -1:
                        revert with 'NH{q', 17
                    if _28587 >= mem[_27867]:
                        revert with 'NH{q', 50
                    mem[_28587 + _27867 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _29691 = mem[_23791]
                    idx = 0
                    s = _28587 + 1
                    while idx < _29691:
                        if idx >= mem[_23791]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_27867]:
                            revert with 'NH{q', 50
                        mem[s + _27867 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _29691 = mem[_23791]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _12203 > _6177:
                    _29835 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _29883 = mem[_27867]
                    mem[mem[64] + 36] = mem[_27867]
                    mem[mem[64] + 68 len ceil32(_29883)] = mem[_27867 + 32 len ceil32(_29883)]
                    var168001 = ceil32(_29883)
                    if ceil32(_29883) <= _29883:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29883) + 32]
                    mem[mem[64] + _29883 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_29883) + _29835 + -mem[64] + 68
                mem[_27867 + 32 len _27068 + _27067 + 1] = call.data[calldata.size len _27068 + _27067 + 1]
                _28588 = mem[_15271]
                idx = 0
                s = 0
                while idx < _28588:
                    if idx >= mem[_15271]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27867]:
                        revert with 'NH{q', 50
                    mem[s + _27867 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28588 = mem[_15271]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28588 == -1:
                    revert with 'NH{q', 17
                if _28588 >= mem[_27867]:
                    revert with 'NH{q', 50
                mem[_28588 + _27867 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29692 = mem[_23791]
                idx = 0
                s = _28588 + 1
                while idx < _29692:
                    if idx >= mem[_23791]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27867]:
                        revert with 'NH{q', 50
                    mem[s + _27867 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29692 = mem[_23791]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                _29836 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29884 = mem[_27867]
                mem[mem[64] + 36] = mem[_27867]
                mem[mem[64] + 68 len ceil32(_29884)] = mem[_27867 + 32 len ceil32(_29884)]
                var169001 = ceil32(_29884)
                if ceil32(_29884) <= _29884:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29884) + 32]
                mem[mem[64] + _29884 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29884) + _29836 + -mem[64] + 68
            mem[_23791 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _6177 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23791]:
                    revert with 'NH{q', 50
                mem[t + _23791 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _27069 = mem[_23791]
            _27070 = mem[_15271]
            if mem[_15271] > !mem[_23791]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15271] + mem[_23791]):
                revert with 'NH{q', 17
            if mem[_15271] + mem[_23791] + 1 > test266151307():
                revert with 'NH{q', 65
            _27869 = mem[64]
            mem[mem[64]] = mem[_15271] + mem[_23791] + 1
            mem[64] = mem[64] + floor32(_27070 + _27069 + 32) + 32
            if not _27070 + _27069 + 1:
                _28589 = mem[_15271]
                idx = 0
                s = 0
                while idx < _28589:
                    if idx >= mem[_15271]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27869]:
                        revert with 'NH{q', 50
                    mem[s + _27869 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28589 = mem[_15271]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28589 == -1:
                    revert with 'NH{q', 17
                if _28589 >= mem[_27869]:
                    revert with 'NH{q', 50
                mem[_28589 + _27869 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29693 = mem[_23791]
                idx = 0
                s = _28589 + 1
                while idx < _29693:
                    if idx >= mem[_23791]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27869]:
                        revert with 'NH{q', 50
                    mem[s + _27869 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29693 = mem[_23791]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                _29837 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29885 = mem[_27869]
                mem[mem[64] + 36] = mem[_27869]
                mem[mem[64] + 68 len ceil32(_29885)] = mem[_27869 + 32 len ceil32(_29885)]
                var169001 = ceil32(_29885)
                if ceil32(_29885) <= _29885:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29885) + 32]
                mem[mem[64] + _29885 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29885) + _29837 + -mem[64] + 68
            mem[_27869 + 32 len _27070 + _27069 + 1] = call.data[calldata.size len _27070 + _27069 + 1]
            _28590 = mem[_15271]
            idx = 0
            s = 0
            while idx < _28590:
                if idx >= mem[_15271]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27869]:
                    revert with 'NH{q', 50
                mem[s + _27869 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28590 = mem[_15271]
                idx = idx + 1
                s = s + 1
                continue 
            if _28590 == -1:
                revert with 'NH{q', 17
            if _28590 >= mem[_27869]:
                revert with 'NH{q', 50
            mem[_28590 + _27869 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29694 = mem[_23791]
            idx = 0
            s = _28590 + 1
            while idx < _29694:
                if idx >= mem[_23791]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27869]:
                    revert with 'NH{q', 50
                mem[s + _27869 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23791')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29694 = mem[_23791]
                idx = idx + 1
                s = s + 1
                continue 
            if _12203 > _6177:
            _29838 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29886 = mem[_27869]
            mem[mem[64] + 36] = mem[_27869]
            mem[mem[64] + 68 len ceil32(_29886)] = mem[_27869 + 32 len ceil32(_29886)]
            var170001 = ceil32(_29886)
            if ceil32(_29886) <= _29886:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29886) + 32]
            mem[mem[64] + _29886 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29886) + _29838 + -mem[64] + 68
        mem[_15271 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _12203 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15271]:
                revert with 'NH{q', 50
            mem[t + _15271 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20196 = mem[64]
        mem[64] = mem[64] + 64
        mem[_20196] = 26
        mem[_20196 + 32] = 'SafeMath: division by zero'
        if not _6177 / 10^18:
            _21328 = mem[64]
            mem[64] = mem[64] + 64
            mem[_21328] = 1
            mem[_21328 + 32] = '0'
            _21542 = mem[_15271]
            if mem[_15271] > !1:
                revert with 'NH{q', 17
            if 1 > !(mem[_15271] + 1):
                revert with 'NH{q', 17
            if mem[_15271] + 2 > test266151307():
                revert with 'NH{q', 65
            _22324 = mem[64]
            mem[mem[64]] = mem[_15271] + 2
            mem[64] = mem[64] + floor32(_21542 + 33) + 32
            if not _21542 + 2:
                _23341 = mem[_15271]
                idx = 0
                s = 0
                while idx < _23341:
                    if idx >= mem[_15271]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22324]:
                        revert with 'NH{q', 50
                    mem[s + _22324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23341 = mem[_15271]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23341 == -1:
                    revert with 'NH{q', 17
                if _23341 >= mem[_22324]:
                    revert with 'NH{q', 50
                mem[_23341 + _22324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26605 = mem[_21328]
                idx = 0
                s = _23341 + 1
                while idx < _26605:
                    if idx >= mem[_21328]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22324]:
                        revert with 'NH{q', 50
                    mem[s + _22324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21328')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21328')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26605 = mem[_21328]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                _27077 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27229 = mem[_22324]
                mem[mem[64] + 36] = mem[_22324]
                mem[mem[64] + 68 len ceil32(_27229)] = mem[_22324 + 32 len ceil32(_27229)]
                var161001 = ceil32(_27229)
                if ceil32(_27229) <= _27229:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27229) + 32]
                mem[mem[64] + _27229 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27229) + _27077 + -mem[64] + 68
            mem[_22324 + 32 len _21542 + 2] = call.data[calldata.size len _21542 + 2]
            _23342 = mem[_15271]
            idx = 0
            s = 0
            while idx < _23342:
                if idx >= mem[_15271]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22324]:
                    revert with 'NH{q', 50
                mem[s + _22324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23342 = mem[_15271]
                idx = idx + 1
                s = s + 1
                continue 
            if _23342 == -1:
                revert with 'NH{q', 17
            if _23342 >= mem[_22324]:
                revert with 'NH{q', 50
            mem[_23342 + _22324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26606 = mem[_21328]
            idx = 0
            s = _23342 + 1
            while idx < _26606:
                if idx >= mem[_21328]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22324]:
                    revert with 'NH{q', 50
                mem[s + _22324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21328')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21328')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26606 = mem[_21328]
                idx = idx + 1
                s = s + 1
                continue 
            if _12203 > _6177:
            _27078 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27230 = mem[_22324]
            mem[mem[64] + 36] = mem[_22324]
            mem[mem[64] + 68 len ceil32(_27230)] = mem[_22324 + 32 len ceil32(_27230)]
            var162001 = ceil32(_27230)
            if ceil32(_27230) <= _27230:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27230) + 32]
            mem[mem[64] + _27230 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27230) + _27078 + -mem[64] + 68
        s = 0
        idx = _6177 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _23794 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6177 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23794]:
                    revert with 'NH{q', 50
                mem[t + _23794 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _27073 = mem[_23794]
            _27074 = mem[_15271]
            if mem[_15271] > !mem[_23794]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15271] + mem[_23794]):
                revert with 'NH{q', 17
            if mem[_15271] + mem[_23794] + 1 > test266151307():
                revert with 'NH{q', 65
            _27871 = mem[64]
            mem[mem[64]] = mem[_15271] + mem[_23794] + 1
            mem[64] = mem[64] + floor32(_27074 + _27073 + 32) + 32
            if not _27074 + _27073 + 1:
                _28591 = mem[_15271]
                idx = 0
                s = 0
                while idx < _28591:
                    if idx >= mem[_15271]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27871]:
                        revert with 'NH{q', 50
                    mem[s + _27871 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28591 = mem[_15271]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28591 == -1:
                    revert with 'NH{q', 17
                if _28591 >= mem[_27871]:
                    revert with 'NH{q', 50
                mem[_28591 + _27871 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29695 = mem[_23794]
                idx = 0
                s = _28591 + 1
                while idx < _29695:
                    if idx >= mem[_23794]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27871]:
                        revert with 'NH{q', 50
                    mem[s + _27871 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29695 = mem[_23794]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12203 > _6177:
                _29839 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29887 = mem[_27871]
                mem[mem[64] + 36] = mem[_27871]
                mem[mem[64] + 68 len ceil32(_29887)] = mem[_27871 + 32 len ceil32(_29887)]
                var169001 = ceil32(_29887)
                if ceil32(_29887) <= _29887:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29887) + 32]
                mem[mem[64] + _29887 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29887) + _29839 + -mem[64] + 68
            mem[_27871 + 32 len _27074 + _27073 + 1] = call.data[calldata.size len _27074 + _27073 + 1]
            _28592 = mem[_15271]
            idx = 0
            s = 0
            while idx < _28592:
                if idx >= mem[_15271]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27871]:
                    revert with 'NH{q', 50
                mem[s + _27871 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28592 = mem[_15271]
                idx = idx + 1
                s = s + 1
                continue 
            if _28592 == -1:
                revert with 'NH{q', 17
            if _28592 >= mem[_27871]:
                revert with 'NH{q', 50
            mem[_28592 + _27871 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29696 = mem[_23794]
            idx = 0
            s = _28592 + 1
            while idx < _29696:
                if idx >= mem[_23794]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27871]:
                    revert with 'NH{q', 50
                mem[s + _27871 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29696 = mem[_23794]
                idx = idx + 1
                s = s + 1
                continue 
            if _12203 > _6177:
            _29840 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29888 = mem[_27871]
            mem[mem[64] + 36] = mem[_27871]
            mem[mem[64] + 68 len ceil32(_29888)] = mem[_27871 + 32 len ceil32(_29888)]
            var170001 = ceil32(_29888)
            if ceil32(_29888) <= _29888:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29888) + 32]
            mem[mem[64] + _29888 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29888) + _29840 + -mem[64] + 68
        mem[_23794 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6177 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_23794]:
                revert with 'NH{q', 50
            mem[t + _23794 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _27075 = mem[_23794]
        _27076 = mem[_15271]
        if mem[_15271] > !mem[_23794]:
            revert with 'NH{q', 17
        if 1 > !(mem[_15271] + mem[_23794]):
            revert with 'NH{q', 17
        if mem[_15271] + mem[_23794] + 1 > test266151307():
            revert with 'NH{q', 65
        _27873 = mem[64]
        mem[mem[64]] = mem[_15271] + mem[_23794] + 1
        mem[64] = mem[64] + floor32(_27076 + _27075 + 32) + 32
        if not _27076 + _27075 + 1:
            _28593 = mem[_15271]
            idx = 0
            s = 0
            while idx < _28593:
                if idx >= mem[_15271]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27873]:
                    revert with 'NH{q', 50
                mem[s + _27873 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28593 = mem[_15271]
                idx = idx + 1
                s = s + 1
                continue 
            if _28593 == -1:
                revert with 'NH{q', 17
            if _28593 >= mem[_27873]:
                revert with 'NH{q', 50
            mem[_28593 + _27873 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29697 = mem[_23794]
            idx = 0
            s = _28593 + 1
            while idx < _29697:
                if idx >= mem[_23794]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27873]:
                    revert with 'NH{q', 50
                mem[s + _27873 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29697 = mem[_23794]
                idx = idx + 1
                s = s + 1
                continue 
            if _12203 > _6177:
            _29841 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29889 = mem[_27873]
            mem[mem[64] + 36] = mem[_27873]
            mem[mem[64] + 68 len ceil32(_29889)] = mem[_27873 + 32 len ceil32(_29889)]
            var170001 = ceil32(_29889)
            if ceil32(_29889) <= _29889:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29889) + 32]
            mem[mem[64] + _29889 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29889) + _29841 + -mem[64] + 68
        mem[_27873 + 32 len _27076 + _27075 + 1] = call.data[calldata.size len _27076 + _27075 + 1]
        _28594 = mem[_15271]
        idx = 0
        s = 0
        while idx < _28594:
            if idx >= mem[_15271]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27873]:
                revert with 'NH{q', 50
            mem[s + _27873 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15271')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _28594 = mem[_15271]
            idx = idx + 1
            s = s + 1
            continue 
        if _28594 == -1:
            revert with 'NH{q', 17
        if _28594 >= mem[_27873]:
            revert with 'NH{q', 50
        mem[_28594 + _27873 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _29698 = mem[_23794]
        idx = 0
        s = _28594 + 1
        while idx < _29698:
            if idx >= mem[_23794]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27873]:
                revert with 'NH{q', 50
            mem[s + _27873 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23794')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _29698 = mem[_23794]
            idx = idx + 1
            s = s + 1
            continue 
        if _12203 > _6177:
        _29842 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _29890 = mem[_27873]
        mem[mem[64] + 36] = mem[_27873]
        mem[mem[64] + 68 len ceil32(_29890)] = mem[_27873 + 32 len ceil32(_29890)]
        var171001 = ceil32(_29890)
        if ceil32(_29890) <= _29890:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29890) + 32]
        mem[mem[64] + _29890 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_29890) + _29842 + -mem[64] + 68
    _2772 = mem[64]
    mem[64] = mem[64] + (32 * stor10.length) + 32
    mem[_2772] = stor10.length
    if not stor10.length:
        _2783 = mem[64]
        mem[64] = mem[64] + (32 * stor11.length) + 32
        mem[_2783] = stor11.length
        if not stor11.length:
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2808 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2814 = mem[_2808]
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            _2831 = mem[_2783 + 32]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            if 0 >= stor11.length:
                revert with 'NH{q', 50
            mem[_2783 + 32] = mem[_2783 + 76 len 20]
            if 1 >= stor11.length:
                revert with 'NH{q', 50
            mem[_2783 + 64] = address(_2831)
            _2856 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg1
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            mem[mem[64] + 164] = stor10.length
            idx = 0
            s = mem[64] + 196
            t = _2772 + 32
            while idx < stor10.length:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_2856 + 100] = this.address
            mem[_2856 + 132] = test266151307()
            require ext_code.size(sub_2354c7aeAddress)
            call sub_2354c7aeAddress.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _2856 + (32 * stor10.length) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(tokenAddr)
            staticcall tokenAddr.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3186 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3192 = mem[_3186]
            _3198 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3192
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _3204 = mem[_2783]
            mem[mem[64] + 164] = mem[_2783]
            idx = 0
            s = mem[64] + 196
            t = _2783 + 32
            while idx < _3204:
                mem[s] = mem[t + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3198 + 100] = this.address
            mem[_3198 + 132] = test266151307()
            require ext_code.size(sub_16a84344Address)
            call sub_16a84344Address.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3198 + (32 * _3204) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[mem[64] + 4] = this.address
            require ext_code.size(sub_13764611Address)
            staticcall sub_13764611Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3544 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3590 = mem[_3544]
            _3628 = mem[64]
            mem[64] = mem[64] + 64
            mem[_3628] = 26
            mem[_3628 + 32] = 'SafeMath: division by zero'
            if not _3590 / 10^18:
                _3719 = mem[64]
                mem[64] = mem[64] + 64
                mem[_3719] = 1
                mem[_3719 + 32] = '0'
                _3748 = mem[64]
                mem[64] = mem[64] + 64
                mem[_3748] = 26
                mem[_3748 + 32] = 'SafeMath: division by zero'
                if not _2814 / 10^18:
                    _3833 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_3833] = 1
                    mem[_3833 + 32] = '0'
                    _3864 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 64
                    mem[_3864 + 32 len 3] = call.data[calldata.size len 3]
                    idx = 0
                    s = 0
                    while idx < 1:
                        if idx >= mem[_3719]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_3864]:
                            revert with 'NH{q', 50
                        mem[s + _3864 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if 1 >= mem[_3864]:
                        revert with 'NH{q', 50
                    mem[_3864 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _6012 = mem[_3833]
                    idx = 0
                    s = 2
                    while idx < _6012:
                        if idx >= mem[_3833]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_3864]:
                            revert with 'NH{q', 50
                        mem[s + _3864 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3833')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3833')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _6012 = mem[_3833]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    _6125 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _6158 = mem[_3864]
                    mem[mem[64] + 36] = mem[_3864]
                    mem[mem[64] + 68 len ceil32(_6158)] = mem[_3864 + 32 len ceil32(_6158)]
                    if ceil32(_6158) <= _6158:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_6158) + 32]
                    mem[mem[64] + _6158 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_6158) + _6125 + -mem[64] + 68
                s = 0
                idx = _2814 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _4508 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _2814 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_4508]:
                            revert with 'NH{q', 50
                        mem[t + _4508 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _6120 = mem[_4508]
                    _6121 = mem[_3719]
                    if mem[_3719] > !mem[_4508]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_3719] + mem[_4508]):
                        revert with 'NH{q', 17
                    if mem[_3719] + mem[_4508] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _6324 = mem[64]
                    mem[mem[64]] = mem[_3719] + mem[_4508] + 1
                    mem[64] = mem[64] + floor32(_6121 + _6120 + 32) + 32
                    if not _6121 + _6120 + 1:
                        _7823 = mem[_3719]
                        idx = 0
                        s = 0
                        while idx < _7823:
                            if idx >= mem[_3719]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6324]:
                                revert with 'NH{q', 50
                            mem[s + _6324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7823 = mem[_3719]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7823 == -1:
                            revert with 'NH{q', 17
                        if _7823 >= mem[_6324]:
                            revert with 'NH{q', 50
                        mem[_7823 + _6324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11549 = mem[_4508]
                        idx = 0
                        s = _7823 + 1
                        while idx < _11549:
                            if idx >= mem[_4508]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6324]:
                                revert with 'NH{q', 50
                            mem[s + _6324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11549 = mem[_4508]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3590 > _2814:
                        _11885 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11979 = mem[_6324]
                        mem[mem[64] + 36] = mem[_6324]
                        mem[mem[64] + 68 len ceil32(_11979)] = mem[_6324 + 32 len ceil32(_11979)]
                        var152001 = ceil32(_11979)
                        if ceil32(_11979) <= _11979:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11979) + 32]
                        mem[mem[64] + _11979 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11979) + _11885 + -mem[64] + 68
                    mem[_6324 + 32 len _6121 + _6120 + 1] = call.data[calldata.size len _6121 + _6120 + 1]
                    _7824 = mem[_3719]
                    idx = 0
                    s = 0
                    while idx < _7824:
                        if idx >= mem[_3719]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6324]:
                            revert with 'NH{q', 50
                        mem[s + _6324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7824 = mem[_3719]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7824 == -1:
                        revert with 'NH{q', 17
                    if _7824 >= mem[_6324]:
                        revert with 'NH{q', 50
                    mem[_7824 + _6324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11550 = mem[_4508]
                    idx = 0
                    s = _7824 + 1
                    while idx < _11550:
                        if idx >= mem[_4508]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6324]:
                            revert with 'NH{q', 50
                        mem[s + _6324 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11550 = mem[_4508]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    _11886 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11980 = mem[_6324]
                    mem[mem[64] + 36] = mem[_6324]
                    mem[mem[64] + 68 len ceil32(_11980)] = mem[_6324 + 32 len ceil32(_11980)]
                    var153001 = ceil32(_11980)
                    if ceil32(_11980) <= _11980:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11980) + 32]
                    mem[mem[64] + _11980 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11980) + _11886 + -mem[64] + 68
                mem[_4508 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _2814 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_4508]:
                        revert with 'NH{q', 50
                    mem[t + _4508 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _6122 = mem[_4508]
                _6123 = mem[_3719]
                if mem[_3719] > !mem[_4508]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_3719] + mem[_4508]):
                    revert with 'NH{q', 17
                if mem[_3719] + mem[_4508] + 1 > test266151307():
                    revert with 'NH{q', 65
                _6326 = mem[64]
                mem[mem[64]] = mem[_3719] + mem[_4508] + 1
                mem[64] = mem[64] + floor32(_6123 + _6122 + 32) + 32
                if not _6123 + _6122 + 1:
                    _7825 = mem[_3719]
                    idx = 0
                    s = 0
                    while idx < _7825:
                        if idx >= mem[_3719]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6326]:
                            revert with 'NH{q', 50
                        mem[s + _6326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7825 = mem[_3719]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7825 == -1:
                        revert with 'NH{q', 17
                    if _7825 >= mem[_6326]:
                        revert with 'NH{q', 50
                    mem[_7825 + _6326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11551 = mem[_4508]
                    idx = 0
                    s = _7825 + 1
                    while idx < _11551:
                        if idx >= mem[_4508]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6326]:
                            revert with 'NH{q', 50
                        mem[s + _6326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11551 = mem[_4508]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11981 = mem[_6326]
                    mem[mem[64] + 36] = mem[_6326]
                    mem[mem[64] + 68 len ceil32(_11981)] = mem[_6326 + 32 len ceil32(_11981)]
                    var153001 = ceil32(_11981)
                    if ceil32(_11981) > _11981:
                        mem[mem[64] + _11981 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11981) + 32]
                mem[_6326 + 32 len _6123 + _6122 + 1] = call.data[calldata.size len _6123 + _6122 + 1]
                _7826 = mem[_3719]
                idx = 0
                s = 0
                while idx < _7826:
                    if idx >= mem[_3719]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_6326]:
                        revert with 'NH{q', 50
                    mem[s + _6326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_3719')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _7826 = mem[_3719]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _7826 == -1:
                    revert with 'NH{q', 17
                if _7826 >= mem[_6326]:
                    revert with 'NH{q', 50
                mem[_7826 + _6326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _11552 = mem[_4508]
                idx = 0
                s = _7826 + 1
                while idx < _11552:
                    if idx >= mem[_4508]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_6326]:
                        revert with 'NH{q', 50
                    mem[s + _6326 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4508')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _11552 = mem[_4508]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3590 > _2814:
                _11888 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _11982 = mem[_6326]
                mem[mem[64] + 36] = mem[_6326]
                mem[mem[64] + 68 len ceil32(_11982)] = mem[_6326 + 32 len ceil32(_11982)]
                var154001 = ceil32(_11982)
                if ceil32(_11982) <= _11982:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11982) + 32]
                mem[mem[64] + _11982 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_11982) + _11888 + -mem[64] + 68
            s = 0
            idx = _3590 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _4507 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3590 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_4507]:
                        revert with 'NH{q', 50
                    mem[t + _4507 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _6118 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6118] = 26
                mem[_6118 + 32] = 'SafeMath: division by zero'
                if not _2814 / 10^18:
                    _6384 = mem[64]
                    mem[64] = mem[64] + 64
                    mem[_6384] = 1
                    mem[_6384 + 32] = '0'
                    _6452 = mem[_4507]
                    if mem[_4507] > !1:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4507] + 1):
                        revert with 'NH{q', 17
                    if mem[_4507] + 2 > test266151307():
                        revert with 'NH{q', 65
                    _6676 = mem[64]
                    mem[mem[64]] = mem[_4507] + 2
                    mem[64] = mem[64] + floor32(_6452 + 33) + 32
                    if not _6452 + 2:
                        _7819 = mem[_4507]
                        idx = 0
                        s = 0
                        while idx < _7819:
                            if idx >= mem[_4507]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6676]:
                                revert with 'NH{q', 50
                            mem[s + _6676 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _7819 = mem[_4507]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _7819 == -1:
                            revert with 'NH{q', 17
                        if _7819 >= mem[_6676]:
                            revert with 'NH{q', 50
                        mem[_7819 + _6676 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _11545 = mem[_6384]
                        idx = 0
                        s = _7819 + 1
                        while idx < _11545:
                            if idx >= mem[_6384]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_6676]:
                                revert with 'NH{q', 50
                            mem[s + _6676 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6384')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6384')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _11545 = mem[_6384]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3590 > _2814:
                        _11877 = mem[64]
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _11975 = mem[_6676]
                        mem[mem[64] + 36] = mem[_6676]
                        mem[mem[64] + 68 len ceil32(_11975)] = mem[_6676 + 32 len ceil32(_11975)]
                        var152001 = ceil32(_11975)
                        if ceil32(_11975) <= _11975:
                            revert with 0, 32, mem[mem[64] + 36 len ceil32(_11975) + 32]
                        mem[mem[64] + _11975 + 68] = 0
                        revert with memory
                          from mem[64]
                           len ceil32(_11975) + _11877 + -mem[64] + 68
                    mem[_6676 + 32 len _6452 + 2] = call.data[calldata.size len _6452 + 2]
                    _7820 = mem[_4507]
                    idx = 0
                    s = 0
                    while idx < _7820:
                        if idx >= mem[_4507]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6676]:
                            revert with 'NH{q', 50
                        mem[s + _6676 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7820 = mem[_4507]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7820 == -1:
                        revert with 'NH{q', 17
                    if _7820 >= mem[_6676]:
                        revert with 'NH{q', 50
                    mem[_7820 + _6676 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11546 = mem[_6384]
                    idx = 0
                    s = _7820 + 1
                    while idx < _11546:
                        if idx >= mem[_6384]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6676]:
                            revert with 'NH{q', 50
                        mem[s + _6676 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6384')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6384')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11546 = mem[_6384]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11976 = mem[_6676]
                    mem[mem[64] + 36] = mem[_6676]
                    mem[mem[64] + 68 len ceil32(_11976)] = mem[_6676 + 32 len ceil32(_11976)]
                    var153001 = ceil32(_11976)
                    if ceil32(_11976) > _11976:
                        mem[mem[64] + _11976 + 68] = 0
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11976) + 32]
                s = 0
                idx = _2814 / 10^18
                while idx:
                    if s == -1:
                        revert with 'NH{q', 17
                    s = s + 1
                    idx = idx / 10
                    continue 
                if s > test266151307():
                    revert with 'NH{q', 65
                _8016 = mem[64]
                mem[mem[64]] = s
                mem[64] = mem[64] + ceil32(s) + 32
                if not s:
                    t = s
                    idx = _2814 / 10^18
                    while idx:
                        if 48 > !(idx % 10):
                            revert with 'NH{q', 17
                        if not t:
                            revert with 'NH{q', 17
                        if t - 1 >= mem[_8016]:
                            revert with 'NH{q', 50
                        mem[t + _8016 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                        t = t - 1
                        idx = idx / 10
                        continue 
                    _11873 = mem[_8016]
                    _11874 = mem[_4507]
                    if mem[_4507] > !mem[_8016]:
                        revert with 'NH{q', 17
                    if 1 > !(mem[_4507] + mem[_8016]):
                        revert with 'NH{q', 17
                    if mem[_4507] + mem[_8016] + 1 > test266151307():
                        revert with 'NH{q', 65
                    _12394 = mem[64]
                    mem[mem[64]] = mem[_4507] + mem[_8016] + 1
                    mem[64] = mem[64] + floor32(_11874 + _11873 + 32) + 32
                    if not _11874 + _11873 + 1:
                        _14861 = mem[_4507]
                        idx = 0
                        s = 0
                        while idx < _14861:
                            if idx >= mem[_4507]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12394]:
                                revert with 'NH{q', 50
                            mem[s + _12394 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _14861 = mem[_4507]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _14861 == -1:
                            revert with 'NH{q', 17
                        if _14861 >= mem[_12394]:
                            revert with 'NH{q', 50
                        mem[_14861 + _12394 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                        _19625 = mem[_8016]
                        idx = 0
                        s = _14861 + 1
                        while idx < _19625:
                            if idx >= mem[_8016]:
                                revert with 'NH{q', 50
                            if s == -1:
                                revert with 'NH{q', 17
                            if s >= mem[_12394]:
                                revert with 'NH{q', 50
                            mem[s + _12394 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) - 256
                            if idx == -1:
                                revert with 'NH{q', 17
                            _19625 = mem[_8016]
                            idx = idx + 1
                            s = s + 1
                            continue 
                        if _3590 > _2814:
                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _20381 = mem[_12394]
                        mem[mem[64] + 36] = mem[_12394]
                        mem[mem[64] + 68 len ceil32(_20381)] = mem[_12394 + 32 len ceil32(_20381)]
                        var160001 = ceil32(_20381)
                        if ceil32(_20381) > _20381:
                            mem[mem[64] + _20381 + 68] = 0
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20381) + 32]
                    mem[_12394 + 32 len _11874 + _11873 + 1] = call.data[calldata.size len _11874 + _11873 + 1]
                    _14862 = mem[_4507]
                    idx = 0
                    s = 0
                    while idx < _14862:
                        if idx >= mem[_4507]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12394]:
                            revert with 'NH{q', 50
                        mem[s + _12394 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14862 = mem[_4507]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14862 == -1:
                        revert with 'NH{q', 17
                    if _14862 >= mem[_12394]:
                        revert with 'NH{q', 50
                    mem[_14862 + _12394 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19626 = mem[_8016]
                    idx = 0
                    s = _14862 + 1
                    while idx < _19626:
                        if idx >= mem[_8016]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12394]:
                            revert with 'NH{q', 50
                        mem[s + _12394 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19626 = mem[_8016]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    _20204 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20382 = mem[_12394]
                    mem[mem[64] + 36] = mem[_12394]
                    mem[mem[64] + 68 len ceil32(_20382)] = mem[_12394 + 32 len ceil32(_20382)]
                    var161001 = ceil32(_20382)
                    if ceil32(_20382) <= _20382:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20382) + 32]
                    mem[mem[64] + _20382 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20382) + _20204 + -mem[64] + 68
                mem[_8016 + 32 len s] = call.data[calldata.size len s]
                t = s
                idx = _2814 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8016]:
                        revert with 'NH{q', 50
                    mem[t + _8016 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11875 = mem[_8016]
                _11876 = mem[_4507]
                if mem[_4507] > !mem[_8016]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_4507] + mem[_8016]):
                    revert with 'NH{q', 17
                if mem[_4507] + mem[_8016] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12396 = mem[64]
                mem[mem[64]] = mem[_4507] + mem[_8016] + 1
                mem[64] = mem[64] + floor32(_11876 + _11875 + 32) + 32
                if not _11876 + _11875 + 1:
                    _14863 = mem[_4507]
                    idx = 0
                    s = 0
                    while idx < _14863:
                        if idx >= mem[_4507]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12396]:
                            revert with 'NH{q', 50
                        mem[s + _12396 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14863 = mem[_4507]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14863 == -1:
                        revert with 'NH{q', 17
                    if _14863 >= mem[_12396]:
                        revert with 'NH{q', 50
                    mem[_14863 + _12396 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19627 = mem[_8016]
                    idx = 0
                    s = _14863 + 1
                    while idx < _19627:
                        if idx >= mem[_8016]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12396]:
                            revert with 'NH{q', 50
                        mem[s + _12396 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19627 = mem[_8016]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    _20205 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20383 = mem[_12396]
                    mem[mem[64] + 36] = mem[_12396]
                    mem[mem[64] + 68 len ceil32(_20383)] = mem[_12396 + 32 len ceil32(_20383)]
                    var161001 = ceil32(_20383)
                    if ceil32(_20383) <= _20383:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20383) + 32]
                    mem[mem[64] + _20383 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20383) + _20205 + -mem[64] + 68
                mem[_12396 + 32 len _11876 + _11875 + 1] = call.data[calldata.size len _11876 + _11875 + 1]
                _14864 = mem[_4507]
                idx = 0
                s = 0
                while idx < _14864:
                    if idx >= mem[_4507]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12396]:
                        revert with 'NH{q', 50
                    mem[s + _12396 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14864 = mem[_4507]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14864 == -1:
                    revert with 'NH{q', 17
                if _14864 >= mem[_12396]:
                    revert with 'NH{q', 50
                mem[_14864 + _12396 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19628 = mem[_8016]
                idx = 0
                s = _14864 + 1
                while idx < _19628:
                    if idx >= mem[_8016]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12396]:
                        revert with 'NH{q', 50
                    mem[s + _12396 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8016')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19628 = mem[_8016]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3590 > _2814:
                _20206 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20384 = mem[_12396]
                mem[mem[64] + 36] = mem[_12396]
                mem[mem[64] + 68 len ceil32(_20384)] = mem[_12396 + 32 len ceil32(_20384)]
                var162001 = ceil32(_20384)
                if ceil32(_20384) <= _20384:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20384) + 32]
                mem[mem[64] + _20384 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20384) + _20206 + -mem[64] + 68
            mem[_4507 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3590 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_4507]:
                    revert with 'NH{q', 50
                mem[t + _4507 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _6119 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6119] = 26
            mem[_6119 + 32] = 'SafeMath: division by zero'
            if not _2814 / 10^18:
                _6385 = mem[64]
                mem[64] = mem[64] + 64
                mem[_6385] = 1
                mem[_6385 + 32] = '0'
                _6454 = mem[_4507]
                if mem[_4507] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_4507] + 1):
                    revert with 'NH{q', 17
                if mem[_4507] + 2 > test266151307():
                    revert with 'NH{q', 65
                _6677 = mem[64]
                mem[mem[64]] = mem[_4507] + 2
                mem[64] = mem[64] + floor32(_6454 + 33) + 32
                if not _6454 + 2:
                    _7821 = mem[_4507]
                    idx = 0
                    s = 0
                    while idx < _7821:
                        if idx >= mem[_4507]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6677]:
                            revert with 'NH{q', 50
                        mem[s + _6677 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _7821 = mem[_4507]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _7821 == -1:
                        revert with 'NH{q', 17
                    if _7821 >= mem[_6677]:
                        revert with 'NH{q', 50
                    mem[_7821 + _6677 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _11547 = mem[_6385]
                    idx = 0
                    s = _7821 + 1
                    while idx < _11547:
                        if idx >= mem[_6385]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_6677]:
                            revert with 'NH{q', 50
                        mem[s + _6677 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6385')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6385')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _11547 = mem[_6385]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    _11883 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _11977 = mem[_6677]
                    mem[mem[64] + 36] = mem[_6677]
                    mem[mem[64] + 68 len ceil32(_11977)] = mem[_6677 + 32 len ceil32(_11977)]
                    var153001 = ceil32(_11977)
                    if ceil32(_11977) <= _11977:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_11977) + 32]
                    mem[mem[64] + _11977 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_11977) + _11883 + -mem[64] + 68
                mem[_6677 + 32 len _6454 + 2] = call.data[calldata.size len _6454 + 2]
                _7822 = mem[_4507]
                idx = 0
                s = 0
                while idx < _7822:
                    if idx >= mem[_4507]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_6677]:
                        revert with 'NH{q', 50
                    mem[s + _6677 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _7822 = mem[_4507]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _7822 == -1:
                    revert with 'NH{q', 17
                if _7822 >= mem[_6677]:
                    revert with 'NH{q', 50
                mem[_7822 + _6677 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _11548 = mem[_6385]
                idx = 0
                s = _7822 + 1
                while idx < _11548:
                    if idx >= mem[_6385]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_6677]:
                        revert with 'NH{q', 50
                    mem[s + _6677 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6385')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6385')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _11548 = mem[_6385]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3590 > _2814:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _11978 = mem[_6677]
                mem[mem[64] + 36] = mem[_6677]
                mem[mem[64] + 68 len ceil32(_11978)] = mem[_6677 + 32 len ceil32(_11978)]
                var154001 = ceil32(_11978)
                if ceil32(_11978) > _11978:
                    mem[mem[64] + _11978 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11978) + 32]
            s = 0
            idx = _2814 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _8019 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _2814 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8019]:
                        revert with 'NH{q', 50
                    mem[t + _8019 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11879 = mem[_8019]
                _11880 = mem[_4507]
                if mem[_4507] > !mem[_8019]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_4507] + mem[_8019]):
                    revert with 'NH{q', 17
                if mem[_4507] + mem[_8019] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12398 = mem[64]
                mem[mem[64]] = mem[_4507] + mem[_8019] + 1
                mem[64] = mem[64] + floor32(_11880 + _11879 + 32) + 32
                if not _11880 + _11879 + 1:
                    _14865 = mem[_4507]
                    idx = 0
                    s = 0
                    while idx < _14865:
                        if idx >= mem[_4507]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12398]:
                            revert with 'NH{q', 50
                        mem[s + _12398 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14865 = mem[_4507]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14865 == -1:
                        revert with 'NH{q', 17
                    if _14865 >= mem[_12398]:
                        revert with 'NH{q', 50
                    mem[_14865 + _12398 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19629 = mem[_8019]
                    idx = 0
                    s = _14865 + 1
                    while idx < _19629:
                        if idx >= mem[_8019]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12398]:
                            revert with 'NH{q', 50
                        mem[s + _12398 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19629 = mem[_8019]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _3590 > _2814:
                    _20207 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20385 = mem[_12398]
                    mem[mem[64] + 36] = mem[_12398]
                    mem[mem[64] + 68 len ceil32(_20385)] = mem[_12398 + 32 len ceil32(_20385)]
                    var161001 = ceil32(_20385)
                    if ceil32(_20385) <= _20385:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20385) + 32]
                    mem[mem[64] + _20385 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20385) + _20207 + -mem[64] + 68
                mem[_12398 + 32 len _11880 + _11879 + 1] = call.data[calldata.size len _11880 + _11879 + 1]
                _14866 = mem[_4507]
                idx = 0
                s = 0
                while idx < _14866:
                    if idx >= mem[_4507]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12398]:
                        revert with 'NH{q', 50
                    mem[s + _12398 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14866 = mem[_4507]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14866 == -1:
                    revert with 'NH{q', 17
                if _14866 >= mem[_12398]:
                    revert with 'NH{q', 50
                mem[_14866 + _12398 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19630 = mem[_8019]
                idx = 0
                s = _14866 + 1
                while idx < _19630:
                    if idx >= mem[_8019]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12398]:
                        revert with 'NH{q', 50
                    mem[s + _12398 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19630 = mem[_8019]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3590 > _2814:
                _20208 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20386 = mem[_12398]
                mem[mem[64] + 36] = mem[_12398]
                mem[mem[64] + 68 len ceil32(_20386)] = mem[_12398 + 32 len ceil32(_20386)]
                var162001 = ceil32(_20386)
                if ceil32(_20386) <= _20386:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20386) + 32]
                mem[mem[64] + _20386 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20386) + _20208 + -mem[64] + 68
            mem[_8019 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _2814 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8019]:
                    revert with 'NH{q', 50
                mem[t + _8019 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11881 = mem[_8019]
            _11882 = mem[_4507]
            if mem[_4507] > !mem[_8019]:
                revert with 'NH{q', 17
            if 1 > !(mem[_4507] + mem[_8019]):
                revert with 'NH{q', 17
            if mem[_4507] + mem[_8019] + 1 > test266151307():
                revert with 'NH{q', 65
            _12400 = mem[64]
            mem[mem[64]] = mem[_4507] + mem[_8019] + 1
            mem[64] = mem[64] + floor32(_11882 + _11881 + 32) + 32
            if not _11882 + _11881 + 1:
                _14867 = mem[_4507]
                idx = 0
                s = 0
                while idx < _14867:
                    if idx >= mem[_4507]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12400]:
                        revert with 'NH{q', 50
                    mem[s + _12400 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14867 = mem[_4507]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14867 == -1:
                    revert with 'NH{q', 17
                if _14867 >= mem[_12400]:
                    revert with 'NH{q', 50
                mem[_14867 + _12400 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19631 = mem[_8019]
                idx = 0
                s = _14867 + 1
                while idx < _19631:
                    if idx >= mem[_8019]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12400]:
                        revert with 'NH{q', 50
                    mem[s + _12400 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19631 = mem[_8019]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _3590 > _2814:
                _20209 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20387 = mem[_12400]
                mem[mem[64] + 36] = mem[_12400]
                mem[mem[64] + 68 len ceil32(_20387)] = mem[_12400 + 32 len ceil32(_20387)]
                var162001 = ceil32(_20387)
                if ceil32(_20387) <= _20387:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20387) + 32]
                mem[mem[64] + _20387 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20387) + _20209 + -mem[64] + 68
            mem[_12400 + 32 len _11882 + _11881 + 1] = call.data[calldata.size len _11882 + _11881 + 1]
            _14868 = mem[_4507]
            idx = 0
            s = 0
            while idx < _14868:
                if idx >= mem[_4507]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_12400]:
                    revert with 'NH{q', 50
                mem[s + _12400 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_4507')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _14868 = mem[_4507]
                idx = idx + 1
                s = s + 1
                continue 
            if _14868 == -1:
                revert with 'NH{q', 17
            if _14868 >= mem[_12400]:
                revert with 'NH{q', 50
            mem[_14868 + _12400 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _19632 = mem[_8019]
            idx = 0
            s = _14868 + 1
            while idx < _19632:
                if idx >= mem[_8019]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_12400]:
                    revert with 'NH{q', 50
                mem[s + _12400 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8019')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _19632 = mem[_8019]
                idx = idx + 1
                s = s + 1
                continue 
            if _3590 > _2814:
            _20210 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _20388 = mem[_12400]
            mem[mem[64] + 36] = mem[_12400]
            mem[mem[64] + 68 len ceil32(_20388)] = mem[_12400 + 32 len ceil32(_20388)]
            var163001 = ceil32(_20388)
            if ceil32(_20388) <= _20388:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20388) + 32]
            mem[mem[64] + _20388 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_20388) + _20210 + -mem[64] + 68
        mem[0] = 11
        mem[_2783 + 32] = address(stor11.field_0)
        idx = _2783 + 32
        s = 0
        while _2783 + (32 * stor11.length) > idx:
            mem[idx + 32] = stor11[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3504 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3528 = mem[_3504]
        if 0 >= stor11.length:
            revert with 'NH{q', 50
        _3562 = mem[_2783 + 32]
        if 1 >= stor11.length:
            revert with 'NH{q', 50
        if 0 >= stor11.length:
            revert with 'NH{q', 50
        mem[_2783 + 32] = mem[_2783 + 76 len 20]
        if 1 >= stor11.length:
            revert with 'NH{q', 50
        mem[_2783 + 64] = address(_3562)
        _3629 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _3641 = mem[_2772]
        mem[mem[64] + 164] = mem[_2772]
        idx = 0
        s = mem[64] + 196
        t = _2772 + 32
        while idx < _3641:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_3629 + 100] = this.address
        mem[_3629 + 132] = test266151307()
        require ext_code.size(sub_2354c7aeAddress)
        call sub_2354c7aeAddress.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3629 + (32 * _3641) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(tokenAddr)
        staticcall tokenAddr.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4583 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4655 = mem[_4583]
        _4679 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _4655
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _4703 = mem[_2783]
        mem[mem[64] + 164] = mem[_2783]
        idx = 0
        s = mem[64] + 196
        t = _2783 + 32
        while idx < _4703:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_4679 + 100] = this.address
        mem[_4679 + 132] = test266151307()
        require ext_code.size(sub_16a84344Address)
        call sub_16a84344Address.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _4679 + (32 * _4703) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6208 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6255 = mem[_6208]
        _6328 = mem[64]
        mem[64] = mem[64] + 64
        mem[_6328] = 26
        mem[_6328 + 32] = 'SafeMath: division by zero'
        if not _6255 / 10^18:
            _6598 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6598] = 1
            mem[_6598 + 32] = '0'
            _6682 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6682] = 26
            mem[_6682 + 32] = 'SafeMath: division by zero'
            if not _3528 / 10^18:
                _7019 = mem[64]
                mem[64] = mem[64] + 64
                mem[_7019] = 1
                mem[_7019 + 32] = '0'
                _7217 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 64
                mem[_7217 + 32 len 3] = call.data[calldata.size len 3]
                idx = 0
                s = 0
                while idx < 1:
                    if idx >= mem[_6598]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_7217]:
                        revert with 'NH{q', 50
                    mem[s + _7217 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                if 1 >= mem[_7217]:
                    revert with 'NH{q', 50
                mem[_7217 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _11554 = mem[_7019]
                idx = 0
                s = 2
                while idx < _11554:
                    if idx >= mem[_7019]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_7217]:
                        revert with 'NH{q', 50
                    mem[s + _7217 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7019')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7019')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _11554 = mem[_7019]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _11896 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _11984 = mem[_7217]
                mem[mem[64] + 36] = mem[_7217]
                mem[mem[64] + 68 len ceil32(_11984)] = mem[_7217 + 32 len ceil32(_11984)]
                var149001 = ceil32(_11984)
                if ceil32(_11984) <= _11984:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_11984) + 32]
                mem[mem[64] + _11984 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_11984) + _11896 + -mem[64] + 68
            s = 0
            idx = _3528 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _8027 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3528 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8027]:
                        revert with 'NH{q', 50
                    mem[t + _8027 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11891 = mem[_8027]
                _11892 = mem[_6598]
                if mem[_6598] > !mem[_8027]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6598] + mem[_8027]):
                    revert with 'NH{q', 17
                if mem[_6598] + mem[_8027] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12404 = mem[64]
                mem[mem[64]] = mem[_6598] + mem[_8027] + 1
                mem[64] = mem[64] + floor32(_11892 + _11891 + 32) + 32
                if not _11892 + _11891 + 1:
                    _14873 = mem[_6598]
                    idx = 0
                    s = 0
                    while idx < _14873:
                        if idx >= mem[_6598]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12404]:
                            revert with 'NH{q', 50
                        mem[s + _12404 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14873 = mem[_6598]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14873 == -1:
                        revert with 'NH{q', 17
                    if _14873 >= mem[_12404]:
                        revert with 'NH{q', 50
                    mem[_14873 + _12404 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19637 = mem[_8027]
                    idx = 0
                    s = _14873 + 1
                    while idx < _19637:
                        if idx >= mem[_8027]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12404]:
                            revert with 'NH{q', 50
                        mem[s + _12404 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19637 = mem[_8027]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6255 > _3528:
                    _20223 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20393 = mem[_12404]
                    mem[mem[64] + 36] = mem[_12404]
                    mem[mem[64] + 68 len ceil32(_20393)] = mem[_12404 + 32 len ceil32(_20393)]
                    var156001 = ceil32(_20393)
                    if ceil32(_20393) <= _20393:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20393) + 32]
                    mem[mem[64] + _20393 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20393) + _20223 + -mem[64] + 68
                mem[_12404 + 32 len _11892 + _11891 + 1] = call.data[calldata.size len _11892 + _11891 + 1]
                _14874 = mem[_6598]
                idx = 0
                s = 0
                while idx < _14874:
                    if idx >= mem[_6598]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12404]:
                        revert with 'NH{q', 50
                    mem[s + _12404 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14874 = mem[_6598]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14874 == -1:
                    revert with 'NH{q', 17
                if _14874 >= mem[_12404]:
                    revert with 'NH{q', 50
                mem[_14874 + _12404 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19638 = mem[_8027]
                idx = 0
                s = _14874 + 1
                while idx < _19638:
                    if idx >= mem[_8027]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12404]:
                        revert with 'NH{q', 50
                    mem[s + _12404 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19638 = mem[_8027]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _20224 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20394 = mem[_12404]
                mem[mem[64] + 36] = mem[_12404]
                mem[mem[64] + 68 len ceil32(_20394)] = mem[_12404 + 32 len ceil32(_20394)]
                var157001 = ceil32(_20394)
                if ceil32(_20394) <= _20394:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20394) + 32]
                mem[mem[64] + _20394 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20394) + _20224 + -mem[64] + 68
            mem[_8027 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3528 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8027]:
                    revert with 'NH{q', 50
                mem[t + _8027 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11893 = mem[_8027]
            _11894 = mem[_6598]
            if mem[_6598] > !mem[_8027]:
                revert with 'NH{q', 17
            if 1 > !(mem[_6598] + mem[_8027]):
                revert with 'NH{q', 17
            if mem[_6598] + mem[_8027] + 1 > test266151307():
                revert with 'NH{q', 65
            _12406 = mem[64]
            mem[mem[64]] = mem[_6598] + mem[_8027] + 1
            mem[64] = mem[64] + floor32(_11894 + _11893 + 32) + 32
            if not _11894 + _11893 + 1:
                _14875 = mem[_6598]
                idx = 0
                s = 0
                while idx < _14875:
                    if idx >= mem[_6598]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12406]:
                        revert with 'NH{q', 50
                    mem[s + _12406 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14875 = mem[_6598]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14875 == -1:
                    revert with 'NH{q', 17
                if _14875 >= mem[_12406]:
                    revert with 'NH{q', 50
                mem[_14875 + _12406 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19639 = mem[_8027]
                idx = 0
                s = _14875 + 1
                while idx < _19639:
                    if idx >= mem[_8027]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12406]:
                        revert with 'NH{q', 50
                    mem[s + _12406 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19639 = mem[_8027]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20395 = mem[_12406]
                mem[mem[64] + 36] = mem[_12406]
                mem[mem[64] + 68 len ceil32(_20395)] = mem[_12406 + 32 len ceil32(_20395)]
                var157001 = ceil32(_20395)
                if ceil32(_20395) > _20395:
                    mem[mem[64] + _20395 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20395) + 32]
            mem[_12406 + 32 len _11894 + _11893 + 1] = call.data[calldata.size len _11894 + _11893 + 1]
            _14876 = mem[_6598]
            idx = 0
            s = 0
            while idx < _14876:
                if idx >= mem[_6598]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_12406]:
                    revert with 'NH{q', 50
                mem[s + _12406 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6598')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _14876 = mem[_6598]
                idx = idx + 1
                s = s + 1
                continue 
            if _14876 == -1:
                revert with 'NH{q', 17
            if _14876 >= mem[_12406]:
                revert with 'NH{q', 50
            mem[_14876 + _12406 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _19640 = mem[_8027]
            idx = 0
            s = _14876 + 1
            while idx < _19640:
                if idx >= mem[_8027]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_12406]:
                    revert with 'NH{q', 50
                mem[s + _12406 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8027')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _19640 = mem[_8027]
                idx = idx + 1
                s = s + 1
                continue 
            if _6255 > _3528:
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _20396 = mem[_12406]
            mem[mem[64] + 36] = mem[_12406]
            mem[mem[64] + 68 len ceil32(_20396)] = mem[_12406 + 32 len ceil32(_20396)]
            var158001 = ceil32(_20396)
            if ceil32(_20396) > _20396:
                mem[mem[64] + _20396 + 68] = 0
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_20396) + 32]
        s = 0
        idx = _6255 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _8026 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6255 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8026]:
                    revert with 'NH{q', 50
                mem[t + _8026 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11889 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11889] = 26
            mem[_11889 + 32] = 'SafeMath: division by zero'
            if not _3528 / 10^18:
                _12571 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12571] = 1
                mem[_12571 + 32] = '0'
                _12764 = mem[_8026]
                if mem[_8026] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8026] + 1):
                    revert with 'NH{q', 17
                if mem[_8026] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13422 = mem[64]
                mem[mem[64]] = mem[_8026] + 2
                mem[64] = mem[64] + floor32(_12764 + 33) + 32
                if not _12764 + 2:
                    _14869 = mem[_8026]
                    idx = 0
                    s = 0
                    while idx < _14869:
                        if idx >= mem[_8026]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13422]:
                            revert with 'NH{q', 50
                        mem[s + _13422 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14869 = mem[_8026]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14869 == -1:
                        revert with 'NH{q', 17
                    if _14869 >= mem[_13422]:
                        revert with 'NH{q', 50
                    mem[_14869 + _13422 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19633 = mem[_12571]
                    idx = 0
                    s = _14869 + 1
                    while idx < _19633:
                        if idx >= mem[_12571]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13422]:
                            revert with 'NH{q', 50
                        mem[s + _13422 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12571')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19633 = mem[_12571]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6255 > _3528:
                    _20215 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20389 = mem[_13422]
                    mem[mem[64] + 36] = mem[_13422]
                    mem[mem[64] + 68 len ceil32(_20389)] = mem[_13422 + 32 len ceil32(_20389)]
                    var156001 = ceil32(_20389)
                    if ceil32(_20389) <= _20389:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20389) + 32]
                    mem[mem[64] + _20389 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20389) + _20215 + -mem[64] + 68
                mem[_13422 + 32 len _12764 + 2] = call.data[calldata.size len _12764 + 2]
                _14870 = mem[_8026]
                idx = 0
                s = 0
                while idx < _14870:
                    if idx >= mem[_8026]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13422]:
                        revert with 'NH{q', 50
                    mem[s + _13422 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14870 = mem[_8026]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14870 == -1:
                    revert with 'NH{q', 17
                if _14870 >= mem[_13422]:
                    revert with 'NH{q', 50
                mem[_14870 + _13422 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19634 = mem[_12571]
                idx = 0
                s = _14870 + 1
                while idx < _19634:
                    if idx >= mem[_12571]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13422]:
                        revert with 'NH{q', 50
                    mem[s + _13422 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12571')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12571')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19634 = mem[_12571]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _20216 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20390 = mem[_13422]
                mem[mem[64] + 36] = mem[_13422]
                mem[mem[64] + 68 len ceil32(_20390)] = mem[_13422 + 32 len ceil32(_20390)]
                var157001 = ceil32(_20390)
                if ceil32(_20390) <= _20390:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20390) + 32]
                mem[mem[64] + _20390 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20390) + _20216 + -mem[64] + 68
            s = 0
            idx = _3528 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15283 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3528 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15283]:
                        revert with 'NH{q', 50
                    mem[t + _15283 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20211 = mem[_15283]
                _20212 = mem[_8026]
                if mem[_8026] > !mem[_15283]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8026] + mem[_15283]):
                    revert with 'NH{q', 17
                if mem[_8026] + mem[_15283] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21141 = mem[64]
                mem[mem[64]] = mem[_8026] + mem[_15283] + 1
                mem[64] = mem[64] + floor32(_20212 + _20211 + 32) + 32
                if not _20212 + _20211 + 1:
                    _23347 = mem[_8026]
                    idx = 0
                    s = 0
                    while idx < _23347:
                        if idx >= mem[_8026]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21141]:
                            revert with 'NH{q', 50
                        mem[s + _21141 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23347 = mem[_8026]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23347 == -1:
                        revert with 'NH{q', 17
                    if _23347 >= mem[_21141]:
                        revert with 'NH{q', 50
                    mem[_23347 + _21141 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26611 = mem[_15283]
                    idx = 0
                    s = _23347 + 1
                    while idx < _26611:
                        if idx >= mem[_15283]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21141]:
                            revert with 'NH{q', 50
                        mem[s + _21141 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26611 = mem[_15283]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6255 > _3528:
                    _27083 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27235 = mem[_21141]
                    mem[mem[64] + 36] = mem[_21141]
                    mem[mem[64] + 68 len ceil32(_27235)] = mem[_21141 + 32 len ceil32(_27235)]
                    var164001 = ceil32(_27235)
                    if ceil32(_27235) <= _27235:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27235) + 32]
                    mem[mem[64] + _27235 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27235) + _27083 + -mem[64] + 68
                mem[_21141 + 32 len _20212 + _20211 + 1] = call.data[calldata.size len _20212 + _20211 + 1]
                _23348 = mem[_8026]
                idx = 0
                s = 0
                while idx < _23348:
                    if idx >= mem[_8026]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21141]:
                        revert with 'NH{q', 50
                    mem[s + _21141 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23348 = mem[_8026]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23348 == -1:
                    revert with 'NH{q', 17
                if _23348 >= mem[_21141]:
                    revert with 'NH{q', 50
                mem[_23348 + _21141 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26612 = mem[_15283]
                idx = 0
                s = _23348 + 1
                while idx < _26612:
                    if idx >= mem[_15283]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21141]:
                        revert with 'NH{q', 50
                    mem[s + _21141 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26612 = mem[_15283]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _27084 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27236 = mem[_21141]
                mem[mem[64] + 36] = mem[_21141]
                mem[mem[64] + 68 len ceil32(_27236)] = mem[_21141 + 32 len ceil32(_27236)]
                var165001 = ceil32(_27236)
                if ceil32(_27236) <= _27236:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27236) + 32]
                mem[mem[64] + _27236 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27236) + _27084 + -mem[64] + 68
            mem[_15283 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3528 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15283]:
                    revert with 'NH{q', 50
                mem[t + _15283 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20213 = mem[_15283]
            _20214 = mem[_8026]
            if mem[_8026] > !mem[_15283]:
                revert with 'NH{q', 17
            if 1 > !(mem[_8026] + mem[_15283]):
                revert with 'NH{q', 17
            if mem[_8026] + mem[_15283] + 1 > test266151307():
                revert with 'NH{q', 65
            _21143 = mem[64]
            mem[mem[64]] = mem[_8026] + mem[_15283] + 1
            mem[64] = mem[64] + floor32(_20214 + _20213 + 32) + 32
            if not _20214 + _20213 + 1:
                _23349 = mem[_8026]
                idx = 0
                s = 0
                while idx < _23349:
                    if idx >= mem[_8026]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21143]:
                        revert with 'NH{q', 50
                    mem[s + _21143 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23349 = mem[_8026]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23349 == -1:
                    revert with 'NH{q', 17
                if _23349 >= mem[_21143]:
                    revert with 'NH{q', 50
                mem[_23349 + _21143 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26613 = mem[_15283]
                idx = 0
                s = _23349 + 1
                while idx < _26613:
                    if idx >= mem[_15283]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21143]:
                        revert with 'NH{q', 50
                    mem[s + _21143 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26613 = mem[_15283]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _27085 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27237 = mem[_21143]
                mem[mem[64] + 36] = mem[_21143]
                mem[mem[64] + 68 len ceil32(_27237)] = mem[_21143 + 32 len ceil32(_27237)]
                var165001 = ceil32(_27237)
                if ceil32(_27237) <= _27237:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27237) + 32]
                mem[mem[64] + _27237 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27237) + _27085 + -mem[64] + 68
            mem[_21143 + 32 len _20214 + _20213 + 1] = call.data[calldata.size len _20214 + _20213 + 1]
            _23350 = mem[_8026]
            idx = 0
            s = 0
            while idx < _23350:
                if idx >= mem[_8026]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21143]:
                    revert with 'NH{q', 50
                mem[s + _21143 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23350 = mem[_8026]
                idx = idx + 1
                s = s + 1
                continue 
            if _23350 == -1:
                revert with 'NH{q', 17
            if _23350 >= mem[_21143]:
                revert with 'NH{q', 50
            mem[_23350 + _21143 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26614 = mem[_15283]
            idx = 0
            s = _23350 + 1
            while idx < _26614:
                if idx >= mem[_15283]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21143]:
                    revert with 'NH{q', 50
                mem[s + _21143 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15283')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26614 = mem[_15283]
                idx = idx + 1
                s = s + 1
                continue 
            if _6255 > _3528:
            _27086 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27238 = mem[_21143]
            mem[mem[64] + 36] = mem[_21143]
            mem[mem[64] + 68 len ceil32(_27238)] = mem[_21143 + 32 len ceil32(_27238)]
            var166001 = ceil32(_27238)
            if ceil32(_27238) <= _27238:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27238) + 32]
            mem[mem[64] + _27238 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27238) + _27086 + -mem[64] + 68
        mem[_8026 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6255 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_8026]:
                revert with 'NH{q', 50
            mem[t + _8026 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _11890 = mem[64]
        mem[64] = mem[64] + 64
        mem[_11890] = 26
        mem[_11890 + 32] = 'SafeMath: division by zero'
        if not _3528 / 10^18:
            _12572 = mem[64]
            mem[64] = mem[64] + 64
            mem[_12572] = 1
            mem[_12572 + 32] = '0'
            _12766 = mem[_8026]
            if mem[_8026] > !1:
                revert with 'NH{q', 17
            if 1 > !(mem[_8026] + 1):
                revert with 'NH{q', 17
            if mem[_8026] + 2 > test266151307():
                revert with 'NH{q', 65
            _13423 = mem[64]
            mem[mem[64]] = mem[_8026] + 2
            mem[64] = mem[64] + floor32(_12766 + 33) + 32
            if not _12766 + 2:
                _14871 = mem[_8026]
                idx = 0
                s = 0
                while idx < _14871:
                    if idx >= mem[_8026]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13423]:
                        revert with 'NH{q', 50
                    mem[s + _13423 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14871 = mem[_8026]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14871 == -1:
                    revert with 'NH{q', 17
                if _14871 >= mem[_13423]:
                    revert with 'NH{q', 50
                mem[_14871 + _13423 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19635 = mem[_12572]
                idx = 0
                s = _14871 + 1
                while idx < _19635:
                    if idx >= mem[_12572]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13423]:
                        revert with 'NH{q', 50
                    mem[s + _13423 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12572')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12572')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19635 = mem[_12572]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _20221 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20391 = mem[_13423]
                mem[mem[64] + 36] = mem[_13423]
                mem[mem[64] + 68 len ceil32(_20391)] = mem[_13423 + 32 len ceil32(_20391)]
                var157001 = ceil32(_20391)
                if ceil32(_20391) <= _20391:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20391) + 32]
                mem[mem[64] + _20391 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20391) + _20221 + -mem[64] + 68
            mem[_13423 + 32 len _12766 + 2] = call.data[calldata.size len _12766 + 2]
            _14872 = mem[_8026]
            idx = 0
            s = 0
            while idx < _14872:
                if idx >= mem[_8026]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_13423]:
                    revert with 'NH{q', 50
                mem[s + _13423 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _14872 = mem[_8026]
                idx = idx + 1
                s = s + 1
                continue 
            if _14872 == -1:
                revert with 'NH{q', 17
            if _14872 >= mem[_13423]:
                revert with 'NH{q', 50
            mem[_14872 + _13423 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _19636 = mem[_12572]
            idx = 0
            s = _14872 + 1
            while idx < _19636:
                if idx >= mem[_12572]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_13423]:
                    revert with 'NH{q', 50
                mem[s + _13423 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12572')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12572')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _19636 = mem[_12572]
                idx = idx + 1
                s = s + 1
                continue 
            if _6255 > _3528:
            _20222 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _20392 = mem[_13423]
            mem[mem[64] + 36] = mem[_13423]
            mem[mem[64] + 68 len ceil32(_20392)] = mem[_13423 + 32 len ceil32(_20392)]
            var158001 = ceil32(_20392)
            if ceil32(_20392) <= _20392:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20392) + 32]
            mem[mem[64] + _20392 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_20392) + _20222 + -mem[64] + 68
        s = 0
        idx = _3528 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _15286 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _3528 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15286]:
                    revert with 'NH{q', 50
                mem[t + _15286 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20217 = mem[_15286]
            _20218 = mem[_8026]
            if mem[_8026] > !mem[_15286]:
                revert with 'NH{q', 17
            if 1 > !(mem[_8026] + mem[_15286]):
                revert with 'NH{q', 17
            if mem[_8026] + mem[_15286] + 1 > test266151307():
                revert with 'NH{q', 65
            _21145 = mem[64]
            mem[mem[64]] = mem[_8026] + mem[_15286] + 1
            mem[64] = mem[64] + floor32(_20218 + _20217 + 32) + 32
            if not _20218 + _20217 + 1:
                _23351 = mem[_8026]
                idx = 0
                s = 0
                while idx < _23351:
                    if idx >= mem[_8026]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21145]:
                        revert with 'NH{q', 50
                    mem[s + _21145 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23351 = mem[_8026]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23351 == -1:
                    revert with 'NH{q', 17
                if _23351 >= mem[_21145]:
                    revert with 'NH{q', 50
                mem[_23351 + _21145 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26615 = mem[_15286]
                idx = 0
                s = _23351 + 1
                while idx < _26615:
                    if idx >= mem[_15286]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21145]:
                        revert with 'NH{q', 50
                    mem[s + _21145 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26615 = mem[_15286]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6255 > _3528:
                _27087 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27239 = mem[_21145]
                mem[mem[64] + 36] = mem[_21145]
                mem[mem[64] + 68 len ceil32(_27239)] = mem[_21145 + 32 len ceil32(_27239)]
                var165001 = ceil32(_27239)
                if ceil32(_27239) <= _27239:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27239) + 32]
                mem[mem[64] + _27239 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27239) + _27087 + -mem[64] + 68
            mem[_21145 + 32 len _20218 + _20217 + 1] = call.data[calldata.size len _20218 + _20217 + 1]
            _23352 = mem[_8026]
            idx = 0
            s = 0
            while idx < _23352:
                if idx >= mem[_8026]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21145]:
                    revert with 'NH{q', 50
                mem[s + _21145 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23352 = mem[_8026]
                idx = idx + 1
                s = s + 1
                continue 
            if _23352 == -1:
                revert with 'NH{q', 17
            if _23352 >= mem[_21145]:
                revert with 'NH{q', 50
            mem[_23352 + _21145 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26616 = mem[_15286]
            idx = 0
            s = _23352 + 1
            while idx < _26616:
                if idx >= mem[_15286]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21145]:
                    revert with 'NH{q', 50
                mem[s + _21145 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26616 = mem[_15286]
                idx = idx + 1
                s = s + 1
                continue 
            if _6255 > _3528:
            _27088 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27240 = mem[_21145]
            mem[mem[64] + 36] = mem[_21145]
            mem[mem[64] + 68 len ceil32(_27240)] = mem[_21145 + 32 len ceil32(_27240)]
            var166001 = ceil32(_27240)
            if ceil32(_27240) <= _27240:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27240) + 32]
            mem[mem[64] + _27240 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27240) + _27088 + -mem[64] + 68
        mem[_15286 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _3528 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15286]:
                revert with 'NH{q', 50
            mem[t + _15286 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20219 = mem[_15286]
        _20220 = mem[_8026]
        if mem[_8026] > !mem[_15286]:
            revert with 'NH{q', 17
        if 1 > !(mem[_8026] + mem[_15286]):
            revert with 'NH{q', 17
        if mem[_8026] + mem[_15286] + 1 > test266151307():
            revert with 'NH{q', 65
        _21147 = mem[64]
        mem[mem[64]] = mem[_8026] + mem[_15286] + 1
        mem[64] = mem[64] + floor32(_20220 + _20219 + 32) + 32
        if not _20220 + _20219 + 1:
            _23353 = mem[_8026]
            idx = 0
            s = 0
            while idx < _23353:
                if idx >= mem[_8026]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21147]:
                    revert with 'NH{q', 50
                mem[s + _21147 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23353 = mem[_8026]
                idx = idx + 1
                s = s + 1
                continue 
            if _23353 == -1:
                revert with 'NH{q', 17
            if _23353 >= mem[_21147]:
                revert with 'NH{q', 50
            mem[_23353 + _21147 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26617 = mem[_15286]
            idx = 0
            s = _23353 + 1
            while idx < _26617:
                if idx >= mem[_15286]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21147]:
                    revert with 'NH{q', 50
                mem[s + _21147 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26617 = mem[_15286]
                idx = idx + 1
                s = s + 1
                continue 
            if _6255 > _3528:
            _27089 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27241 = mem[_21147]
            mem[mem[64] + 36] = mem[_21147]
            mem[mem[64] + 68 len ceil32(_27241)] = mem[_21147 + 32 len ceil32(_27241)]
            var166001 = ceil32(_27241)
            if ceil32(_27241) <= _27241:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27241) + 32]
            mem[mem[64] + _27241 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27241) + _27089 + -mem[64] + 68
        mem[_21147 + 32 len _20220 + _20219 + 1] = call.data[calldata.size len _20220 + _20219 + 1]
        _23354 = mem[_8026]
        idx = 0
        s = 0
        while idx < _23354:
            if idx >= mem[_8026]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_21147]:
                revert with 'NH{q', 50
            mem[s + _21147 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8026')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _23354 = mem[_8026]
            idx = idx + 1
            s = s + 1
            continue 
        if _23354 == -1:
            revert with 'NH{q', 17
        if _23354 >= mem[_21147]:
            revert with 'NH{q', 50
        mem[_23354 + _21147 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _26618 = mem[_15286]
        idx = 0
        s = _23354 + 1
        while idx < _26618:
            if idx >= mem[_15286]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_21147]:
                revert with 'NH{q', 50
            mem[s + _21147 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15286')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _26618 = mem[_15286]
            idx = idx + 1
            s = s + 1
            continue 
        if _6255 > _3528:
        _27090 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _27242 = mem[_21147]
        mem[mem[64] + 36] = mem[_21147]
        mem[mem[64] + 68 len ceil32(_27242)] = mem[_21147 + 32 len ceil32(_27242)]
        var167001 = ceil32(_27242)
        if ceil32(_27242) <= _27242:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27242) + 32]
        mem[mem[64] + _27242 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_27242) + _27090 + -mem[64] + 68
    mem[0] = 10
    mem[_2772 + 32] = address(stor10.field_0)
    idx = _2772 + 32
    s = 0
    while _2772 + (32 * stor10.length) > idx:
        mem[idx + 32] = stor10[s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    _3456 = mem[64]
    mem[64] = mem[64] + (32 * stor11.length) + 32
    mem[_3456] = stor11.length
    if not stor11.length:
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3522 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3546 = mem[_3522]
        if 0 >= stor11.length:
            revert with 'NH{q', 50
        _3593 = mem[_3456 + 32]
        if 1 >= stor11.length:
            revert with 'NH{q', 50
        if 0 >= stor11.length:
            revert with 'NH{q', 50
        mem[_3456 + 32] = mem[_3456 + 76 len 20]
        if 1 >= stor11.length:
            revert with 'NH{q', 50
        mem[_3456 + 64] = address(_3593)
        _3642 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = arg1
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        mem[mem[64] + 164] = stor10.length
        idx = 0
        s = mem[64] + 196
        t = _2772 + 32
        while idx < stor10.length:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_3642 + 100] = this.address
        mem[_3642 + 132] = test266151307()
        require ext_code.size(sub_2354c7aeAddress)
        call sub_2354c7aeAddress.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3642 + (32 * stor10.length) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(tokenAddr)
        staticcall tokenAddr.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4584 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4656 = mem[_4584]
        _4680 = mem[64]
        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _4656
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _4704 = mem[_3456]
        mem[mem[64] + 164] = mem[_3456]
        idx = 0
        s = mem[64] + 196
        t = _3456 + 32
        while idx < _4704:
            mem[s] = mem[t + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_4680 + 100] = this.address
        mem[_4680 + 132] = test266151307()
        require ext_code.size(sub_16a84344Address)
        call sub_16a84344Address.mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _4680 + (32 * _4704) + -mem[64] + 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[mem[64] + 4] = this.address
        require ext_code.size(sub_13764611Address)
        staticcall sub_13764611Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6209 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6256 = mem[_6209]
        _6329 = mem[64]
        mem[64] = mem[64] + 64
        mem[_6329] = 26
        mem[_6329 + 32] = 'SafeMath: division by zero'
        if not _6256 / 10^18:
            _6599 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6599] = 1
            mem[_6599 + 32] = '0'
            _6683 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6683] = 26
            mem[_6683 + 32] = 'SafeMath: division by zero'
            if not _3546 / 10^18:
                _7020 = mem[64]
                mem[64] = mem[64] + 64
                mem[_7020] = 1
                mem[_7020 + 32] = '0'
                _7218 = mem[64]
                mem[mem[64]] = 3
                mem[64] = mem[64] + 64
                mem[_7218 + 32 len 3] = call.data[calldata.size len 3]
                idx = 0
                s = 0
                while idx < 1:
                    if idx >= mem[_6599]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_7218]:
                        revert with 'NH{q', 50
                    mem[s + _7218 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    idx = idx + 1
                    s = s + 1
                    continue 
                if 1 >= mem[_7218]:
                    revert with 'NH{q', 50
                mem[_7218 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _11556 = mem[_7020]
                idx = 0
                s = 2
                while idx < _11556:
                    if idx >= mem[_7020]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_7218]:
                        revert with 'NH{q', 50
                    mem[s + _7218 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7020')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_7020')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _11556 = mem[_7020]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _11986 = mem[_7218]
                mem[mem[64] + 36] = mem[_7218]
                mem[mem[64] + 68 len ceil32(_11986)] = mem[_7218 + 32 len ceil32(_11986)]
                var149001 = ceil32(_11986)
                if ceil32(_11986) > _11986:
                    mem[mem[64] + _11986 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_11986) + 32]
            s = 0
            idx = _3546 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _8031 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3546 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_8031]:
                        revert with 'NH{q', 50
                    mem[t + _8031 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _11899 = mem[_8031]
                _11900 = mem[_6599]
                if mem[_6599] > !mem[_8031]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_6599] + mem[_8031]):
                    revert with 'NH{q', 17
                if mem[_6599] + mem[_8031] + 1 > test266151307():
                    revert with 'NH{q', 65
                _12410 = mem[64]
                mem[mem[64]] = mem[_6599] + mem[_8031] + 1
                mem[64] = mem[64] + floor32(_11900 + _11899 + 32) + 32
                if not _11900 + _11899 + 1:
                    _14881 = mem[_6599]
                    idx = 0
                    s = 0
                    while idx < _14881:
                        if idx >= mem[_6599]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12410]:
                            revert with 'NH{q', 50
                        mem[s + _12410 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14881 = mem[_6599]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14881 == -1:
                        revert with 'NH{q', 17
                    if _14881 >= mem[_12410]:
                        revert with 'NH{q', 50
                    mem[_14881 + _12410 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19645 = mem[_8031]
                    idx = 0
                    s = _14881 + 1
                    while idx < _19645:
                        if idx >= mem[_8031]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_12410]:
                            revert with 'NH{q', 50
                        mem[s + _12410 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19645 = mem[_8031]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6256 > _3546:
                    _20239 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20401 = mem[_12410]
                    mem[mem[64] + 36] = mem[_12410]
                    mem[mem[64] + 68 len ceil32(_20401)] = mem[_12410 + 32 len ceil32(_20401)]
                    var156001 = ceil32(_20401)
                    if ceil32(_20401) <= _20401:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20401) + 32]
                    mem[mem[64] + _20401 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20401) + _20239 + -mem[64] + 68
                mem[_12410 + 32 len _11900 + _11899 + 1] = call.data[calldata.size len _11900 + _11899 + 1]
                _14882 = mem[_6599]
                idx = 0
                s = 0
                while idx < _14882:
                    if idx >= mem[_6599]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12410]:
                        revert with 'NH{q', 50
                    mem[s + _12410 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14882 = mem[_6599]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14882 == -1:
                    revert with 'NH{q', 17
                if _14882 >= mem[_12410]:
                    revert with 'NH{q', 50
                mem[_14882 + _12410 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19646 = mem[_8031]
                idx = 0
                s = _14882 + 1
                while idx < _19646:
                    if idx >= mem[_8031]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12410]:
                        revert with 'NH{q', 50
                    mem[s + _12410 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19646 = mem[_8031]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20402 = mem[_12410]
                mem[mem[64] + 36] = mem[_12410]
                mem[mem[64] + 68 len ceil32(_20402)] = mem[_12410 + 32 len ceil32(_20402)]
                var157001 = ceil32(_20402)
                if ceil32(_20402) > _20402:
                    mem[mem[64] + _20402 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20402) + 32]
            mem[_8031 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3546 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8031]:
                    revert with 'NH{q', 50
                mem[t + _8031 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11901 = mem[_8031]
            _11902 = mem[_6599]
            if mem[_6599] > !mem[_8031]:
                revert with 'NH{q', 17
            if 1 > !(mem[_6599] + mem[_8031]):
                revert with 'NH{q', 17
            if mem[_6599] + mem[_8031] + 1 > test266151307():
                revert with 'NH{q', 65
            _12412 = mem[64]
            mem[mem[64]] = mem[_6599] + mem[_8031] + 1
            mem[64] = mem[64] + floor32(_11902 + _11901 + 32) + 32
            if not _11902 + _11901 + 1:
                _14883 = mem[_6599]
                idx = 0
                s = 0
                while idx < _14883:
                    if idx >= mem[_6599]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12412]:
                        revert with 'NH{q', 50
                    mem[s + _12412 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14883 = mem[_6599]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14883 == -1:
                    revert with 'NH{q', 17
                if _14883 >= mem[_12412]:
                    revert with 'NH{q', 50
                mem[_14883 + _12412 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19647 = mem[_8031]
                idx = 0
                s = _14883 + 1
                while idx < _19647:
                    if idx >= mem[_8031]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_12412]:
                        revert with 'NH{q', 50
                    mem[s + _12412 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19647 = mem[_8031]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20403 = mem[_12412]
                mem[mem[64] + 36] = mem[_12412]
                mem[mem[64] + 68 len ceil32(_20403)] = mem[_12412 + 32 len ceil32(_20403)]
                var157001 = ceil32(_20403)
                if ceil32(_20403) > _20403:
                    mem[mem[64] + _20403 + 68] = 0
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20403) + 32]
            mem[_12412 + 32 len _11902 + _11901 + 1] = call.data[calldata.size len _11902 + _11901 + 1]
            _14884 = mem[_6599]
            idx = 0
            s = 0
            while idx < _14884:
                if idx >= mem[_6599]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_12412]:
                    revert with 'NH{q', 50
                mem[s + _12412 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_6599')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _14884 = mem[_6599]
                idx = idx + 1
                s = s + 1
                continue 
            if _14884 == -1:
                revert with 'NH{q', 17
            if _14884 >= mem[_12412]:
                revert with 'NH{q', 50
            mem[_14884 + _12412 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _19648 = mem[_8031]
            idx = 0
            s = _14884 + 1
            while idx < _19648:
                if idx >= mem[_8031]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_12412]:
                    revert with 'NH{q', 50
                mem[s + _12412 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8031')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _19648 = mem[_8031]
                idx = idx + 1
                s = s + 1
                continue 
            if _6256 > _3546:
            _20242 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _20404 = mem[_12412]
            mem[mem[64] + 36] = mem[_12412]
            mem[mem[64] + 68 len ceil32(_20404)] = mem[_12412 + 32 len ceil32(_20404)]
            var158001 = ceil32(_20404)
            if ceil32(_20404) <= _20404:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20404) + 32]
            mem[mem[64] + _20404 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_20404) + _20242 + -mem[64] + 68
        s = 0
        idx = _6256 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _8030 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6256 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_8030]:
                    revert with 'NH{q', 50
                mem[t + _8030 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _11897 = mem[64]
            mem[64] = mem[64] + 64
            mem[_11897] = 26
            mem[_11897 + 32] = 'SafeMath: division by zero'
            if not _3546 / 10^18:
                _12577 = mem[64]
                mem[64] = mem[64] + 64
                mem[_12577] = 1
                mem[_12577 + 32] = '0'
                _12770 = mem[_8030]
                if mem[_8030] > !1:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8030] + 1):
                    revert with 'NH{q', 17
                if mem[_8030] + 2 > test266151307():
                    revert with 'NH{q', 65
                _13428 = mem[64]
                mem[mem[64]] = mem[_8030] + 2
                mem[64] = mem[64] + floor32(_12770 + 33) + 32
                if not _12770 + 2:
                    _14877 = mem[_8030]
                    idx = 0
                    s = 0
                    while idx < _14877:
                        if idx >= mem[_8030]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13428]:
                            revert with 'NH{q', 50
                        mem[s + _13428 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _14877 = mem[_8030]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _14877 == -1:
                        revert with 'NH{q', 17
                    if _14877 >= mem[_13428]:
                        revert with 'NH{q', 50
                    mem[_14877 + _13428 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _19641 = mem[_12577]
                    idx = 0
                    s = _14877 + 1
                    while idx < _19641:
                        if idx >= mem[_12577]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_13428]:
                            revert with 'NH{q', 50
                        mem[s + _13428 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12577')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _19641 = mem[_12577]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6256 > _3546:
                    _20231 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _20397 = mem[_13428]
                    mem[mem[64] + 36] = mem[_13428]
                    mem[mem[64] + 68 len ceil32(_20397)] = mem[_13428 + 32 len ceil32(_20397)]
                    var156001 = ceil32(_20397)
                    if ceil32(_20397) <= _20397:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_20397) + 32]
                    mem[mem[64] + _20397 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_20397) + _20231 + -mem[64] + 68
                mem[_13428 + 32 len _12770 + 2] = call.data[calldata.size len _12770 + 2]
                _14878 = mem[_8030]
                idx = 0
                s = 0
                while idx < _14878:
                    if idx >= mem[_8030]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13428]:
                        revert with 'NH{q', 50
                    mem[s + _13428 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14878 = mem[_8030]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14878 == -1:
                    revert with 'NH{q', 17
                if _14878 >= mem[_13428]:
                    revert with 'NH{q', 50
                mem[_14878 + _13428 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19642 = mem[_12577]
                idx = 0
                s = _14878 + 1
                while idx < _19642:
                    if idx >= mem[_12577]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13428]:
                        revert with 'NH{q', 50
                    mem[s + _13428 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12577')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12577')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19642 = mem[_12577]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                _20232 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20398 = mem[_13428]
                mem[mem[64] + 36] = mem[_13428]
                mem[mem[64] + 68 len ceil32(_20398)] = mem[_13428 + 32 len ceil32(_20398)]
                var157001 = ceil32(_20398)
                if ceil32(_20398) <= _20398:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20398) + 32]
                mem[mem[64] + _20398 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20398) + _20232 + -mem[64] + 68
            s = 0
            idx = _3546 / 10^18
            while idx:
                if s == -1:
                    revert with 'NH{q', 17
                s = s + 1
                idx = idx / 10
                continue 
            if s > test266151307():
                revert with 'NH{q', 65
            _15293 = mem[64]
            mem[mem[64]] = s
            mem[64] = mem[64] + ceil32(s) + 32
            if not s:
                t = s
                idx = _3546 / 10^18
                while idx:
                    if 48 > !(idx % 10):
                        revert with 'NH{q', 17
                    if not t:
                        revert with 'NH{q', 17
                    if t - 1 >= mem[_15293]:
                        revert with 'NH{q', 50
                    mem[t + _15293 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                    t = t - 1
                    idx = idx / 10
                    continue 
                _20227 = mem[_15293]
                _20228 = mem[_8030]
                if mem[_8030] > !mem[_15293]:
                    revert with 'NH{q', 17
                if 1 > !(mem[_8030] + mem[_15293]):
                    revert with 'NH{q', 17
                if mem[_8030] + mem[_15293] + 1 > test266151307():
                    revert with 'NH{q', 65
                _21149 = mem[64]
                mem[mem[64]] = mem[_8030] + mem[_15293] + 1
                mem[64] = mem[64] + floor32(_20228 + _20227 + 32) + 32
                if not _20228 + _20227 + 1:
                    _23355 = mem[_8030]
                    idx = 0
                    s = 0
                    while idx < _23355:
                        if idx >= mem[_8030]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21149]:
                            revert with 'NH{q', 50
                        mem[s + _21149 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _23355 = mem[_8030]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _23355 == -1:
                        revert with 'NH{q', 17
                    if _23355 >= mem[_21149]:
                        revert with 'NH{q', 50
                    mem[_23355 + _21149 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                    _26619 = mem[_15293]
                    idx = 0
                    s = _23355 + 1
                    while idx < _26619:
                        if idx >= mem[_15293]:
                            revert with 'NH{q', 50
                        if s == -1:
                            revert with 'NH{q', 17
                        if s >= mem[_21149]:
                            revert with 'NH{q', 50
                        mem[s + _21149 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) - 256
                        if idx == -1:
                            revert with 'NH{q', 17
                        _26619 = mem[_15293]
                        idx = idx + 1
                        s = s + 1
                        continue 
                    if _6256 > _3546:
                    _27091 = mem[64]
                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 32
                    _27243 = mem[_21149]
                    mem[mem[64] + 36] = mem[_21149]
                    mem[mem[64] + 68 len ceil32(_27243)] = mem[_21149 + 32 len ceil32(_27243)]
                    var164001 = ceil32(_27243)
                    if ceil32(_27243) <= _27243:
                        revert with 0, 32, mem[mem[64] + 36 len ceil32(_27243) + 32]
                    mem[mem[64] + _27243 + 68] = 0
                    revert with memory
                      from mem[64]
                       len ceil32(_27243) + _27091 + -mem[64] + 68
                mem[_21149 + 32 len _20228 + _20227 + 1] = call.data[calldata.size len _20228 + _20227 + 1]
                _23356 = mem[_8030]
                idx = 0
                s = 0
                while idx < _23356:
                    if idx >= mem[_8030]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21149]:
                        revert with 'NH{q', 50
                    mem[s + _21149 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23356 = mem[_8030]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23356 == -1:
                    revert with 'NH{q', 17
                if _23356 >= mem[_21149]:
                    revert with 'NH{q', 50
                mem[_23356 + _21149 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26620 = mem[_15293]
                idx = 0
                s = _23356 + 1
                while idx < _26620:
                    if idx >= mem[_15293]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21149]:
                        revert with 'NH{q', 50
                    mem[s + _21149 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26620 = mem[_15293]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                _27092 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27244 = mem[_21149]
                mem[mem[64] + 36] = mem[_21149]
                mem[mem[64] + 68 len ceil32(_27244)] = mem[_21149 + 32 len ceil32(_27244)]
                var165001 = ceil32(_27244)
                if ceil32(_27244) <= _27244:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27244) + 32]
                mem[mem[64] + _27244 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27244) + _27092 + -mem[64] + 68
            mem[_15293 + 32 len s] = call.data[calldata.size len s]
            t = s
            idx = _3546 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15293]:
                    revert with 'NH{q', 50
                mem[t + _15293 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20229 = mem[_15293]
            _20230 = mem[_8030]
            if mem[_8030] > !mem[_15293]:
                revert with 'NH{q', 17
            if 1 > !(mem[_8030] + mem[_15293]):
                revert with 'NH{q', 17
            if mem[_8030] + mem[_15293] + 1 > test266151307():
                revert with 'NH{q', 65
            _21151 = mem[64]
            mem[mem[64]] = mem[_8030] + mem[_15293] + 1
            mem[64] = mem[64] + floor32(_20230 + _20229 + 32) + 32
            if not _20230 + _20229 + 1:
                _23357 = mem[_8030]
                idx = 0
                s = 0
                while idx < _23357:
                    if idx >= mem[_8030]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21151]:
                        revert with 'NH{q', 50
                    mem[s + _21151 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23357 = mem[_8030]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23357 == -1:
                    revert with 'NH{q', 17
                if _23357 >= mem[_21151]:
                    revert with 'NH{q', 50
                mem[_23357 + _21151 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26621 = mem[_15293]
                idx = 0
                s = _23357 + 1
                while idx < _26621:
                    if idx >= mem[_15293]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21151]:
                        revert with 'NH{q', 50
                    mem[s + _21151 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26621 = mem[_15293]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                _27093 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27245 = mem[_21151]
                mem[mem[64] + 36] = mem[_21151]
                mem[mem[64] + 68 len ceil32(_27245)] = mem[_21151 + 32 len ceil32(_27245)]
                var165001 = ceil32(_27245)
                if ceil32(_27245) <= _27245:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27245) + 32]
                mem[mem[64] + _27245 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27245) + _27093 + -mem[64] + 68
            mem[_21151 + 32 len _20230 + _20229 + 1] = call.data[calldata.size len _20230 + _20229 + 1]
            _23358 = mem[_8030]
            idx = 0
            s = 0
            while idx < _23358:
                if idx >= mem[_8030]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21151]:
                    revert with 'NH{q', 50
                mem[s + _21151 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23358 = mem[_8030]
                idx = idx + 1
                s = s + 1
                continue 
            if _23358 == -1:
                revert with 'NH{q', 17
            if _23358 >= mem[_21151]:
                revert with 'NH{q', 50
            mem[_23358 + _21151 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26622 = mem[_15293]
            idx = 0
            s = _23358 + 1
            while idx < _26622:
                if idx >= mem[_15293]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21151]:
                    revert with 'NH{q', 50
                mem[s + _21151 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15293')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26622 = mem[_15293]
                idx = idx + 1
                s = s + 1
                continue 
            if _6256 > _3546:
            _27094 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27246 = mem[_21151]
            mem[mem[64] + 36] = mem[_21151]
            mem[mem[64] + 68 len ceil32(_27246)] = mem[_21151 + 32 len ceil32(_27246)]
            var166001 = ceil32(_27246)
            if ceil32(_27246) <= _27246:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27246) + 32]
            mem[mem[64] + _27246 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27246) + _27094 + -mem[64] + 68
        mem[_8030 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6256 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_8030]:
                revert with 'NH{q', 50
            mem[t + _8030 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _11898 = mem[64]
        mem[64] = mem[64] + 64
        mem[_11898] = 26
        mem[_11898 + 32] = 'SafeMath: division by zero'
        if not _3546 / 10^18:
            _12578 = mem[64]
            mem[64] = mem[64] + 64
            mem[_12578] = 1
            mem[_12578 + 32] = '0'
            _12772 = mem[_8030]
            if mem[_8030] > !1:
                revert with 'NH{q', 17
            if 1 > !(mem[_8030] + 1):
                revert with 'NH{q', 17
            if mem[_8030] + 2 > test266151307():
                revert with 'NH{q', 65
            _13429 = mem[64]
            mem[mem[64]] = mem[_8030] + 2
            mem[64] = mem[64] + floor32(_12772 + 33) + 32
            if not _12772 + 2:
                _14879 = mem[_8030]
                idx = 0
                s = 0
                while idx < _14879:
                    if idx >= mem[_8030]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13429]:
                        revert with 'NH{q', 50
                    mem[s + _13429 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _14879 = mem[_8030]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _14879 == -1:
                    revert with 'NH{q', 17
                if _14879 >= mem[_13429]:
                    revert with 'NH{q', 50
                mem[_14879 + _13429 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _19643 = mem[_12578]
                idx = 0
                s = _14879 + 1
                while idx < _19643:
                    if idx >= mem[_12578]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_13429]:
                        revert with 'NH{q', 50
                    mem[s + _13429 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12578')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _19643 = mem[_12578]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                _20237 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _20399 = mem[_13429]
                mem[mem[64] + 36] = mem[_13429]
                mem[mem[64] + 68 len ceil32(_20399)] = mem[_13429 + 32 len ceil32(_20399)]
                var157001 = ceil32(_20399)
                if ceil32(_20399) <= _20399:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_20399) + 32]
                mem[mem[64] + _20399 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_20399) + _20237 + -mem[64] + 68
            mem[_13429 + 32 len _12772 + 2] = call.data[calldata.size len _12772 + 2]
            _14880 = mem[_8030]
            idx = 0
            s = 0
            while idx < _14880:
                if idx >= mem[_8030]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_13429]:
                    revert with 'NH{q', 50
                mem[s + _13429 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _14880 = mem[_8030]
                idx = idx + 1
                s = s + 1
                continue 
            if _14880 == -1:
                revert with 'NH{q', 17
            if _14880 >= mem[_13429]:
                revert with 'NH{q', 50
            mem[_14880 + _13429 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _19644 = mem[_12578]
            idx = 0
            s = _14880 + 1
            while idx < _19644:
                if idx >= mem[_12578]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_13429]:
                    revert with 'NH{q', 50
                mem[s + _13429 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12578')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_12578')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _19644 = mem[_12578]
                idx = idx + 1
                s = s + 1
                continue 
            if _6256 > _3546:
            _20238 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _20400 = mem[_13429]
            mem[mem[64] + 36] = mem[_13429]
            mem[mem[64] + 68 len ceil32(_20400)] = mem[_13429 + 32 len ceil32(_20400)]
            var158001 = ceil32(_20400)
            if ceil32(_20400) <= _20400:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20400) + 32]
            mem[mem[64] + _20400 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_20400) + _20238 + -mem[64] + 68
        s = 0
        idx = _3546 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _15296 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _3546 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15296]:
                    revert with 'NH{q', 50
                mem[t + _15296 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20233 = mem[_15296]
            _20234 = mem[_8030]
            if mem[_8030] > !mem[_15296]:
                revert with 'NH{q', 17
            if 1 > !(mem[_8030] + mem[_15296]):
                revert with 'NH{q', 17
            if mem[_8030] + mem[_15296] + 1 > test266151307():
                revert with 'NH{q', 65
            _21153 = mem[64]
            mem[mem[64]] = mem[_8030] + mem[_15296] + 1
            mem[64] = mem[64] + floor32(_20234 + _20233 + 32) + 32
            if not _20234 + _20233 + 1:
                _23359 = mem[_8030]
                idx = 0
                s = 0
                while idx < _23359:
                    if idx >= mem[_8030]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21153]:
                        revert with 'NH{q', 50
                    mem[s + _21153 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23359 = mem[_8030]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23359 == -1:
                    revert with 'NH{q', 17
                if _23359 >= mem[_21153]:
                    revert with 'NH{q', 50
                mem[_23359 + _21153 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26623 = mem[_15296]
                idx = 0
                s = _23359 + 1
                while idx < _26623:
                    if idx >= mem[_15296]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21153]:
                        revert with 'NH{q', 50
                    mem[s + _21153 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26623 = mem[_15296]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _6256 > _3546:
                _27095 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27247 = mem[_21153]
                mem[mem[64] + 36] = mem[_21153]
                mem[mem[64] + 68 len ceil32(_27247)] = mem[_21153 + 32 len ceil32(_27247)]
                var165001 = ceil32(_27247)
                if ceil32(_27247) <= _27247:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27247) + 32]
                mem[mem[64] + _27247 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27247) + _27095 + -mem[64] + 68
            mem[_21153 + 32 len _20234 + _20233 + 1] = call.data[calldata.size len _20234 + _20233 + 1]
            _23360 = mem[_8030]
            idx = 0
            s = 0
            while idx < _23360:
                if idx >= mem[_8030]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21153]:
                    revert with 'NH{q', 50
                mem[s + _21153 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23360 = mem[_8030]
                idx = idx + 1
                s = s + 1
                continue 
            if _23360 == -1:
                revert with 'NH{q', 17
            if _23360 >= mem[_21153]:
                revert with 'NH{q', 50
            mem[_23360 + _21153 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26624 = mem[_15296]
            idx = 0
            s = _23360 + 1
            while idx < _26624:
                if idx >= mem[_15296]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21153]:
                    revert with 'NH{q', 50
                mem[s + _21153 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26624 = mem[_15296]
                idx = idx + 1
                s = s + 1
                continue 
            if _6256 > _3546:
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27248 = mem[_21153]
            mem[mem[64] + 36] = mem[_21153]
            mem[mem[64] + 68 len ceil32(_27248)] = mem[_21153 + 32 len ceil32(_27248)]
            var166001 = ceil32(_27248)
            if ceil32(_27248) > _27248:
                mem[mem[64] + _27248 + 68] = 0
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27248) + 32]
        mem[_15296 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _3546 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15296]:
                revert with 'NH{q', 50
            mem[t + _15296 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20235 = mem[_15296]
        _20236 = mem[_8030]
        if mem[_8030] > !mem[_15296]:
            revert with 'NH{q', 17
        if 1 > !(mem[_8030] + mem[_15296]):
            revert with 'NH{q', 17
        if mem[_8030] + mem[_15296] + 1 > test266151307():
            revert with 'NH{q', 65
        _21155 = mem[64]
        mem[mem[64]] = mem[_8030] + mem[_15296] + 1
        mem[64] = mem[64] + floor32(_20236 + _20235 + 32) + 32
        if not _20236 + _20235 + 1:
            _23361 = mem[_8030]
            idx = 0
            s = 0
            while idx < _23361:
                if idx >= mem[_8030]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21155]:
                    revert with 'NH{q', 50
                mem[s + _21155 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23361 = mem[_8030]
                idx = idx + 1
                s = s + 1
                continue 
            if _23361 == -1:
                revert with 'NH{q', 17
            if _23361 >= mem[_21155]:
                revert with 'NH{q', 50
            mem[_23361 + _21155 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26625 = mem[_15296]
            idx = 0
            s = _23361 + 1
            while idx < _26625:
                if idx >= mem[_15296]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21155]:
                    revert with 'NH{q', 50
                mem[s + _21155 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26625 = mem[_15296]
                idx = idx + 1
                s = s + 1
                continue 
            if _6256 > _3546:
            _27097 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27249 = mem[_21155]
            mem[mem[64] + 36] = mem[_21155]
            mem[mem[64] + 68 len ceil32(_27249)] = mem[_21155 + 32 len ceil32(_27249)]
            var166001 = ceil32(_27249)
            if ceil32(_27249) <= _27249:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27249) + 32]
            mem[mem[64] + _27249 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27249) + _27097 + -mem[64] + 68
        mem[_21155 + 32 len _20236 + _20235 + 1] = call.data[calldata.size len _20236 + _20235 + 1]
        _23362 = mem[_8030]
        idx = 0
        s = 0
        while idx < _23362:
            if idx >= mem[_8030]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_21155]:
                revert with 'NH{q', 50
            mem[s + _21155 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_8030')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _23362 = mem[_8030]
            idx = idx + 1
            s = s + 1
            continue 
        if _23362 == -1:
            revert with 'NH{q', 17
        if _23362 >= mem[_21155]:
            revert with 'NH{q', 50
        mem[_23362 + _21155 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _26626 = mem[_15296]
        idx = 0
        s = _23362 + 1
        while idx < _26626:
            if idx >= mem[_15296]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_21155]:
                revert with 'NH{q', 50
            mem[s + _21155 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15296')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _26626 = mem[_15296]
            idx = idx + 1
            s = s + 1
            continue 
        if _6256 > _3546:
        _27098 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _27250 = mem[_21155]
        mem[mem[64] + 36] = mem[_21155]
        mem[mem[64] + 68 len ceil32(_27250)] = mem[_21155 + 32 len ceil32(_27250)]
        var167001 = ceil32(_27250)
        if ceil32(_27250) <= _27250:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27250) + 32]
        mem[mem[64] + _27250 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_27250) + _27098 + -mem[64] + 68
    mem[0] = 11
    mem[_3456 + 32] = address(stor11.field_0)
    idx = _3456 + 32
    s = 0
    while _3456 + (32 * stor11.length) > idx:
        mem[idx + 32] = stor11[s].field_256
        idx = idx + 32
        s = s + 1
        continue 
    mem[mem[64] + 4] = this.address
    require ext_code.size(sub_13764611Address)
    staticcall sub_13764611Address.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _6126 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _6180 = mem[_6126]
    if 0 >= stor11.length:
        revert with 'NH{q', 50
    _6221 = mem[_3456 + 32]
    if 1 >= stor11.length:
        revert with 'NH{q', 50
    if 0 >= stor11.length:
        revert with 'NH{q', 50
    mem[_3456 + 32] = mem[_3456 + 76 len 20]
    if 1 >= stor11.length:
        revert with 'NH{q', 50
    mem[_3456 + 64] = address(_6221)
    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = arg1
    mem[mem[64] + 36] = 0
    mem[mem[64] + 68] = 160
    _6336 = mem[_2772]
    mem[mem[64] + 164] = mem[_2772]
    idx = 0
    s = mem[64] + 196
    t = _2772 + 32
    while idx < _6336:
        mem[s] = mem[t + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 100] = this.address
    mem[mem[64] + 132] = test266151307()
    require ext_code.size(sub_2354c7aeAddress)
    call sub_2354c7aeAddress.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
         gas gas_remaining wei
        args arg1, 0, 160, address(this.address), test266151307(), mem[mem[64] + 164 len (32 * _6336) + 32]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[mem[64] + 4] = this.address
    require ext_code.size(tokenAddr)
    staticcall tokenAddr.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _8292 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _8562 = mem[_8292]
    _8640 = mem[64]
    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = _8562
    mem[mem[64] + 36] = 0
    mem[mem[64] + 68] = 160
    _8718 = mem[_3456]
    mem[mem[64] + 164] = mem[_3456]
    idx = 0
    s = mem[64] + 196
    t = _3456 + 32
    while idx < _8718:
        mem[s] = mem[t + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_8640 + 100] = this.address
    mem[_8640 + 132] = test266151307()
    require ext_code.size(sub_16a84344Address)
    call sub_16a84344Address.mem[mem[64] len 4] with:
         gas gas_remaining wei
        args mem[mem[64] + 4 len _8640 + (32 * _8718) + -mem[64] + 192]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[mem[64] + 4] = this.address
    require ext_code.size(sub_13764611Address)
    staticcall sub_13764611Address.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _12138 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _12216 = mem[_12138]
    _12414 = mem[64]
    mem[64] = mem[64] + 64
    mem[_12414] = 26
    mem[_12414 + 32] = 'SafeMath: division by zero'
    if not _12216 / 10^18:
        _13212 = mem[64]
        mem[64] = mem[64] + 64
        mem[_13212] = 1
        mem[_13212 + 32] = '0'
        _13434 = mem[64]
        mem[64] = mem[64] + 64
        mem[_13434] = 26
        mem[_13434 + 32] = 'SafeMath: division by zero'
        if not _6180 / 10^18:
            _14232 = mem[64]
            mem[64] = mem[64] + 64
            mem[_14232] = 1
            mem[_14232 + 32] = '0'
            _14562 = mem[64]
            mem[mem[64]] = 3
            mem[64] = mem[64] + 64
            mem[_14562 + 32 len 3] = call.data[calldata.size len 3]
            idx = 0
            s = 0
            while idx < 1:
                if idx >= mem[_13212]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_14562]:
                    revert with 'NH{q', 50
                mem[s + _14562 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                idx = idx + 1
                s = s + 1
                continue 
            if 1 >= mem[_14562]:
                revert with 'NH{q', 50
            mem[_14562 + 33 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _19650 = mem[_14232]
            idx = 0
            s = 2
            while idx < _19650:
                if idx >= mem[_14232]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_14562]:
                    revert with 'NH{q', 50
                mem[s + _14562 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14232')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_14232')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _19650 = mem[_14232]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _20250 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _20406 = mem[_14562]
            mem[mem[64] + 36] = mem[_14562]
            mem[mem[64] + 68 len ceil32(_20406)] = mem[_14562 + 32 len ceil32(_20406)]
            var153001 = ceil32(_20406)
            if ceil32(_20406) <= _20406:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_20406) + 32]
            mem[mem[64] + _20406 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_20406) + _20250 + -mem[64] + 68
        s = 0
        idx = _6180 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _15304 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6180 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_15304]:
                    revert with 'NH{q', 50
                mem[t + _15304 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _20245 = mem[_15304]
            _20246 = mem[_13212]
            if mem[_13212] > !mem[_15304]:
                revert with 'NH{q', 17
            if 1 > !(mem[_13212] + mem[_15304]):
                revert with 'NH{q', 17
            if mem[_13212] + mem[_15304] + 1 > test266151307():
                revert with 'NH{q', 65
            _21159 = mem[64]
            mem[mem[64]] = mem[_13212] + mem[_15304] + 1
            mem[64] = mem[64] + floor32(_20246 + _20245 + 32) + 32
            if not _20246 + _20245 + 1:
                _23367 = mem[_13212]
                idx = 0
                s = 0
                while idx < _23367:
                    if idx >= mem[_13212]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21159]:
                        revert with 'NH{q', 50
                    mem[s + _21159 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23367 = mem[_13212]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23367 == -1:
                    revert with 'NH{q', 17
                if _23367 >= mem[_21159]:
                    revert with 'NH{q', 50
                mem[_23367 + _21159 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26631 = mem[_15304]
                idx = 0
                s = _23367 + 1
                while idx < _26631:
                    if idx >= mem[_15304]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_21159]:
                        revert with 'NH{q', 50
                    mem[s + _21159 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26631 = mem[_15304]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12216 > _6180:
                _27111 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27255 = mem[_21159]
                mem[mem[64] + 36] = mem[_21159]
                mem[mem[64] + 68 len ceil32(_27255)] = mem[_21159 + 32 len ceil32(_27255)]
                var160001 = ceil32(_27255)
                if ceil32(_27255) <= _27255:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27255) + 32]
                mem[mem[64] + _27255 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27255) + _27111 + -mem[64] + 68
            mem[_21159 + 32 len _20246 + _20245 + 1] = call.data[calldata.size len _20246 + _20245 + 1]
            _23368 = mem[_13212]
            idx = 0
            s = 0
            while idx < _23368:
                if idx >= mem[_13212]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21159]:
                    revert with 'NH{q', 50
                mem[s + _21159 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23368 = mem[_13212]
                idx = idx + 1
                s = s + 1
                continue 
            if _23368 == -1:
                revert with 'NH{q', 17
            if _23368 >= mem[_21159]:
                revert with 'NH{q', 50
            mem[_23368 + _21159 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26632 = mem[_15304]
            idx = 0
            s = _23368 + 1
            while idx < _26632:
                if idx >= mem[_15304]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21159]:
                    revert with 'NH{q', 50
                mem[s + _21159 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26632 = mem[_15304]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _27112 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27256 = mem[_21159]
            mem[mem[64] + 36] = mem[_21159]
            mem[mem[64] + 68 len ceil32(_27256)] = mem[_21159 + 32 len ceil32(_27256)]
            var161001 = ceil32(_27256)
            if ceil32(_27256) <= _27256:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27256) + 32]
            mem[mem[64] + _27256 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27256) + _27112 + -mem[64] + 68
        mem[_15304 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6180 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15304]:
                revert with 'NH{q', 50
            mem[t + _15304 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20247 = mem[_15304]
        _20248 = mem[_13212]
        if mem[_13212] > !mem[_15304]:
            revert with 'NH{q', 17
        if 1 > !(mem[_13212] + mem[_15304]):
            revert with 'NH{q', 17
        if mem[_13212] + mem[_15304] + 1 > test266151307():
            revert with 'NH{q', 65
        _21161 = mem[64]
        mem[mem[64]] = mem[_13212] + mem[_15304] + 1
        mem[64] = mem[64] + floor32(_20248 + _20247 + 32) + 32
        if not _20248 + _20247 + 1:
            _23369 = mem[_13212]
            idx = 0
            s = 0
            while idx < _23369:
                if idx >= mem[_13212]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21161]:
                    revert with 'NH{q', 50
                mem[s + _21161 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23369 = mem[_13212]
                idx = idx + 1
                s = s + 1
                continue 
            if _23369 == -1:
                revert with 'NH{q', 17
            if _23369 >= mem[_21161]:
                revert with 'NH{q', 50
            mem[_23369 + _21161 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26633 = mem[_15304]
            idx = 0
            s = _23369 + 1
            while idx < _26633:
                if idx >= mem[_15304]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_21161]:
                    revert with 'NH{q', 50
                mem[s + _21161 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26633 = mem[_15304]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _27113 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27257 = mem[_21161]
            mem[mem[64] + 36] = mem[_21161]
            mem[mem[64] + 68 len ceil32(_27257)] = mem[_21161 + 32 len ceil32(_27257)]
            var161001 = ceil32(_27257)
            if ceil32(_27257) <= _27257:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27257) + 32]
            mem[mem[64] + _27257 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27257) + _27113 + -mem[64] + 68
        mem[_21161 + 32 len _20248 + _20247 + 1] = call.data[calldata.size len _20248 + _20247 + 1]
        _23370 = mem[_13212]
        idx = 0
        s = 0
        while idx < _23370:
            if idx >= mem[_13212]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_21161]:
                revert with 'NH{q', 50
            mem[s + _21161 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_13212')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _23370 = mem[_13212]
            idx = idx + 1
            s = s + 1
            continue 
        if _23370 == -1:
            revert with 'NH{q', 17
        if _23370 >= mem[_21161]:
            revert with 'NH{q', 50
        mem[_23370 + _21161 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _26634 = mem[_15304]
        idx = 0
        s = _23370 + 1
        while idx < _26634:
            if idx >= mem[_15304]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_21161]:
                revert with 'NH{q', 50
            mem[s + _21161 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15304')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _26634 = mem[_15304]
            idx = idx + 1
            s = s + 1
            continue 
        if _12216 > _6180:
        _27114 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _27258 = mem[_21161]
        mem[mem[64] + 36] = mem[_21161]
        mem[mem[64] + 68 len ceil32(_27258)] = mem[_21161 + 32 len ceil32(_27258)]
        var162001 = ceil32(_27258)
        if ceil32(_27258) <= _27258:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27258) + 32]
        mem[mem[64] + _27258 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_27258) + _27114 + -mem[64] + 68
    s = 0
    idx = _12216 / 10^18
    while idx:
        if s == -1:
            revert with 'NH{q', 17
        s = s + 1
        idx = idx / 10
        continue 
    if s > test266151307():
        revert with 'NH{q', 65
    _15303 = mem[64]
    mem[mem[64]] = s
    mem[64] = mem[64] + ceil32(s) + 32
    if not s:
        t = s
        idx = _12216 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_15303]:
                revert with 'NH{q', 50
            mem[t + _15303 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _20243 = mem[64]
        mem[64] = mem[64] + 64
        mem[_20243] = 26
        mem[_20243 + 32] = 'SafeMath: division by zero'
        if not _6180 / 10^18:
            _21349 = mem[64]
            mem[64] = mem[64] + 64
            mem[_21349] = 1
            mem[_21349 + 32] = '0'
            _21554 = mem[_15303]
            if mem[_15303] > !1:
                revert with 'NH{q', 17
            if 1 > !(mem[_15303] + 1):
                revert with 'NH{q', 17
            if mem[_15303] + 2 > test266151307():
                revert with 'NH{q', 65
            _22345 = mem[64]
            mem[mem[64]] = mem[_15303] + 2
            mem[64] = mem[64] + floor32(_21554 + 33) + 32
            if not _21554 + 2:
                _23363 = mem[_15303]
                idx = 0
                s = 0
                while idx < _23363:
                    if idx >= mem[_15303]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22345]:
                        revert with 'NH{q', 50
                    mem[s + _22345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _23363 = mem[_15303]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _23363 == -1:
                    revert with 'NH{q', 17
                if _23363 >= mem[_22345]:
                    revert with 'NH{q', 50
                mem[_23363 + _22345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _26627 = mem[_21349]
                idx = 0
                s = _23363 + 1
                while idx < _26627:
                    if idx >= mem[_21349]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_22345]:
                        revert with 'NH{q', 50
                    mem[s + _22345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21349')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21349')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _26627 = mem[_21349]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12216 > _6180:
                _27103 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _27251 = mem[_22345]
                mem[mem[64] + 36] = mem[_22345]
                mem[mem[64] + 68 len ceil32(_27251)] = mem[_22345 + 32 len ceil32(_27251)]
                var160001 = ceil32(_27251)
                if ceil32(_27251) <= _27251:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_27251) + 32]
                mem[mem[64] + _27251 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_27251) + _27103 + -mem[64] + 68
            mem[_22345 + 32 len _21554 + 2] = call.data[calldata.size len _21554 + 2]
            _23364 = mem[_15303]
            idx = 0
            s = 0
            while idx < _23364:
                if idx >= mem[_15303]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22345]:
                    revert with 'NH{q', 50
                mem[s + _22345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23364 = mem[_15303]
                idx = idx + 1
                s = s + 1
                continue 
            if _23364 == -1:
                revert with 'NH{q', 17
            if _23364 >= mem[_22345]:
                revert with 'NH{q', 50
            mem[_23364 + _22345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26628 = mem[_21349]
            idx = 0
            s = _23364 + 1
            while idx < _26628:
                if idx >= mem[_21349]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22345]:
                    revert with 'NH{q', 50
                mem[s + _22345 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21349')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21349')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26628 = mem[_21349]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _27104 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27252 = mem[_22345]
            mem[mem[64] + 36] = mem[_22345]
            mem[mem[64] + 68 len ceil32(_27252)] = mem[_22345 + 32 len ceil32(_27252)]
            var161001 = ceil32(_27252)
            if ceil32(_27252) <= _27252:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27252) + 32]
            mem[mem[64] + _27252 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27252) + _27104 + -mem[64] + 68
        s = 0
        idx = _6180 / 10^18
        while idx:
            if s == -1:
                revert with 'NH{q', 17
            s = s + 1
            idx = idx / 10
            continue 
        if s > test266151307():
            revert with 'NH{q', 65
        _23817 = mem[64]
        mem[mem[64]] = s
        mem[64] = mem[64] + ceil32(s) + 32
        if not s:
            t = s
            idx = _6180 / 10^18
            while idx:
                if 48 > !(idx % 10):
                    revert with 'NH{q', 17
                if not t:
                    revert with 'NH{q', 17
                if t - 1 >= mem[_23817]:
                    revert with 'NH{q', 50
                mem[t + _23817 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
                t = t - 1
                idx = idx / 10
                continue 
            _27099 = mem[_23817]
            _27100 = mem[_15303]
            if mem[_15303] > !mem[_23817]:
                revert with 'NH{q', 17
            if 1 > !(mem[_15303] + mem[_23817]):
                revert with 'NH{q', 17
            if mem[_15303] + mem[_23817] + 1 > test266151307():
                revert with 'NH{q', 65
            _27875 = mem[64]
            mem[mem[64]] = mem[_15303] + mem[_23817] + 1
            mem[64] = mem[64] + floor32(_27100 + _27099 + 32) + 32
            if not _27100 + _27099 + 1:
                _28595 = mem[_15303]
                idx = 0
                s = 0
                while idx < _28595:
                    if idx >= mem[_15303]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27875]:
                        revert with 'NH{q', 50
                    mem[s + _27875 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _28595 = mem[_15303]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _28595 == -1:
                    revert with 'NH{q', 17
                if _28595 >= mem[_27875]:
                    revert with 'NH{q', 50
                mem[_28595 + _27875 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
                _29699 = mem[_23817]
                idx = 0
                s = _28595 + 1
                while idx < _29699:
                    if idx >= mem[_23817]:
                        revert with 'NH{q', 50
                    if s == -1:
                        revert with 'NH{q', 17
                    if s >= mem[_27875]:
                        revert with 'NH{q', 50
                    mem[s + _27875 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) - 256
                    if idx == -1:
                        revert with 'NH{q', 17
                    _29699 = mem[_23817]
                    idx = idx + 1
                    s = s + 1
                    continue 
                if _12216 > _6180:
                _29843 = mem[64]
                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 32
                _29891 = mem[_27875]
                mem[mem[64] + 36] = mem[_27875]
                mem[mem[64] + 68 len ceil32(_29891)] = mem[_27875 + 32 len ceil32(_29891)]
                var168001 = ceil32(_29891)
                if ceil32(_29891) <= _29891:
                    revert with 0, 32, mem[mem[64] + 36 len ceil32(_29891) + 32]
                mem[mem[64] + _29891 + 68] = 0
                revert with memory
                  from mem[64]
                   len ceil32(_29891) + _29843 + -mem[64] + 68
            mem[_27875 + 32 len _27100 + _27099 + 1] = call.data[calldata.size len _27100 + _27099 + 1]
            _28596 = mem[_15303]
            idx = 0
            s = 0
            while idx < _28596:
                if idx >= mem[_15303]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27875]:
                    revert with 'NH{q', 50
                mem[s + _27875 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28596 = mem[_15303]
                idx = idx + 1
                s = s + 1
                continue 
            if _28596 == -1:
                revert with 'NH{q', 17
            if _28596 >= mem[_27875]:
                revert with 'NH{q', 50
            mem[_28596 + _27875 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29700 = mem[_23817]
            idx = 0
            s = _28596 + 1
            while idx < _29700:
                if idx >= mem[_23817]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27875]:
                    revert with 'NH{q', 50
                mem[s + _27875 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29700 = mem[_23817]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _29844 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29892 = mem[_27875]
            mem[mem[64] + 36] = mem[_27875]
            mem[mem[64] + 68 len ceil32(_29892)] = mem[_27875 + 32 len ceil32(_29892)]
            var169001 = ceil32(_29892)
            if ceil32(_29892) <= _29892:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29892) + 32]
            mem[mem[64] + _29892 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29892) + _29844 + -mem[64] + 68
        mem[_23817 + 32 len s] = call.data[calldata.size len s]
        t = s
        idx = _6180 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_23817]:
                revert with 'NH{q', 50
            mem[t + _23817 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _27101 = mem[_23817]
        _27102 = mem[_15303]
        if mem[_15303] > !mem[_23817]:
            revert with 'NH{q', 17
        if 1 > !(mem[_15303] + mem[_23817]):
            revert with 'NH{q', 17
        if mem[_15303] + mem[_23817] + 1 > test266151307():
            revert with 'NH{q', 65
        _27877 = mem[64]
        mem[mem[64]] = mem[_15303] + mem[_23817] + 1
        mem[64] = mem[64] + floor32(_27102 + _27101 + 32) + 32
        if not _27102 + _27101 + 1:
            _28597 = mem[_15303]
            idx = 0
            s = 0
            while idx < _28597:
                if idx >= mem[_15303]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27877]:
                    revert with 'NH{q', 50
                mem[s + _27877 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28597 = mem[_15303]
                idx = idx + 1
                s = s + 1
                continue 
            if _28597 == -1:
                revert with 'NH{q', 17
            if _28597 >= mem[_27877]:
                revert with 'NH{q', 50
            mem[_28597 + _27877 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29701 = mem[_23817]
            idx = 0
            s = _28597 + 1
            while idx < _29701:
                if idx >= mem[_23817]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27877]:
                    revert with 'NH{q', 50
                mem[s + _27877 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29701 = mem[_23817]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _29845 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29893 = mem[_27877]
            mem[mem[64] + 36] = mem[_27877]
            mem[mem[64] + 68 len ceil32(_29893)] = mem[_27877 + 32 len ceil32(_29893)]
            var169001 = ceil32(_29893)
            if ceil32(_29893) <= _29893:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_29893) + 32]
            mem[mem[64] + _29893 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_29893) + _29845 + -mem[64] + 68
        mem[_27877 + 32 len _27102 + _27101 + 1] = call.data[calldata.size len _27102 + _27101 + 1]
        _28598 = mem[_15303]
        idx = 0
        s = 0
        while idx < _28598:
            if idx >= mem[_15303]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27877]:
                revert with 'NH{q', 50
            mem[s + _27877 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _28598 = mem[_15303]
            idx = idx + 1
            s = s + 1
            continue 
        if _28598 == -1:
            revert with 'NH{q', 17
        if _28598 >= mem[_27877]:
            revert with 'NH{q', 50
        mem[_28598 + _27877 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _29702 = mem[_23817]
        idx = 0
        s = _28598 + 1
        while idx < _29702:
            if idx >= mem[_23817]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27877]:
                revert with 'NH{q', 50
            mem[s + _27877 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23817')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _29702 = mem[_23817]
            idx = idx + 1
            s = s + 1
            continue 
        if _12216 > _6180:
        _29846 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _29894 = mem[_27877]
        mem[mem[64] + 36] = mem[_27877]
        mem[mem[64] + 68 len ceil32(_29894)] = mem[_27877 + 32 len ceil32(_29894)]
        var170001 = ceil32(_29894)
        if ceil32(_29894) <= _29894:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29894) + 32]
        mem[mem[64] + _29894 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_29894) + _29846 + -mem[64] + 68
    mem[_15303 + 32 len s] = call.data[calldata.size len s]
    t = s
    idx = _12216 / 10^18
    while idx:
        if 48 > !(idx % 10):
            revert with 'NH{q', 17
        if not t:
            revert with 'NH{q', 17
        if t - 1 >= mem[_15303]:
            revert with 'NH{q', 50
        mem[t + _15303 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
        t = t - 1
        idx = idx / 10
        continue 
    _20244 = mem[64]
    mem[64] = mem[64] + 64
    mem[_20244] = 26
    mem[_20244 + 32] = 'SafeMath: division by zero'
    if not _6180 / 10^18:
        _21350 = mem[64]
        mem[64] = mem[64] + 64
        mem[_21350] = 1
        mem[_21350 + 32] = '0'
        _21556 = mem[_15303]
        if mem[_15303] > !1:
            revert with 'NH{q', 17
        if 1 > !(mem[_15303] + 1):
            revert with 'NH{q', 17
        if mem[_15303] + 2 > test266151307():
            revert with 'NH{q', 65
        _22346 = mem[64]
        mem[mem[64]] = mem[_15303] + 2
        mem[64] = mem[64] + floor32(_21556 + 33) + 32
        if not _21556 + 2:
            _23365 = mem[_15303]
            idx = 0
            s = 0
            while idx < _23365:
                if idx >= mem[_15303]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22346]:
                    revert with 'NH{q', 50
                mem[s + _22346 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _23365 = mem[_15303]
                idx = idx + 1
                s = s + 1
                continue 
            if _23365 == -1:
                revert with 'NH{q', 17
            if _23365 >= mem[_22346]:
                revert with 'NH{q', 50
            mem[_23365 + _22346 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _26629 = mem[_21350]
            idx = 0
            s = _23365 + 1
            while idx < _26629:
                if idx >= mem[_21350]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_22346]:
                    revert with 'NH{q', 50
                mem[s + _22346 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21350')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21350')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _26629 = mem[_21350]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            _27109 = mem[64]
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _27253 = mem[_22346]
            mem[mem[64] + 36] = mem[_22346]
            mem[mem[64] + 68 len ceil32(_27253)] = mem[_22346 + 32 len ceil32(_27253)]
            var161001 = ceil32(_27253)
            if ceil32(_27253) <= _27253:
                revert with 0, 32, mem[mem[64] + 36 len ceil32(_27253) + 32]
            mem[mem[64] + _27253 + 68] = 0
            revert with memory
              from mem[64]
               len ceil32(_27253) + _27109 + -mem[64] + 68
        mem[_22346 + 32 len _21556 + 2] = call.data[calldata.size len _21556 + 2]
        _23366 = mem[_15303]
        idx = 0
        s = 0
        while idx < _23366:
            if idx >= mem[_15303]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_22346]:
                revert with 'NH{q', 50
            mem[s + _22346 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _23366 = mem[_15303]
            idx = idx + 1
            s = s + 1
            continue 
        if _23366 == -1:
            revert with 'NH{q', 17
        if _23366 >= mem[_22346]:
            revert with 'NH{q', 50
        mem[_23366 + _22346 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _26630 = mem[_21350]
        idx = 0
        s = _23366 + 1
        while idx < _26630:
            if idx >= mem[_21350]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_22346]:
                revert with 'NH{q', 50
            mem[s + _22346 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21350')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_21350')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _26630 = mem[_21350]
            idx = idx + 1
            s = s + 1
            continue 
        if _12216 > _6180:
        _27110 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _27254 = mem[_22346]
        mem[mem[64] + 36] = mem[_22346]
        mem[mem[64] + 68 len ceil32(_27254)] = mem[_22346 + 32 len ceil32(_27254)]
        var162001 = ceil32(_27254)
        if ceil32(_27254) <= _27254:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_27254) + 32]
        mem[mem[64] + _27254 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_27254) + _27110 + -mem[64] + 68
    s = 0
    idx = _6180 / 10^18
    while idx:
        if s == -1:
            revert with 'NH{q', 17
        s = s + 1
        idx = idx / 10
        continue 
    if s > test266151307():
        revert with 'NH{q', 65
    _23820 = mem[64]
    mem[mem[64]] = s
    mem[64] = mem[64] + ceil32(s) + 32
    if not s:
        t = s
        idx = _6180 / 10^18
        while idx:
            if 48 > !(idx % 10):
                revert with 'NH{q', 17
            if not t:
                revert with 'NH{q', 17
            if t - 1 >= mem[_23820]:
                revert with 'NH{q', 50
            mem[t + _23820 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
            t = t - 1
            idx = idx / 10
            continue 
        _27105 = mem[_23820]
        _27106 = mem[_15303]
        if mem[_15303] > !mem[_23820]:
            revert with 'NH{q', 17
        if 1 > !(mem[_15303] + mem[_23820]):
            revert with 'NH{q', 17
        if mem[_15303] + mem[_23820] + 1 > test266151307():
            revert with 'NH{q', 65
        _27879 = mem[64]
        mem[mem[64]] = mem[_15303] + mem[_23820] + 1
        mem[64] = mem[64] + floor32(_27106 + _27105 + 32) + 32
        if not _27106 + _27105 + 1:
            _28599 = mem[_15303]
            idx = 0
            s = 0
            while idx < _28599:
                if idx >= mem[_15303]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27879]:
                    revert with 'NH{q', 50
                mem[s + _27879 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _28599 = mem[_15303]
                idx = idx + 1
                s = s + 1
                continue 
            if _28599 == -1:
                revert with 'NH{q', 17
            if _28599 >= mem[_27879]:
                revert with 'NH{q', 50
            mem[_28599 + _27879 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
            _29703 = mem[_23820]
            idx = 0
            s = _28599 + 1
            while idx < _29703:
                if idx >= mem[_23820]:
                    revert with 'NH{q', 50
                if s == -1:
                    revert with 'NH{q', 17
                if s >= mem[_27879]:
                    revert with 'NH{q', 50
                mem[s + _27879 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) - 256
                if idx == -1:
                    revert with 'NH{q', 17
                _29703 = mem[_23820]
                idx = idx + 1
                s = s + 1
                continue 
            if _12216 > _6180:
            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _29895 = mem[_27879]
            mem[mem[64] + 36] = mem[_27879]
            mem[mem[64] + 68 len ceil32(_29895)] = mem[_27879 + 32 len ceil32(_29895)]
            var169001 = ceil32(_29895)
            if ceil32(_29895) > _29895:
                mem[mem[64] + _29895 + 68] = 0
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29895) + 32]
        mem[_27879 + 32 len _27106 + _27105 + 1] = call.data[calldata.size len _27106 + _27105 + 1]
        _28600 = mem[_15303]
        idx = 0
        s = 0
        while idx < _28600:
            if idx >= mem[_15303]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27879]:
                revert with 'NH{q', 50
            mem[s + _27879 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _28600 = mem[_15303]
            idx = idx + 1
            s = s + 1
            continue 
        if _28600 == -1:
            revert with 'NH{q', 17
        if _28600 >= mem[_27879]:
            revert with 'NH{q', 50
        mem[_28600 + _27879 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _29704 = mem[_23820]
        idx = 0
        s = _28600 + 1
        while idx < _29704:
            if idx >= mem[_23820]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27879]:
                revert with 'NH{q', 50
            mem[s + _27879 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _29704 = mem[_23820]
            idx = idx + 1
            s = s + 1
            continue 
        if _12216 > _6180:
        _29848 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _29896 = mem[_27879]
        mem[mem[64] + 36] = mem[_27879]
        mem[mem[64] + 68 len ceil32(_29896)] = mem[_27879 + 32 len ceil32(_29896)]
        var170001 = ceil32(_29896)
        if ceil32(_29896) <= _29896:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29896) + 32]
        mem[mem[64] + _29896 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_29896) + _29848 + -mem[64] + 68
    mem[_23820 + 32 len s] = call.data[calldata.size len s]
    t = s
    idx = _6180 / 10^18
    while idx:
        if 48 > !(idx % 10):
            revert with 'NH{q', 17
        if not t:
            revert with 'NH{q', 17
        if t - 1 >= mem[_23820]:
            revert with 'NH{q', 50
        mem[t + _23820 + 31 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 0), 10))), 0) - 256
        t = t - 1
        idx = idx / 10
        continue 
    _27107 = mem[_23820]
    _27108 = mem[_15303]
    if mem[_15303] > !mem[_23820]:
        revert with 'NH{q', 17
    if 1 > !(mem[_15303] + mem[_23820]):
        revert with 'NH{q', 17
    if mem[_15303] + mem[_23820] + 1 > test266151307():
        revert with 'NH{q', 65
    _27881 = mem[64]
    mem[mem[64]] = mem[_15303] + mem[_23820] + 1
    mem[64] = mem[64] + floor32(_27108 + _27107 + 32) + 32
    if not _27108 + _27107 + 1:
        _28601 = mem[_15303]
        idx = 0
        s = 0
        while idx < _28601:
            if idx >= mem[_15303]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27881]:
                revert with 'NH{q', 50
            mem[s + _27881 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _28601 = mem[_15303]
            idx = idx + 1
            s = s + 1
            continue 
        if _28601 == -1:
            revert with 'NH{q', 17
        if _28601 >= mem[_27881]:
            revert with 'NH{q', 50
        mem[_28601 + _27881 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
        _29705 = mem[_23820]
        idx = 0
        s = _28601 + 1
        while idx < _29705:
            if idx >= mem[_23820]:
                revert with 'NH{q', 50
            if s == -1:
                revert with 'NH{q', 17
            if s >= mem[_27881]:
                revert with 'NH{q', 50
            mem[s + _27881 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) - 256
            if idx == -1:
                revert with 'NH{q', 17
            _29705 = mem[_23820]
            idx = idx + 1
            s = s + 1
            continue 
        if _12216 > _6180:
        _29849 = mem[64]
        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 32
        _29897 = mem[_27881]
        mem[mem[64] + 36] = mem[_27881]
        mem[mem[64] + 68 len ceil32(_29897)] = mem[_27881 + 32 len ceil32(_29897)]
        var170001 = ceil32(_29897)
        if ceil32(_29897) <= _29897:
            revert with 0, 32, mem[mem[64] + 36 len ceil32(_29897) + 32]
        mem[mem[64] + _29897 + 68] = 0
        revert with memory
          from mem[64]
           len ceil32(_29897) + _29849 + -mem[64] + 68
    mem[_27881 + 32 len _27108 + _27107 + 1] = call.data[calldata.size len _27108 + _27107 + 1]
    _28602 = mem[_15303]
    idx = 0
    s = 0
    while idx < _28602:
        if idx >= mem[_15303]:
            revert with 'NH{q', 50
        if s == -1:
            revert with 'NH{q', 17
        if s >= mem[_27881]:
            revert with 'NH{q', 50
        mem[s + _27881 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_15303')), 32))), 0) - 256
        if idx == -1:
            revert with 'NH{q', 17
        _28602 = mem[_15303]
        idx = idx + 1
        s = s + 1
        continue 
    if _28602 == -1:
        revert with 'NH{q', 17
    if _28602 >= mem[_27881]:
        revert with 'NH{q', 50
    mem[_28602 + _27881 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, "';'"), 0) + 256, 0) << (('mask_shl', 8, 248, -3, "';'"), 0) - 256
    _29706 = mem[_23820]
    idx = 0
    s = _28602 + 1
    while idx < _29706:
        if idx >= mem[_23820]:
            revert with 'NH{q', 50
        if s == -1:
            revert with 'NH{q', 17
        if s >= mem[_27881]:
            revert with 'NH{q', 50
        mem[s + _27881 + 32 len 8] = Mask(8, -(('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) + 256, 0) << (('mask_shl', 8, 248, -3, ('mem', ('range', ('add', 32, ('var', 0), ('var', '_23820')), 32))), 0) - 256
        if idx == -1:
            revert with 'NH{q', 17
        _29706 = mem[_23820]
        idx = idx + 1
        s = s + 1
        continue 
    if _12216 > _6180:
    _29850 = mem[64]
    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = 32
    _29898 = mem[_27881]
    mem[mem[64] + 36] = mem[_27881]
    mem[mem[64] + 68 len ceil32(_29898)] = mem[_27881 + 32 len ceil32(_29898)]
    var171001 = ceil32(_29898)
    if ceil32(_29898) <= _29898:
        revert with 0, 32, mem[mem[64] + 36 len ceil32(_29898) + 32]
    mem[mem[64] + _29898 + 68] = 0
    revert with memory
      from mem[64]
       len ceil32(_29898) + _29850 + -mem[64] + 68
}



}
